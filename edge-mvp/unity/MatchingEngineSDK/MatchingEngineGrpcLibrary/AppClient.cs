// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: app-client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DistributedMatchEngine {

  /// <summary>Holder for reflection information generated from app-client.proto</summary>
  public static partial class AppClientReflection {

    #region Descriptor
    /// <summary>File descriptor for app-client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AppClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBhcHAtY2xpZW50LnByb3RvEhhkaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUa",
            "CWxvYy5wcm90byLyAgoUTWF0Y2hfRW5naW5lX1JlcXVlc3QSCwoDdmVyGAEg",
            "ASgNEjEKBklkVHlwZRgCIAEoDjIhLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2lu",
            "ZS5JRFR5cGVzEgoKAklkGAMgASgJEgwKBFV1aWQYBCABKAkSEQoJQ2Fycmll",
            "cklEGAUgASgEEhMKC0NhcnJpZXJOYW1lGAYgASgJEg0KBVRvd2VyGAcgASgE",
            "EjIKC0dwc0xvY2F0aW9uGAggASgLMh0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5n",
            "aW5lLkxvYxINCgVBcHBJZBgJIAEoBBIQCghQcm90b2NvbBgKIAEoDBISCgpT",
            "ZXJ2ZXJQb3J0GAsgASgMEg8KB0Rldk5hbWUYDCABKAkSDwoHQXBwTmFtZRgN",
            "IAEoCRIPCgdBcHBWZXJzGA4gASgJEhUKDVNlc3Npb25Db29raWUYDyABKAkS",
            "FgoOVmVyaWZ5TG9jVG9rZW4YECABKAkitwIKEk1hdGNoX0VuZ2luZV9SZXBs",
            "eRILCgN2ZXIYASABKA0SCwoDdXJpGAIgASgJEhIKCnNlcnZpY2VfaXAYAyAB",
            "KAwSFAoMc2VydmljZV9wb3J0GAQgASgNEjgKEWNsb3VkbGV0X2xvY2F0aW9u",
            "GAUgASgLMh0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkxvYxJICgZTdGF0",
            "dXMYBiABKA4yOC5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuTWF0Y2hfRW5n",
            "aW5lX1JlcGx5LkZpbmRfU3RhdHVzEhUKDVNlc3Npb25Db29raWUYByABKAki",
            "QgoLRmluZF9TdGF0dXMSEAoMRklORF9VTktOT1dOEAASDgoKRklORF9GT1VO",
            "RBABEhEKDUZJTkRfTk9URk9VTkQQAiLZBAoXTWF0Y2hfRW5naW5lX0xvY19W",
            "ZXJpZnkSCwoDdmVyGAEgASgNElQKDHRvd2VyX3N0YXR1cxgCIAEoDjI+LmRp",
            "c3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5NYXRjaF9FbmdpbmVfTG9jX1Zlcmlm",
            "eS5Ub3dlcl9TdGF0dXMSYgoTZ3BzX2xvY2F0aW9uX3N0YXR1cxgDIAEoDjJF",
            "LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5NYXRjaF9FbmdpbmVfTG9jX1Zl",
            "cmlmeS5HUFNfTG9jYXRpb25fU3RhdHVzEiAKGEdQU19Mb2NhdGlvbl9BY2N1",
            "cmFjeV9LTRgEIAEoASJpCgxUb3dlcl9TdGF0dXMSEQoNVE9XRVJfVU5LTk9X",
            "ThAAEiAKHENPTk5FQ1RFRF9UT19TUEVDSUZJRURfVE9XRVIQARIkCiBOT1Rf",
            "Q09OTkVDVEVEX1RPX1NQRUNJRklFRF9UT1dFUhACIukBChNHUFNfTG9jYXRp",
            "b25fU3RhdHVzEg8KC0xPQ19VTktOT1dOEAASEAoMTE9DX1ZFUklGSUVEEAES",
            "HQoZTE9DX01JU01BVENIX1NBTUVfQ09VTlRSWRACEh4KGkxPQ19NSVNNQVRD",
            "SF9PVEhFUl9DT1VOVFJZEAMSHQoZTE9DX1JPQU1JTkdfQ09VTlRSWV9NQVRD",
            "SBAEEiAKHExPQ19ST0FNSU5HX0NPVU5UUllfTUlTTUFUQ0gQBRIaChZMT0Nf",
            "RVJST1JfVU5BVVRIT1JJWkVEEAYSEwoPTE9DX0VSUk9SX09USEVSEAcilwIK",
            "EE1hdGNoX0VuZ2luZV9Mb2MSCwoDdmVyGAEgASgNEkUKBlN0YXR1cxgCIAEo",
            "DjI1LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5NYXRjaF9FbmdpbmVfTG9j",
            "LkxvY19TdGF0dXMSEwoLQ2Fycmllck5hbWUYAyABKAkSDQoFVG93ZXIYBCAB",
            "KAQSNgoPTmV0d29ya0xvY2F0aW9uGAUgASgLMh0uZGlzdHJpYnV0ZWRfbWF0",
            "Y2hfZW5naW5lLkxvYxIVCg1TZXNzaW9uQ29va2llGAYgASgJIjwKCkxvY19T",
            "dGF0dXMSDwoLTE9DX1VOS05PV04QABINCglMT0NfRk9VTkQQARIOCgpMT0Nf",
            "REVOSUVEEAIi/gEKE01hdGNoX0VuZ2luZV9TdGF0dXMSCwoDdmVyGAEgASgN",
            "EkcKBlN0YXR1cxgCIAEoDjI3LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5N",
            "YXRjaF9FbmdpbmVfU3RhdHVzLk1FX1N0YXR1cxIRCglFcnJvckNvZGUYAyAB",
            "KA0SFQoNU2Vzc2lvbkNvb2tpZRgEIAEoCRITCgtHcm91cENvb2tpZRgFIAEo",
            "CRIWCg5Ub2tlblNlcnZlclVSSRgGIAEoCSI6CglNRV9TdGF0dXMSEAoMTUVf",
            "VU5ERUZJTkVEEAASDgoKTUVfU1VDQ0VTUxABEgsKB01FX0ZBSUwQAiI/CgtB",
            "cHBpbnN0YW5jZRIPCgdBcHBuYW1lGAEgASgJEhIKCkFwcHZlcnNpb24YAiAB",
            "KAkSCwoDVXJpGAMgASgJIsABChBDbG91ZGxldExvY2F0aW9uEhMKC0NhcnJp",
            "ZXJOYW1lGAEgASgJEhQKDENsb3VkbGV0TmFtZRgCIAEoCRIyCgtHcHNMb2Nh",
            "dGlvbhgDIAEoCzIdLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5Mb2MSEAoI",
            "RGlzdGFuY2UYBCABKAESOwoMQXBwaW5zdGFuY2VzGAUgAygLMiUuZGlzdHJp",
            "YnV0ZWRfbWF0Y2hfZW5naW5lLkFwcGluc3RhbmNlIvQBChpNYXRjaF9Fbmdp",
            "bmVfQ2xvdWRsZXRfTGlzdBILCgN2ZXIYASABKA0STgoGU3RhdHVzGAIgASgO",
            "Mj4uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLk1hdGNoX0VuZ2luZV9DbG91",
            "ZGxldF9MaXN0LkNMX1N0YXR1cxI9CglDbG91ZGxldHMYAyADKAsyKi5kaXN0",
            "cmlidXRlZF9tYXRjaF9lbmdpbmUuQ2xvdWRsZXRMb2NhdGlvbiI6CglDTF9T",
            "dGF0dXMSEAoMQ0xfVU5ERUZJTkVEEAASDgoKQ0xfU1VDQ0VTUxABEgsKB0NM",
            "X0ZBSUwQAiKZAwoSRHluYW1pY0xvY0dyb3VwQWRkEgsKA3ZlchgBIAEoDRIx",
            "CgZJZFR5cGUYAiABKA4yIS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuSURU",
            "eXBlcxIKCgJJZBgDIAEoCRIMCgRVdWlkGAQgASgJEhEKCUNhcnJpZXJJRBgF",
            "IAEoBBITCgtDYXJyaWVyTmFtZRgGIAEoCRINCgVUb3dlchgHIAEoBBIyCgtH",
            "cHNMb2NhdGlvbhgIIAEoCzIdLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5M",
            "b2MSDAoETGdJZBgJIAEoBBIVCg1TZXNzaW9uQ29va2llGAogASgJEkoKCENv",
            "bW1UeXBlGAsgASgOMjguZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkR5bmFt",
            "aWNMb2NHcm91cEFkZC5EbGdDb21tVHlwZRIQCghVc2VyRGF0YRgMIAEoCSI7",
            "CgtEbGdDb21tVHlwZRIQCgxEbGdVbmRlZmluZWQQABINCglEbGdTZWN1cmUQ",
            "ARILCgdEbGdPcGVuEAIqPQoHSURUeXBlcxIQCgxJRF9VTkRFRklORUQQABII",
            "CgRJTUVJEAESCgoGTVNJU0ROEAISCgoGSVBBRERSEAMywgUKEE1hdGNoX0Vu",
            "Z2luZV9BcGkSbgoMRmluZENsb3VkbGV0Ei4uZGlzdHJpYnV0ZWRfbWF0Y2hf",
            "ZW5naW5lLk1hdGNoX0VuZ2luZV9SZXF1ZXN0GiwuZGlzdHJpYnV0ZWRfbWF0",
            "Y2hfZW5naW5lLk1hdGNoX0VuZ2luZV9SZXBseSIAEnUKDlZlcmlmeUxvY2F0",
            "aW9uEi4uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLk1hdGNoX0VuZ2luZV9S",
            "ZXF1ZXN0GjEuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLk1hdGNoX0VuZ2lu",
            "ZV9Mb2NfVmVyaWZ5IgASawoLR2V0TG9jYXRpb24SLi5kaXN0cmlidXRlZF9t",
            "YXRjaF9lbmdpbmUuTWF0Y2hfRW5naW5lX1JlcXVlc3QaKi5kaXN0cmlidXRl",
            "ZF9tYXRjaF9lbmdpbmUuTWF0Y2hfRW5naW5lX0xvYyIAEnEKDlJlZ2lzdGVy",
            "Q2xpZW50Ei4uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLk1hdGNoX0VuZ2lu",
            "ZV9SZXF1ZXN0Gi0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLk1hdGNoX0Vu",
            "Z2luZV9TdGF0dXMiABJvCg5BZGRVc2VyVG9Hcm91cBIsLmRpc3RyaWJ1dGVk",
            "X21hdGNoX2VuZ2luZS5EeW5hbWljTG9jR3JvdXBBZGQaLS5kaXN0cmlidXRl",
            "ZF9tYXRjaF9lbmdpbmUuTWF0Y2hfRW5naW5lX1N0YXR1cyIAEnYKDEdldENs",
            "b3VkbGV0cxIuLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5NYXRjaF9Fbmdp",
            "bmVfUmVxdWVzdBo0LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5NYXRjaF9F",
            "bmdpbmVfQ2xvdWRsZXRfTGlzdCIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DistributedMatchEngine.LocReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DistributedMatchEngine.IDTypes), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Match_Engine_Request), global::DistributedMatchEngine.Match_Engine_Request.Parser, new[]{ "Ver", "IdType", "Id", "Uuid", "CarrierID", "CarrierName", "Tower", "GpsLocation", "AppId", "Protocol", "ServerPort", "DevName", "AppName", "AppVers", "SessionCookie", "VerifyLocToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Match_Engine_Reply), global::DistributedMatchEngine.Match_Engine_Reply.Parser, new[]{ "Ver", "Uri", "ServiceIp", "ServicePort", "CloudletLocation", "Status", "SessionCookie" }, null, new[]{ typeof(global::DistributedMatchEngine.Match_Engine_Reply.Types.Find_Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Match_Engine_Loc_Verify), global::DistributedMatchEngine.Match_Engine_Loc_Verify.Parser, new[]{ "Ver", "TowerStatus", "GpsLocationStatus", "GPSLocationAccuracyKM" }, null, new[]{ typeof(global::DistributedMatchEngine.Match_Engine_Loc_Verify.Types.Tower_Status), typeof(global::DistributedMatchEngine.Match_Engine_Loc_Verify.Types.GPS_Location_Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Match_Engine_Loc), global::DistributedMatchEngine.Match_Engine_Loc.Parser, new[]{ "Ver", "Status", "CarrierName", "Tower", "NetworkLocation", "SessionCookie" }, null, new[]{ typeof(global::DistributedMatchEngine.Match_Engine_Loc.Types.Loc_Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Match_Engine_Status), global::DistributedMatchEngine.Match_Engine_Status.Parser, new[]{ "Ver", "Status", "ErrorCode", "SessionCookie", "GroupCookie", "TokenServerURI" }, null, new[]{ typeof(global::DistributedMatchEngine.Match_Engine_Status.Types.ME_Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Appinstance), global::DistributedMatchEngine.Appinstance.Parser, new[]{ "Appname", "Appversion", "Uri" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.CloudletLocation), global::DistributedMatchEngine.CloudletLocation.Parser, new[]{ "CarrierName", "CloudletName", "GpsLocation", "Distance", "Appinstances" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Match_Engine_Cloudlet_List), global::DistributedMatchEngine.Match_Engine_Cloudlet_List.Parser, new[]{ "Ver", "Status", "Cloudlets" }, null, new[]{ typeof(global::DistributedMatchEngine.Match_Engine_Cloudlet_List.Types.CL_Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.DynamicLocGroupAdd), global::DistributedMatchEngine.DynamicLocGroupAdd.Parser, new[]{ "Ver", "IdType", "Id", "Uuid", "CarrierID", "CarrierName", "Tower", "GpsLocation", "LgId", "SessionCookie", "CommType", "UserData" }, null, new[]{ typeof(global::DistributedMatchEngine.DynamicLocGroupAdd.Types.DlgCommType) }, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum IDTypes {
    [pbr::OriginalName("ID_UNDEFINED")] IdUndefined = 0,
    [pbr::OriginalName("IMEI")] Imei = 1,
    [pbr::OriginalName("MSISDN")] Msisdn = 2,
    [pbr::OriginalName("IPADDR")] Ipaddr = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Match_Engine_Request : pb::IMessage<Match_Engine_Request> {
    private static readonly pb::MessageParser<Match_Engine_Request> _parser = new pb::MessageParser<Match_Engine_Request>(() => new Match_Engine_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Match_Engine_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Request(Match_Engine_Request other) : this() {
      ver_ = other.ver_;
      idType_ = other.idType_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      carrierID_ = other.carrierID_;
      carrierName_ = other.carrierName_;
      tower_ = other.tower_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      appId_ = other.appId_;
      protocol_ = other.protocol_;
      serverPort_ = other.serverPort_;
      devName_ = other.devName_;
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      sessionCookie_ = other.sessionCookie_;
      verifyLocToken_ = other.verifyLocToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Request Clone() {
      return new Match_Engine_Request(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "IdType" field.</summary>
    public const int IdTypeFieldNumber = 2;
    private global::DistributedMatchEngine.IDTypes idType_ = 0;
    /// <summary>
    /// User ID type - IMEI, MSISDN etc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.IDTypes IdType {
      get { return idType_; }
      set {
        idType_ = value;
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    /// <summary>
    /// Actual ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 4;
    private string uuid_ = "";
    /// <summary>
    /// App/OS generated ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarrierID" field.</summary>
    public const int CarrierIDFieldNumber = 5;
    private ulong carrierID_;
    /// <summary>
    /// The carrier ID that user is connected to ("Mobile Country Code")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CarrierID {
      get { return carrierID_; }
      set {
        carrierID_ = value;
      }
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 6;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tower" field.</summary>
    public const int TowerFieldNumber = 7;
    private ulong tower_;
    /// <summary>
    /// The tower that user is currently connected to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Tower {
      get { return tower_; }
      set {
        tower_ = value;
      }
    }

    /// <summary>Field number for the "GpsLocation" field.</summary>
    public const int GpsLocationFieldNumber = 8;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location of the user 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "AppId" field.</summary>
    public const int AppIdFieldNumber = 9;
    private ulong appId_;
    /// <summary>
    /// Edge-cloud assigned application ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }

    /// <summary>Field number for the "Protocol" field.</summary>
    public const int ProtocolFieldNumber = 10;
    private pb::ByteString protocol_ = pb::ByteString.Empty;
    /// <summary>
    /// Protocol application uses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Protocol {
      get { return protocol_; }
      set {
        protocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServerPort" field.</summary>
    public const int ServerPortFieldNumber = 11;
    private pb::ByteString serverPort_ = pb::ByteString.Empty;
    /// <summary>
    /// The protocol port on the server side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerPort {
      get { return serverPort_; }
      set {
        serverPort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DevName" field.</summary>
    public const int DevNameFieldNumber = 12;
    private string devName_ = "";
    /// <summary>
    /// App Developer Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevName {
      get { return devName_; }
      set {
        devName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppName" field.</summary>
    public const int AppNameFieldNumber = 13;
    private string appName_ = "";
    /// <summary>
    /// App Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppVers" field.</summary>
    public const int AppVersFieldNumber = 14;
    private string appVers_ = "";
    /// <summary>
    /// App Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 15;
    private string sessionCookie_ = "";
    /// <summary>
    /// DME Session Cookie; Not used for Register
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VerifyLocToken" field.</summary>
    public const int VerifyLocTokenFieldNumber = 16;
    private string verifyLocToken_ = "";
    /// <summary>
    /// token used for location verification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VerifyLocToken {
      get { return verifyLocToken_; }
      set {
        verifyLocToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Match_Engine_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Match_Engine_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (IdType != other.IdType) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (CarrierID != other.CarrierID) return false;
      if (CarrierName != other.CarrierName) return false;
      if (Tower != other.Tower) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (AppId != other.AppId) return false;
      if (Protocol != other.Protocol) return false;
      if (ServerPort != other.ServerPort) return false;
      if (DevName != other.DevName) return false;
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (VerifyLocToken != other.VerifyLocToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (IdType != 0) hash ^= IdType.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (CarrierID != 0UL) hash ^= CarrierID.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (Tower != 0UL) hash ^= Tower.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (AppId != 0UL) hash ^= AppId.GetHashCode();
      if (Protocol.Length != 0) hash ^= Protocol.GetHashCode();
      if (ServerPort.Length != 0) hash ^= ServerPort.GetHashCode();
      if (DevName.Length != 0) hash ^= DevName.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (VerifyLocToken.Length != 0) hash ^= VerifyLocToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (IdType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) IdType);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uuid);
      }
      if (CarrierID != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CarrierID);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CarrierName);
      }
      if (Tower != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(Tower);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(GpsLocation);
      }
      if (AppId != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(AppId);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(Protocol);
      }
      if (ServerPort.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(ServerPort);
      }
      if (DevName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DevName);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(AppVers);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(SessionCookie);
      }
      if (VerifyLocToken.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(VerifyLocToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (IdType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IdType);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (CarrierID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CarrierID);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (Tower != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tower);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (AppId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AppId);
      }
      if (Protocol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Protocol);
      }
      if (ServerPort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerPort);
      }
      if (DevName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevName);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (VerifyLocToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VerifyLocToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Match_Engine_Request other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.IdType != 0) {
        IdType = other.IdType;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.CarrierID != 0UL) {
        CarrierID = other.CarrierID;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.Tower != 0UL) {
        Tower = other.Tower;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.AppId != 0UL) {
        AppId = other.AppId;
      }
      if (other.Protocol.Length != 0) {
        Protocol = other.Protocol;
      }
      if (other.ServerPort.Length != 0) {
        ServerPort = other.ServerPort;
      }
      if (other.DevName.Length != 0) {
        DevName = other.DevName;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.VerifyLocToken.Length != 0) {
        VerifyLocToken = other.VerifyLocToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            idType_ = (global::DistributedMatchEngine.IDTypes) input.ReadEnum();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            Uuid = input.ReadString();
            break;
          }
          case 40: {
            CarrierID = input.ReadUInt64();
            break;
          }
          case 50: {
            CarrierName = input.ReadString();
            break;
          }
          case 56: {
            Tower = input.ReadUInt64();
            break;
          }
          case 66: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 72: {
            AppId = input.ReadUInt64();
            break;
          }
          case 82: {
            Protocol = input.ReadBytes();
            break;
          }
          case 90: {
            ServerPort = input.ReadBytes();
            break;
          }
          case 98: {
            DevName = input.ReadString();
            break;
          }
          case 106: {
            AppName = input.ReadString();
            break;
          }
          case 114: {
            AppVers = input.ReadString();
            break;
          }
          case 122: {
            SessionCookie = input.ReadString();
            break;
          }
          case 130: {
            VerifyLocToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Match_Engine_Reply : pb::IMessage<Match_Engine_Reply> {
    private static readonly pb::MessageParser<Match_Engine_Reply> _parser = new pb::MessageParser<Match_Engine_Reply>(() => new Match_Engine_Reply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Match_Engine_Reply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Reply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Reply(Match_Engine_Reply other) : this() {
      ver_ = other.ver_;
      uri_ = other.uri_;
      serviceIp_ = other.serviceIp_;
      servicePort_ = other.servicePort_;
      cloudletLocation_ = other.cloudletLocation_ != null ? other.cloudletLocation_.Clone() : null;
      status_ = other.status_;
      sessionCookie_ = other.sessionCookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Reply Clone() {
      return new Match_Engine_Reply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 2;
    private string uri_ = "";
    /// <summary>
    /// domain name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_ip" field.</summary>
    public const int ServiceIpFieldNumber = 3;
    private pb::ByteString serviceIp_ = pb::ByteString.Empty;
    /// <summary>
    /// ip of the app service
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServiceIp {
      get { return serviceIp_; }
      set {
        serviceIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_port" field.</summary>
    public const int ServicePortFieldNumber = 4;
    private uint servicePort_;
    /// <summary>
    /// port of the app service?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServicePort {
      get { return servicePort_; }
      set {
        servicePort_ = value;
      }
    }

    /// <summary>Field number for the "cloudlet_location" field.</summary>
    public const int CloudletLocationFieldNumber = 5;
    private global::DistributedMatchEngine.Loc cloudletLocation_;
    /// <summary>
    /// location of the cloudlet?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc CloudletLocation {
      get { return cloudletLocation_; }
      set {
        cloudletLocation_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 6;
    private global::DistributedMatchEngine.Match_Engine_Reply.Types.Find_Status status_ = 0;
    /// <summary>
    /// Status return
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Match_Engine_Reply.Types.Find_Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 7;
    private string sessionCookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Match_Engine_Reply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Match_Engine_Reply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Uri != other.Uri) return false;
      if (ServiceIp != other.ServiceIp) return false;
      if (ServicePort != other.ServicePort) return false;
      if (!object.Equals(CloudletLocation, other.CloudletLocation)) return false;
      if (Status != other.Status) return false;
      if (SessionCookie != other.SessionCookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (ServiceIp.Length != 0) hash ^= ServiceIp.GetHashCode();
      if (ServicePort != 0) hash ^= ServicePort.GetHashCode();
      if (cloudletLocation_ != null) hash ^= CloudletLocation.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (ServiceIp.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ServiceIp);
      }
      if (ServicePort != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ServicePort);
      }
      if (cloudletLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CloudletLocation);
      }
      if (Status != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SessionCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (ServiceIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServiceIp);
      }
      if (ServicePort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServicePort);
      }
      if (cloudletLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudletLocation);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Match_Engine_Reply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.ServiceIp.Length != 0) {
        ServiceIp = other.ServiceIp;
      }
      if (other.ServicePort != 0) {
        ServicePort = other.ServicePort;
      }
      if (other.cloudletLocation_ != null) {
        if (cloudletLocation_ == null) {
          cloudletLocation_ = new global::DistributedMatchEngine.Loc();
        }
        CloudletLocation.MergeFrom(other.CloudletLocation);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 26: {
            ServiceIp = input.ReadBytes();
            break;
          }
          case 32: {
            ServicePort = input.ReadUInt32();
            break;
          }
          case 42: {
            if (cloudletLocation_ == null) {
              cloudletLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(cloudletLocation_);
            break;
          }
          case 48: {
            status_ = (global::DistributedMatchEngine.Match_Engine_Reply.Types.Find_Status) input.ReadEnum();
            break;
          }
          case 58: {
            SessionCookie = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Match_Engine_Reply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Find_Status {
        [pbr::OriginalName("FIND_UNKNOWN")] FindUnknown = 0,
        [pbr::OriginalName("FIND_FOUND")] FindFound = 1,
        [pbr::OriginalName("FIND_NOTFOUND")] FindNotfound = 2,
      }

    }
    #endregion

  }

  public sealed partial class Match_Engine_Loc_Verify : pb::IMessage<Match_Engine_Loc_Verify> {
    private static readonly pb::MessageParser<Match_Engine_Loc_Verify> _parser = new pb::MessageParser<Match_Engine_Loc_Verify>(() => new Match_Engine_Loc_Verify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Match_Engine_Loc_Verify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Loc_Verify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Loc_Verify(Match_Engine_Loc_Verify other) : this() {
      ver_ = other.ver_;
      towerStatus_ = other.towerStatus_;
      gpsLocationStatus_ = other.gpsLocationStatus_;
      gPSLocationAccuracyKM_ = other.gPSLocationAccuracyKM_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Loc_Verify Clone() {
      return new Match_Engine_Loc_Verify(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "tower_status" field.</summary>
    public const int TowerStatusFieldNumber = 2;
    private global::DistributedMatchEngine.Match_Engine_Loc_Verify.Types.Tower_Status towerStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Match_Engine_Loc_Verify.Types.Tower_Status TowerStatus {
      get { return towerStatus_; }
      set {
        towerStatus_ = value;
      }
    }

    /// <summary>Field number for the "gps_location_status" field.</summary>
    public const int GpsLocationStatusFieldNumber = 3;
    private global::DistributedMatchEngine.Match_Engine_Loc_Verify.Types.GPS_Location_Status gpsLocationStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Match_Engine_Loc_Verify.Types.GPS_Location_Status GpsLocationStatus {
      get { return gpsLocationStatus_; }
      set {
        gpsLocationStatus_ = value;
      }
    }

    /// <summary>Field number for the "GPS_Location_Accuracy_KM" field.</summary>
    public const int GPSLocationAccuracyKMFieldNumber = 4;
    private double gPSLocationAccuracyKM_;
    /// <summary>
    /// location accuracy, the location is verified to 
    /// be within this number of kilometers.  Negative value
    /// means no verification was done 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GPSLocationAccuracyKM {
      get { return gPSLocationAccuracyKM_; }
      set {
        gPSLocationAccuracyKM_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Match_Engine_Loc_Verify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Match_Engine_Loc_Verify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (TowerStatus != other.TowerStatus) return false;
      if (GpsLocationStatus != other.GpsLocationStatus) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GPSLocationAccuracyKM, other.GPSLocationAccuracyKM)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (TowerStatus != 0) hash ^= TowerStatus.GetHashCode();
      if (GpsLocationStatus != 0) hash ^= GpsLocationStatus.GetHashCode();
      if (GPSLocationAccuracyKM != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GPSLocationAccuracyKM);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (TowerStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TowerStatus);
      }
      if (GpsLocationStatus != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GpsLocationStatus);
      }
      if (GPSLocationAccuracyKM != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(GPSLocationAccuracyKM);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (TowerStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TowerStatus);
      }
      if (GpsLocationStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GpsLocationStatus);
      }
      if (GPSLocationAccuracyKM != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Match_Engine_Loc_Verify other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.TowerStatus != 0) {
        TowerStatus = other.TowerStatus;
      }
      if (other.GpsLocationStatus != 0) {
        GpsLocationStatus = other.GpsLocationStatus;
      }
      if (other.GPSLocationAccuracyKM != 0D) {
        GPSLocationAccuracyKM = other.GPSLocationAccuracyKM;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            towerStatus_ = (global::DistributedMatchEngine.Match_Engine_Loc_Verify.Types.Tower_Status) input.ReadEnum();
            break;
          }
          case 24: {
            gpsLocationStatus_ = (global::DistributedMatchEngine.Match_Engine_Loc_Verify.Types.GPS_Location_Status) input.ReadEnum();
            break;
          }
          case 33: {
            GPSLocationAccuracyKM = input.ReadDouble();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Match_Engine_Loc_Verify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum Tower_Status {
        [pbr::OriginalName("TOWER_UNKNOWN")] TowerUnknown = 0,
        [pbr::OriginalName("CONNECTED_TO_SPECIFIED_TOWER")] ConnectedToSpecifiedTower = 1,
        [pbr::OriginalName("NOT_CONNECTED_TO_SPECIFIED_TOWER")] NotConnectedToSpecifiedTower = 2,
      }

      public enum GPS_Location_Status {
        [pbr::OriginalName("LOC_UNKNOWN")] LocUnknown = 0,
        [pbr::OriginalName("LOC_VERIFIED")] LocVerified = 1,
        [pbr::OriginalName("LOC_MISMATCH_SAME_COUNTRY")] LocMismatchSameCountry = 2,
        [pbr::OriginalName("LOC_MISMATCH_OTHER_COUNTRY")] LocMismatchOtherCountry = 3,
        [pbr::OriginalName("LOC_ROAMING_COUNTRY_MATCH")] LocRoamingCountryMatch = 4,
        [pbr::OriginalName("LOC_ROAMING_COUNTRY_MISMATCH")] LocRoamingCountryMismatch = 5,
        [pbr::OriginalName("LOC_ERROR_UNAUTHORIZED")] LocErrorUnauthorized = 6,
        [pbr::OriginalName("LOC_ERROR_OTHER")] LocErrorOther = 7,
      }

    }
    #endregion

  }

  public sealed partial class Match_Engine_Loc : pb::IMessage<Match_Engine_Loc> {
    private static readonly pb::MessageParser<Match_Engine_Loc> _parser = new pb::MessageParser<Match_Engine_Loc>(() => new Match_Engine_Loc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Match_Engine_Loc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Loc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Loc(Match_Engine_Loc other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      carrierName_ = other.carrierName_;
      tower_ = other.tower_;
      networkLocation_ = other.networkLocation_ != null ? other.networkLocation_.Clone() : null;
      sessionCookie_ = other.sessionCookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Loc Clone() {
      return new Match_Engine_Loc(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.Match_Engine_Loc.Types.Loc_Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Match_Engine_Loc.Types.Loc_Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tower" field.</summary>
    public const int TowerFieldNumber = 4;
    private ulong tower_;
    /// <summary>
    /// The tower that user is currently connected to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Tower {
      get { return tower_; }
      set {
        tower_ = value;
      }
    }

    /// <summary>Field number for the "NetworkLocation" field.</summary>
    public const int NetworkLocationFieldNumber = 5;
    private global::DistributedMatchEngine.Loc networkLocation_;
    /// <summary>
    /// The GPS location of the user 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc NetworkLocation {
      get { return networkLocation_; }
      set {
        networkLocation_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 6;
    private string sessionCookie_ = "";
    /// <summary>
    /// DME Session Cookie
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Match_Engine_Loc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Match_Engine_Loc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (CarrierName != other.CarrierName) return false;
      if (Tower != other.Tower) return false;
      if (!object.Equals(NetworkLocation, other.NetworkLocation)) return false;
      if (SessionCookie != other.SessionCookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (Tower != 0UL) hash ^= Tower.GetHashCode();
      if (networkLocation_ != null) hash ^= NetworkLocation.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (Tower != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Tower);
      }
      if (networkLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NetworkLocation);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SessionCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (Tower != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tower);
      }
      if (networkLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkLocation);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Match_Engine_Loc other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.Tower != 0UL) {
        Tower = other.Tower;
      }
      if (other.networkLocation_ != null) {
        if (networkLocation_ == null) {
          networkLocation_ = new global::DistributedMatchEngine.Loc();
        }
        NetworkLocation.MergeFrom(other.NetworkLocation);
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.Match_Engine_Loc.Types.Loc_Status) input.ReadEnum();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 32: {
            Tower = input.ReadUInt64();
            break;
          }
          case 42: {
            if (networkLocation_ == null) {
              networkLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(networkLocation_);
            break;
          }
          case 50: {
            SessionCookie = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Match_Engine_Loc message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum Loc_Status {
        [pbr::OriginalName("LOC_UNKNOWN")] LocUnknown = 0,
        [pbr::OriginalName("LOC_FOUND")] LocFound = 1,
        /// <summary>
        /// The user does not allow his location to be tracked
        /// </summary>
        [pbr::OriginalName("LOC_DENIED")] LocDenied = 2,
      }

    }
    #endregion

  }

  public sealed partial class Match_Engine_Status : pb::IMessage<Match_Engine_Status> {
    private static readonly pb::MessageParser<Match_Engine_Status> _parser = new pb::MessageParser<Match_Engine_Status>(() => new Match_Engine_Status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Match_Engine_Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Status(Match_Engine_Status other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      errorCode_ = other.errorCode_;
      sessionCookie_ = other.sessionCookie_;
      groupCookie_ = other.groupCookie_;
      tokenServerURI_ = other.tokenServerURI_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Status Clone() {
      return new Match_Engine_Status(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.Match_Engine_Status.Types.ME_Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Match_Engine_Status.Types.ME_Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    private uint errorCode_;
    /// <summary>
    /// Error Code based on Failure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 4;
    private string sessionCookie_ = "";
    /// <summary>
    /// DME Session Cookie
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GroupCookie" field.</summary>
    public const int GroupCookieFieldNumber = 5;
    private string groupCookie_ = "";
    /// <summary>
    /// Group Cookie for Secure Group Communication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupCookie {
      get { return groupCookie_; }
      set {
        groupCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TokenServerURI" field.</summary>
    public const int TokenServerURIFieldNumber = 6;
    private string tokenServerURI_ = "";
    /// <summary>
    /// URI for Token Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenServerURI {
      get { return tokenServerURI_; }
      set {
        tokenServerURI_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Match_Engine_Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Match_Engine_Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (GroupCookie != other.GroupCookie) return false;
      if (TokenServerURI != other.TokenServerURI) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (GroupCookie.Length != 0) hash ^= GroupCookie.GetHashCode();
      if (TokenServerURI.Length != 0) hash ^= TokenServerURI.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionCookie);
      }
      if (GroupCookie.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupCookie);
      }
      if (TokenServerURI.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TokenServerURI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorCode);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (GroupCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupCookie);
      }
      if (TokenServerURI.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenServerURI);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Match_Engine_Status other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.GroupCookie.Length != 0) {
        GroupCookie = other.GroupCookie;
      }
      if (other.TokenServerURI.Length != 0) {
        TokenServerURI = other.TokenServerURI;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.Match_Engine_Status.Types.ME_Status) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 34: {
            SessionCookie = input.ReadString();
            break;
          }
          case 42: {
            GroupCookie = input.ReadString();
            break;
          }
          case 50: {
            TokenServerURI = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Match_Engine_Status message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum ME_Status {
        [pbr::OriginalName("ME_UNDEFINED")] MeUndefined = 0,
        [pbr::OriginalName("ME_SUCCESS")] MeSuccess = 1,
        [pbr::OriginalName("ME_FAIL")] MeFail = 2,
      }

    }
    #endregion

  }

  public sealed partial class Appinstance : pb::IMessage<Appinstance> {
    private static readonly pb::MessageParser<Appinstance> _parser = new pb::MessageParser<Appinstance>(() => new Appinstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Appinstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance(Appinstance other) : this() {
      appname_ = other.appname_;
      appversion_ = other.appversion_;
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance Clone() {
      return new Appinstance(this);
    }

    /// <summary>Field number for the "Appname" field.</summary>
    public const int AppnameFieldNumber = 1;
    private string appname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Appname {
      get { return appname_; }
      set {
        appname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Appversion" field.</summary>
    public const int AppversionFieldNumber = 2;
    private string appversion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Appversion {
      get { return appversion_; }
      set {
        appversion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Uri" field.</summary>
    public const int UriFieldNumber = 3;
    private string uri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Appinstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Appinstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appname != other.Appname) return false;
      if (Appversion != other.Appversion) return false;
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Appname.Length != 0) hash ^= Appname.GetHashCode();
      if (Appversion.Length != 0) hash ^= Appversion.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Appname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Appname);
      }
      if (Appversion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Appversion);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Appname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Appname);
      }
      if (Appversion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Appversion);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Appinstance other) {
      if (other == null) {
        return;
      }
      if (other.Appname.Length != 0) {
        Appname = other.Appname;
      }
      if (other.Appversion.Length != 0) {
        Appversion = other.Appversion;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Appname = input.ReadString();
            break;
          }
          case 18: {
            Appversion = input.ReadString();
            break;
          }
          case 26: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloudletLocation : pb::IMessage<CloudletLocation> {
    private static readonly pb::MessageParser<CloudletLocation> _parser = new pb::MessageParser<CloudletLocation>(() => new CloudletLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudletLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation(CloudletLocation other) : this() {
      carrierName_ = other.carrierName_;
      cloudletName_ = other.cloudletName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      distance_ = other.distance_;
      appinstances_ = other.appinstances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation Clone() {
      return new CloudletLocation(this);
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 1;
    private string carrierName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CloudletName" field.</summary>
    public const int CloudletNameFieldNumber = 2;
    private string cloudletName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CloudletName {
      get { return cloudletName_; }
      set {
        cloudletName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GpsLocation" field.</summary>
    public const int GpsLocationFieldNumber = 3;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "Distance" field.</summary>
    public const int DistanceFieldNumber = 4;
    private double distance_;
    /// <summary>
    ///distance of cloudlet vs loc in request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "Appinstances" field.</summary>
    public const int AppinstancesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.Appinstance> _repeated_appinstances_codec
        = pb::FieldCodec.ForMessage(42, global::DistributedMatchEngine.Appinstance.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.Appinstance> appinstances_ = new pbc::RepeatedField<global::DistributedMatchEngine.Appinstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.Appinstance> Appinstances {
      get { return appinstances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudletLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudletLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CarrierName != other.CarrierName) return false;
      if (CloudletName != other.CloudletName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Distance, other.Distance)) return false;
      if(!appinstances_.Equals(other.appinstances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (CloudletName.Length != 0) hash ^= CloudletName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (Distance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Distance);
      hash ^= appinstances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CarrierName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CarrierName);
      }
      if (CloudletName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CloudletName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GpsLocation);
      }
      if (Distance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Distance);
      }
      appinstances_.WriteTo(output, _repeated_appinstances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (CloudletName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CloudletName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (Distance != 0D) {
        size += 1 + 8;
      }
      size += appinstances_.CalculateSize(_repeated_appinstances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudletLocation other) {
      if (other == null) {
        return;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.CloudletName.Length != 0) {
        CloudletName = other.CloudletName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.Distance != 0D) {
        Distance = other.Distance;
      }
      appinstances_.Add(other.appinstances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CarrierName = input.ReadString();
            break;
          }
          case 18: {
            CloudletName = input.ReadString();
            break;
          }
          case 26: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 33: {
            Distance = input.ReadDouble();
            break;
          }
          case 42: {
            appinstances_.AddEntriesFrom(input, _repeated_appinstances_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Match_Engine_Cloudlet_List : pb::IMessage<Match_Engine_Cloudlet_List> {
    private static readonly pb::MessageParser<Match_Engine_Cloudlet_List> _parser = new pb::MessageParser<Match_Engine_Cloudlet_List>(() => new Match_Engine_Cloudlet_List());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Match_Engine_Cloudlet_List> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Cloudlet_List() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Cloudlet_List(Match_Engine_Cloudlet_List other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      cloudlets_ = other.cloudlets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match_Engine_Cloudlet_List Clone() {
      return new Match_Engine_Cloudlet_List(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.Match_Engine_Cloudlet_List.Types.CL_Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Match_Engine_Cloudlet_List.Types.CL_Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Cloudlets" field.</summary>
    public const int CloudletsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.CloudletLocation> _repeated_cloudlets_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.CloudletLocation.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation> cloudlets_ = new pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation> Cloudlets {
      get { return cloudlets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Match_Engine_Cloudlet_List);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Match_Engine_Cloudlet_List other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if(!cloudlets_.Equals(other.cloudlets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= cloudlets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      cloudlets_.WriteTo(output, _repeated_cloudlets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += cloudlets_.CalculateSize(_repeated_cloudlets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Match_Engine_Cloudlet_List other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      cloudlets_.Add(other.cloudlets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.Match_Engine_Cloudlet_List.Types.CL_Status) input.ReadEnum();
            break;
          }
          case 26: {
            cloudlets_.AddEntriesFrom(input, _repeated_cloudlets_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Match_Engine_Cloudlet_List message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum CL_Status {
        [pbr::OriginalName("CL_UNDEFINED")] ClUndefined = 0,
        [pbr::OriginalName("CL_SUCCESS")] ClSuccess = 1,
        [pbr::OriginalName("CL_FAIL")] ClFail = 2,
      }

    }
    #endregion

  }

  public sealed partial class DynamicLocGroupAdd : pb::IMessage<DynamicLocGroupAdd> {
    private static readonly pb::MessageParser<DynamicLocGroupAdd> _parser = new pb::MessageParser<DynamicLocGroupAdd>(() => new DynamicLocGroupAdd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicLocGroupAdd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupAdd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupAdd(DynamicLocGroupAdd other) : this() {
      ver_ = other.ver_;
      idType_ = other.idType_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      carrierID_ = other.carrierID_;
      carrierName_ = other.carrierName_;
      tower_ = other.tower_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      lgId_ = other.lgId_;
      sessionCookie_ = other.sessionCookie_;
      commType_ = other.commType_;
      userData_ = other.userData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupAdd Clone() {
      return new DynamicLocGroupAdd(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "IdType" field.</summary>
    public const int IdTypeFieldNumber = 2;
    private global::DistributedMatchEngine.IDTypes idType_ = 0;
    /// <summary>
    /// User ID type - IMEI, MSISDN etc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.IDTypes IdType {
      get { return idType_; }
      set {
        idType_ = value;
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    /// <summary>
    /// Actual ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 4;
    private string uuid_ = "";
    /// <summary>
    /// App/OS generated ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarrierID" field.</summary>
    public const int CarrierIDFieldNumber = 5;
    private ulong carrierID_;
    /// <summary>
    /// The carrier ID that user is connected to ("Mobile Country Code")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CarrierID {
      get { return carrierID_; }
      set {
        carrierID_ = value;
      }
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 6;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tower" field.</summary>
    public const int TowerFieldNumber = 7;
    private ulong tower_;
    /// <summary>
    /// The tower that user is currently connected to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Tower {
      get { return tower_; }
      set {
        tower_ = value;
      }
    }

    /// <summary>Field number for the "GpsLocation" field.</summary>
    public const int GpsLocationFieldNumber = 8;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location of the user 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "LgId" field.</summary>
    public const int LgIdFieldNumber = 9;
    private ulong lgId_;
    /// <summary>
    /// Dynamic Location Group Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LgId {
      get { return lgId_; }
      set {
        lgId_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 10;
    private string sessionCookie_ = "";
    /// <summary>
    /// DME Session Cookie
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CommType" field.</summary>
    public const int CommTypeFieldNumber = 11;
    private global::DistributedMatchEngine.DynamicLocGroupAdd.Types.DlgCommType commType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.DynamicLocGroupAdd.Types.DlgCommType CommType {
      get { return commType_; }
      set {
        commType_ = value;
      }
    }

    /// <summary>Field number for the "UserData" field.</summary>
    public const int UserDataFieldNumber = 12;
    private string userData_ = "";
    /// <summary>
    /// Unused
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserData {
      get { return userData_; }
      set {
        userData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicLocGroupAdd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicLocGroupAdd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (IdType != other.IdType) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (CarrierID != other.CarrierID) return false;
      if (CarrierName != other.CarrierName) return false;
      if (Tower != other.Tower) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (LgId != other.LgId) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CommType != other.CommType) return false;
      if (UserData != other.UserData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (IdType != 0) hash ^= IdType.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (CarrierID != 0UL) hash ^= CarrierID.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (Tower != 0UL) hash ^= Tower.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (LgId != 0UL) hash ^= LgId.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CommType != 0) hash ^= CommType.GetHashCode();
      if (UserData.Length != 0) hash ^= UserData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (IdType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) IdType);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uuid);
      }
      if (CarrierID != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CarrierID);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CarrierName);
      }
      if (Tower != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(Tower);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(GpsLocation);
      }
      if (LgId != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(LgId);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SessionCookie);
      }
      if (CommType != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CommType);
      }
      if (UserData.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(UserData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (IdType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IdType);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (CarrierID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CarrierID);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (Tower != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tower);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (LgId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LgId);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CommType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommType);
      }
      if (UserData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicLocGroupAdd other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.IdType != 0) {
        IdType = other.IdType;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.CarrierID != 0UL) {
        CarrierID = other.CarrierID;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.Tower != 0UL) {
        Tower = other.Tower;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.LgId != 0UL) {
        LgId = other.LgId;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CommType != 0) {
        CommType = other.CommType;
      }
      if (other.UserData.Length != 0) {
        UserData = other.UserData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            idType_ = (global::DistributedMatchEngine.IDTypes) input.ReadEnum();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            Uuid = input.ReadString();
            break;
          }
          case 40: {
            CarrierID = input.ReadUInt64();
            break;
          }
          case 50: {
            CarrierName = input.ReadString();
            break;
          }
          case 56: {
            Tower = input.ReadUInt64();
            break;
          }
          case 66: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 72: {
            LgId = input.ReadUInt64();
            break;
          }
          case 82: {
            SessionCookie = input.ReadString();
            break;
          }
          case 88: {
            commType_ = (global::DistributedMatchEngine.DynamicLocGroupAdd.Types.DlgCommType) input.ReadEnum();
            break;
          }
          case 98: {
            UserData = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DynamicLocGroupAdd message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Use Secure communication or Open with the group
      /// </summary>
      public enum DlgCommType {
        [pbr::OriginalName("DlgUndefined")] DlgUndefined = 0,
        [pbr::OriginalName("DlgSecure")] DlgSecure = 1,
        [pbr::OriginalName("DlgOpen")] DlgOpen = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
