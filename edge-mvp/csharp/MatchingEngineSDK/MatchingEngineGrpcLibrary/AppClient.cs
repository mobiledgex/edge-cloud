// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: app-client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DistributedMatchEngine {

  /// <summary>Holder for reflection information generated from app-client.proto</summary>
  public static partial class AppClientReflection {

    #region Descriptor
    /// <summary>File descriptor for app-client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AppClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBhcHAtY2xpZW50LnByb3RvEhhkaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUa",
            "HGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aCWxvYy5wcm90bxoPYXBw",
            "Y29tbW9uLnByb3RvIlcKFVJlZ2lzdGVyQ2xpZW50UmVxdWVzdBILCgN2ZXIY",
            "ASABKA0SDwoHRGV2TmFtZRgCIAEoCRIPCgdBcHBOYW1lGAMgASgJEg8KB0Fw",
            "cFZlcnMYBCABKAkiiAEKE1JlZ2lzdGVyQ2xpZW50UmVwbHkSCwoDdmVyGAEg",
            "ASgNEjUKBnN0YXR1cxgCIAEoDjIlLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2lu",
            "ZS5SZXBseVN0YXR1cxIVCg1TZXNzaW9uQ29va2llGAMgASgJEhYKDlRva2Vu",
            "U2VydmVyVVJJGAQgASgJIoIBChNGaW5kQ2xvdWRsZXRSZXF1ZXN0EgsKA3Zl",
            "chgBIAEoDRIVCg1TZXNzaW9uQ29va2llGAIgASgJEhMKC0NhcnJpZXJOYW1l",
            "GAMgASgJEjIKC0dwc0xvY2F0aW9uGAQgASgLMh0uZGlzdHJpYnV0ZWRfbWF0",
            "Y2hfZW5naW5lLkxvYyKlAgoRRmluZENsb3VkbGV0UmVwbHkSCwoDdmVyGAEg",
            "ASgNEkYKBnN0YXR1cxgCIAEoDjI2LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2lu",
            "ZS5GaW5kQ2xvdWRsZXRSZXBseS5GaW5kU3RhdHVzEgwKBEZRRE4YAyABKAkS",
            "MAoFcG9ydHMYBCADKAsyIS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuQXBw",
            "UG9ydBI4ChFjbG91ZGxldF9sb2NhdGlvbhgFIAEoCzIdLmRpc3RyaWJ1dGVk",
            "X21hdGNoX2VuZ2luZS5Mb2MiQQoKRmluZFN0YXR1cxIQCgxGSU5EX1VOS05P",
            "V04QABIOCgpGSU5EX0ZPVU5EEAESEQoNRklORF9OT1RGT1VORBACIpwBChVW",
            "ZXJpZnlMb2NhdGlvblJlcXVlc3QSCwoDdmVyGAEgASgNEhUKDVNlc3Npb25D",
            "b29raWUYAiABKAkSEwoLQ2Fycmllck5hbWUYAyABKAkSMgoLR3BzTG9jYXRp",
            "b24YBCABKAsyHS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuTG9jEhYKDlZl",
            "cmlmeUxvY1Rva2VuGAUgASgJIs0EChNWZXJpZnlMb2NhdGlvblJlcGx5EgsK",
            "A3ZlchgBIAEoDRJQCgx0b3dlcl9zdGF0dXMYAiABKA4yOi5kaXN0cmlidXRl",
            "ZF9tYXRjaF9lbmdpbmUuVmVyaWZ5TG9jYXRpb25SZXBseS5Ub3dlcl9TdGF0",
            "dXMSXgoTZ3BzX2xvY2F0aW9uX3N0YXR1cxgDIAEoDjJBLmRpc3RyaWJ1dGVk",
            "X21hdGNoX2VuZ2luZS5WZXJpZnlMb2NhdGlvblJlcGx5LkdQU19Mb2NhdGlv",
            "bl9TdGF0dXMSIAoYR1BTX0xvY2F0aW9uX0FjY3VyYWN5X0tNGAQgASgBImkK",
            "DFRvd2VyX1N0YXR1cxIRCg1UT1dFUl9VTktOT1dOEAASIAocQ09OTkVDVEVE",
            "X1RPX1NQRUNJRklFRF9UT1dFUhABEiQKIE5PVF9DT05ORUNURURfVE9fU1BF",
            "Q0lGSUVEX1RPV0VSEAIi6QEKE0dQU19Mb2NhdGlvbl9TdGF0dXMSDwoLTE9D",
            "X1VOS05PV04QABIQCgxMT0NfVkVSSUZJRUQQARIdChlMT0NfTUlTTUFUQ0hf",
            "U0FNRV9DT1VOVFJZEAISHgoaTE9DX01JU01BVENIX09USEVSX0NPVU5UUlkQ",
            "AxIdChlMT0NfUk9BTUlOR19DT1VOVFJZX01BVENIEAQSIAocTE9DX1JPQU1J",
            "TkdfQ09VTlRSWV9NSVNNQVRDSBAFEhoKFkxPQ19FUlJPUl9VTkFVVEhPUkla",
            "RUQQBhITCg9MT0NfRVJST1JfT1RIRVIQByJNChJHZXRMb2NhdGlvblJlcXVl",
            "c3QSCwoDdmVyGAEgASgNEhUKDVNlc3Npb25Db29raWUYAiABKAkSEwoLQ2Fy",
            "cmllck5hbWUYAyABKAkigAIKEEdldExvY2F0aW9uUmVwbHkSCwoDdmVyGAEg",
            "ASgNEkUKBlN0YXR1cxgCIAEoDjI1LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2lu",
            "ZS5HZXRMb2NhdGlvblJlcGx5LkxvY19TdGF0dXMSEwoLQ2Fycmllck5hbWUY",
            "AyABKAkSDQoFVG93ZXIYBCABKAQSNgoPTmV0d29ya0xvY2F0aW9uGAUgASgL",
            "Mh0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkxvYyI8CgpMb2NfU3RhdHVz",
            "Eg8KC0xPQ19VTktOT1dOEAASDQoJTE9DX0ZPVU5EEAESDgoKTE9DX0RFTklF",
            "RBACIoEBChJBcHBJbnN0TGlzdFJlcXVlc3QSCwoDdmVyGAEgASgNEhUKDVNl",
            "c3Npb25Db29raWUYAiABKAkSEwoLQ2Fycmllck5hbWUYAyABKAkSMgoLR3Bz",
            "TG9jYXRpb24YBCABKAsyHS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuTG9j",
            "IkAKC0FwcGluc3RhbmNlEg8KB0FwcG5hbWUYASABKAkSEgoKQXBwdmVyc2lv",
            "bhgCIAEoCRIMCgRGUUROGAMgASgJIsABChBDbG91ZGxldExvY2F0aW9uEhMK",
            "C0NhcnJpZXJOYW1lGAEgASgJEhQKDENsb3VkbGV0TmFtZRgCIAEoCRIyCgtH",
            "cHNMb2NhdGlvbhgDIAEoCzIdLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5M",
            "b2MSEAoIRGlzdGFuY2UYBCABKAESOwoMQXBwaW5zdGFuY2VzGAUgAygLMiUu",
            "ZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkFwcGluc3RhbmNlIuABChBBcHBJ",
            "bnN0TGlzdFJlcGx5EgsKA3ZlchgBIAEoDRJECgZTdGF0dXMYAiABKA4yNC5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuQXBwSW5zdExpc3RSZXBseS5BSV9T",
            "dGF0dXMSPQoJQ2xvdWRsZXRzGAMgAygLMiouZGlzdHJpYnV0ZWRfbWF0Y2hf",
            "ZW5naW5lLkNsb3VkbGV0TG9jYXRpb24iOgoJQUlfU3RhdHVzEhAKDEFJX1VO",
            "REVGSU5FRBAAEg4KCkFJX1NVQ0NFU1MQARILCgdBSV9GQUlMEAIi6QEKFkR5",
            "bmFtaWNMb2NHcm91cFJlcXVlc3QSCwoDdmVyGAEgASgNEhUKDVNlc3Npb25D",
            "b29raWUYAiABKAkSDAoETGdJZBgDIAEoBBJOCghDb21tVHlwZRgLIAEoDjI8",
            "LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5EeW5hbWljTG9jR3JvdXBSZXF1",
            "ZXN0LkRsZ0NvbW1UeXBlEhAKCFVzZXJEYXRhGAwgASgJIjsKC0RsZ0NvbW1U",
            "eXBlEhAKDERsZ1VuZGVmaW5lZBAAEg0KCURsZ1NlY3VyZRABEgsKB0RsZ09w",
            "ZW4QAiKCAQoURHluYW1pY0xvY0dyb3VwUmVwbHkSCwoDdmVyGAEgASgNEjUK",
            "BnN0YXR1cxgCIAEoDjIlLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5SZXBs",
            "eVN0YXR1cxIRCglFcnJvckNvZGUYAyABKA0SEwoLR3JvdXBDb29raWUYBSAB",
            "KAkqPQoHSURUeXBlcxIQCgxJRF9VTkRFRklORUQQABIICgRJTUVJEAESCgoG",
            "TVNJU0ROEAISCgoGSVBBRERSEAMqPAoLUmVwbHlTdGF0dXMSEAoMUlNfVU5E",
            "RUZJTkVEEAASDgoKUlNfU1VDQ0VTUxABEgsKB1JTX0ZBSUwQAjLmBgoQTWF0",
            "Y2hfRW5naW5lX0FwaRKPAQoOUmVnaXN0ZXJDbGllbnQSLy5kaXN0cmlidXRl",
            "ZF9tYXRjaF9lbmdpbmUuUmVnaXN0ZXJDbGllbnRSZXF1ZXN0Gi0uZGlzdHJp",
            "YnV0ZWRfbWF0Y2hfZW5naW5lLlJlZ2lzdGVyQ2xpZW50UmVwbHkiHYLT5JMC",
            "FyISL3YxL3JlZ2lzdGVyY2xpZW50OgEqEocBCgxGaW5kQ2xvdWRsZXQSLS5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuRmluZENsb3VkbGV0UmVxdWVzdBor",
            "LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5GaW5kQ2xvdWRsZXRSZXBseSIb",
            "gtPkkwIVIhAvdjEvZmluZGNsb3VkbGV0OgEqEo8BCg5WZXJpZnlMb2NhdGlv",
            "bhIvLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5WZXJpZnlMb2NhdGlvblJl",
            "cXVlc3QaLS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuVmVyaWZ5TG9jYXRp",
            "b25SZXBseSIdgtPkkwIXIhIvdjEvdmVyaWZ5bG9jYXRpb246ASoSgwEKC0dl",
            "dExvY2F0aW9uEiwuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkdldExvY2F0",
            "aW9uUmVxdWVzdBoqLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5HZXRMb2Nh",
            "dGlvblJlcGx5IhqC0+STAhQiDy92MS9nZXRsb2NhdGlvbjoBKhKRAQoOQWRk",
            "VXNlclRvR3JvdXASMC5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuRHluYW1p",
            "Y0xvY0dyb3VwUmVxdWVzdBouLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5E",
            "eW5hbWljTG9jR3JvdXBSZXBseSIdgtPkkwIXIhIvdjEvYWRkdXNlcnRvZ3Jv",
            "dXA6ASoSiQEKDkdldEFwcEluc3RMaXN0EiwuZGlzdHJpYnV0ZWRfbWF0Y2hf",
            "ZW5naW5lLkFwcEluc3RMaXN0UmVxdWVzdBoqLmRpc3RyaWJ1dGVkX21hdGNo",
            "X2VuZ2luZS5BcHBJbnN0TGlzdFJlcGx5Ih2C0+STAhciEi92MS9nZXRhcHBp",
            "bnN0bGlzdDoBKmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::DistributedMatchEngine.LocReflection.Descriptor, global::DistributedMatchEngine.AppcommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DistributedMatchEngine.IDTypes), typeof(global::DistributedMatchEngine.ReplyStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.RegisterClientRequest), global::DistributedMatchEngine.RegisterClientRequest.Parser, new[]{ "Ver", "DevName", "AppName", "AppVers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.RegisterClientReply), global::DistributedMatchEngine.RegisterClientReply.Parser, new[]{ "Ver", "Status", "SessionCookie", "TokenServerURI" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FindCloudletRequest), global::DistributedMatchEngine.FindCloudletRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FindCloudletReply), global::DistributedMatchEngine.FindCloudletReply.Parser, new[]{ "Ver", "Status", "FQDN", "Ports", "CloudletLocation" }, null, new[]{ typeof(global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.VerifyLocationRequest), global::DistributedMatchEngine.VerifyLocationRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation", "VerifyLocToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.VerifyLocationReply), global::DistributedMatchEngine.VerifyLocationReply.Parser, new[]{ "Ver", "TowerStatus", "GpsLocationStatus", "GPSLocationAccuracyKM" }, null, new[]{ typeof(global::DistributedMatchEngine.VerifyLocationReply.Types.Tower_Status), typeof(global::DistributedMatchEngine.VerifyLocationReply.Types.GPS_Location_Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.GetLocationRequest), global::DistributedMatchEngine.GetLocationRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.GetLocationReply), global::DistributedMatchEngine.GetLocationReply.Parser, new[]{ "Ver", "Status", "CarrierName", "Tower", "NetworkLocation" }, null, new[]{ typeof(global::DistributedMatchEngine.GetLocationReply.Types.Loc_Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppInstListRequest), global::DistributedMatchEngine.AppInstListRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Appinstance), global::DistributedMatchEngine.Appinstance.Parser, new[]{ "Appname", "Appversion", "FQDN" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.CloudletLocation), global::DistributedMatchEngine.CloudletLocation.Parser, new[]{ "CarrierName", "CloudletName", "GpsLocation", "Distance", "Appinstances" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppInstListReply), global::DistributedMatchEngine.AppInstListReply.Parser, new[]{ "Ver", "Status", "Cloudlets" }, null, new[]{ typeof(global::DistributedMatchEngine.AppInstListReply.Types.AI_Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.DynamicLocGroupRequest), global::DistributedMatchEngine.DynamicLocGroupRequest.Parser, new[]{ "Ver", "SessionCookie", "LgId", "CommType", "UserData" }, null, new[]{ typeof(global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.DynamicLocGroupReply), global::DistributedMatchEngine.DynamicLocGroupReply.Parser, new[]{ "Ver", "Status", "ErrorCode", "GroupCookie" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum IDTypes {
    [pbr::OriginalName("ID_UNDEFINED")] IdUndefined = 0,
    [pbr::OriginalName("IMEI")] Imei = 1,
    [pbr::OriginalName("MSISDN")] Msisdn = 2,
    [pbr::OriginalName("IPADDR")] Ipaddr = 3,
  }

  public enum ReplyStatus {
    [pbr::OriginalName("RS_UNDEFINED")] RsUndefined = 0,
    [pbr::OriginalName("RS_SUCCESS")] RsSuccess = 1,
    [pbr::OriginalName("RS_FAIL")] RsFail = 2,
  }

  #endregion

  #region Messages
  public sealed partial class RegisterClientRequest : pb::IMessage<RegisterClientRequest> {
    private static readonly pb::MessageParser<RegisterClientRequest> _parser = new pb::MessageParser<RegisterClientRequest>(() => new RegisterClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest(RegisterClientRequest other) : this() {
      ver_ = other.ver_;
      devName_ = other.devName_;
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest Clone() {
      return new RegisterClientRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "DevName" field.</summary>
    public const int DevNameFieldNumber = 2;
    private string devName_ = "";
    /// <summary>
    /// App Developer Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevName {
      get { return devName_; }
      set {
        devName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppName" field.</summary>
    public const int AppNameFieldNumber = 3;
    private string appName_ = "";
    /// <summary>
    /// App Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppVers" field.</summary>
    public const int AppVersFieldNumber = 4;
    private string appVers_ = "";
    /// <summary>
    /// App Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (DevName != other.DevName) return false;
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (DevName.Length != 0) hash ^= DevName.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (DevName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DevName);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppVers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (DevName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevName);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.DevName.Length != 0) {
        DevName = other.DevName;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            DevName = input.ReadString();
            break;
          }
          case 26: {
            AppName = input.ReadString();
            break;
          }
          case 34: {
            AppVers = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterClientReply : pb::IMessage<RegisterClientReply> {
    private static readonly pb::MessageParser<RegisterClientReply> _parser = new pb::MessageParser<RegisterClientReply>(() => new RegisterClientReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterClientReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply(RegisterClientReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      sessionCookie_ = other.sessionCookie_;
      tokenServerURI_ = other.tokenServerURI_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply Clone() {
      return new RegisterClientReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.ReplyStatus status_ = 0;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ReplyStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 3;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie to be used in later API calls
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TokenServerURI" field.</summary>
    public const int TokenServerURIFieldNumber = 4;
    private string tokenServerURI_ = "";
    /// <summary>
    /// URI for Token Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenServerURI {
      get { return tokenServerURI_; }
      set {
        tokenServerURI_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterClientReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterClientReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (TokenServerURI != other.TokenServerURI) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (TokenServerURI.Length != 0) hash ^= TokenServerURI.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionCookie);
      }
      if (TokenServerURI.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenServerURI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (TokenServerURI.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenServerURI);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterClientReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.TokenServerURI.Length != 0) {
        TokenServerURI = other.TokenServerURI;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 26: {
            SessionCookie = input.ReadString();
            break;
          }
          case 34: {
            TokenServerURI = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindCloudletRequest : pb::IMessage<FindCloudletRequest> {
    private static readonly pb::MessageParser<FindCloudletRequest> _parser = new pb::MessageParser<FindCloudletRequest>(() => new FindCloudletRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindCloudletRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest(FindCloudletRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest Clone() {
      return new FindCloudletRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GpsLocation" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindCloudletRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindCloudletRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindCloudletRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindCloudletReply : pb::IMessage<FindCloudletReply> {
    private static readonly pb::MessageParser<FindCloudletReply> _parser = new pb::MessageParser<FindCloudletReply>(() => new FindCloudletReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindCloudletReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply(FindCloudletReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      fQDN_ = other.fQDN_;
      ports_ = other.ports_.Clone();
      cloudletLocation_ = other.cloudletLocation_ != null ? other.cloudletLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply Clone() {
      return new FindCloudletReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus status_ = 0;
    /// <summary>
    /// Status return
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "FQDN" field.</summary>
    public const int FQDNFieldNumber = 3;
    private string fQDN_ = "";
    /// <summary>
    /// Full Qualified Domain Name of Closest App instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FQDN {
      get { return fQDN_; }
      set {
        fQDN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ports" field.</summary>
    public const int PortsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.AppPort> _repeated_ports_codec
        = pb::FieldCodec.ForMessage(34, global::DistributedMatchEngine.AppPort.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.AppPort> ports_ = new pbc::RepeatedField<global::DistributedMatchEngine.AppPort>();
    /// <summary>
    /// List of ports and L7 paths to connect to App instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.AppPort> Ports {
      get { return ports_; }
    }

    /// <summary>Field number for the "cloudlet_location" field.</summary>
    public const int CloudletLocationFieldNumber = 5;
    private global::DistributedMatchEngine.Loc cloudletLocation_;
    /// <summary>
    /// Location of the cloudlet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc CloudletLocation {
      get { return cloudletLocation_; }
      set {
        cloudletLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindCloudletReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindCloudletReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (FQDN != other.FQDN) return false;
      if(!ports_.Equals(other.ports_)) return false;
      if (!object.Equals(CloudletLocation, other.CloudletLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (FQDN.Length != 0) hash ^= FQDN.GetHashCode();
      hash ^= ports_.GetHashCode();
      if (cloudletLocation_ != null) hash ^= CloudletLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (FQDN.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FQDN);
      }
      ports_.WriteTo(output, _repeated_ports_codec);
      if (cloudletLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CloudletLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (FQDN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FQDN);
      }
      size += ports_.CalculateSize(_repeated_ports_codec);
      if (cloudletLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudletLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindCloudletReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.FQDN.Length != 0) {
        FQDN = other.FQDN;
      }
      ports_.Add(other.ports_);
      if (other.cloudletLocation_ != null) {
        if (cloudletLocation_ == null) {
          cloudletLocation_ = new global::DistributedMatchEngine.Loc();
        }
        CloudletLocation.MergeFrom(other.CloudletLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus) input.ReadEnum();
            break;
          }
          case 26: {
            FQDN = input.ReadString();
            break;
          }
          case 34: {
            ports_.AddEntriesFrom(input, _repeated_ports_codec);
            break;
          }
          case 42: {
            if (cloudletLocation_ == null) {
              cloudletLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(cloudletLocation_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FindCloudletReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum FindStatus {
        [pbr::OriginalName("FIND_UNKNOWN")] FindUnknown = 0,
        [pbr::OriginalName("FIND_FOUND")] FindFound = 1,
        [pbr::OriginalName("FIND_NOTFOUND")] FindNotfound = 2,
      }

    }
    #endregion

  }

  public sealed partial class VerifyLocationRequest : pb::IMessage<VerifyLocationRequest> {
    private static readonly pb::MessageParser<VerifyLocationRequest> _parser = new pb::MessageParser<VerifyLocationRequest>(() => new VerifyLocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyLocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest(VerifyLocationRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      verifyLocToken_ = other.verifyLocToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest Clone() {
      return new VerifyLocationRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GpsLocation" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location to verify
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "VerifyLocToken" field.</summary>
    public const int VerifyLocTokenFieldNumber = 5;
    private string verifyLocToken_ = "";
    /// <summary>
    /// token used for location verification, app must retrieve from TokenServerURI
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VerifyLocToken {
      get { return verifyLocToken_; }
      set {
        verifyLocToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyLocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyLocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (VerifyLocToken != other.VerifyLocToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (VerifyLocToken.Length != 0) hash ^= VerifyLocToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (VerifyLocToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VerifyLocToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (VerifyLocToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VerifyLocToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyLocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.VerifyLocToken.Length != 0) {
        VerifyLocToken = other.VerifyLocToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 42: {
            VerifyLocToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyLocationReply : pb::IMessage<VerifyLocationReply> {
    private static readonly pb::MessageParser<VerifyLocationReply> _parser = new pb::MessageParser<VerifyLocationReply>(() => new VerifyLocationReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyLocationReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply(VerifyLocationReply other) : this() {
      ver_ = other.ver_;
      towerStatus_ = other.towerStatus_;
      gpsLocationStatus_ = other.gpsLocationStatus_;
      gPSLocationAccuracyKM_ = other.gPSLocationAccuracyKM_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply Clone() {
      return new VerifyLocationReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "tower_status" field.</summary>
    public const int TowerStatusFieldNumber = 2;
    private global::DistributedMatchEngine.VerifyLocationReply.Types.Tower_Status towerStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.VerifyLocationReply.Types.Tower_Status TowerStatus {
      get { return towerStatus_; }
      set {
        towerStatus_ = value;
      }
    }

    /// <summary>Field number for the "gps_location_status" field.</summary>
    public const int GpsLocationStatusFieldNumber = 3;
    private global::DistributedMatchEngine.VerifyLocationReply.Types.GPS_Location_Status gpsLocationStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.VerifyLocationReply.Types.GPS_Location_Status GpsLocationStatus {
      get { return gpsLocationStatus_; }
      set {
        gpsLocationStatus_ = value;
      }
    }

    /// <summary>Field number for the "GPS_Location_Accuracy_KM" field.</summary>
    public const int GPSLocationAccuracyKMFieldNumber = 4;
    private double gPSLocationAccuracyKM_;
    /// <summary>
    /// location accuracy, the location is verified to 
    /// be within this number of kilometers.  Negative value
    /// means no verification was done 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GPSLocationAccuracyKM {
      get { return gPSLocationAccuracyKM_; }
      set {
        gPSLocationAccuracyKM_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyLocationReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyLocationReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (TowerStatus != other.TowerStatus) return false;
      if (GpsLocationStatus != other.GpsLocationStatus) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GPSLocationAccuracyKM, other.GPSLocationAccuracyKM)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (TowerStatus != 0) hash ^= TowerStatus.GetHashCode();
      if (GpsLocationStatus != 0) hash ^= GpsLocationStatus.GetHashCode();
      if (GPSLocationAccuracyKM != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GPSLocationAccuracyKM);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (TowerStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TowerStatus);
      }
      if (GpsLocationStatus != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GpsLocationStatus);
      }
      if (GPSLocationAccuracyKM != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(GPSLocationAccuracyKM);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (TowerStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TowerStatus);
      }
      if (GpsLocationStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GpsLocationStatus);
      }
      if (GPSLocationAccuracyKM != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyLocationReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.TowerStatus != 0) {
        TowerStatus = other.TowerStatus;
      }
      if (other.GpsLocationStatus != 0) {
        GpsLocationStatus = other.GpsLocationStatus;
      }
      if (other.GPSLocationAccuracyKM != 0D) {
        GPSLocationAccuracyKM = other.GPSLocationAccuracyKM;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            towerStatus_ = (global::DistributedMatchEngine.VerifyLocationReply.Types.Tower_Status) input.ReadEnum();
            break;
          }
          case 24: {
            gpsLocationStatus_ = (global::DistributedMatchEngine.VerifyLocationReply.Types.GPS_Location_Status) input.ReadEnum();
            break;
          }
          case 33: {
            GPSLocationAccuracyKM = input.ReadDouble();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the VerifyLocationReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum Tower_Status {
        [pbr::OriginalName("TOWER_UNKNOWN")] TowerUnknown = 0,
        [pbr::OriginalName("CONNECTED_TO_SPECIFIED_TOWER")] ConnectedToSpecifiedTower = 1,
        [pbr::OriginalName("NOT_CONNECTED_TO_SPECIFIED_TOWER")] NotConnectedToSpecifiedTower = 2,
      }

      public enum GPS_Location_Status {
        [pbr::OriginalName("LOC_UNKNOWN")] LocUnknown = 0,
        [pbr::OriginalName("LOC_VERIFIED")] LocVerified = 1,
        [pbr::OriginalName("LOC_MISMATCH_SAME_COUNTRY")] LocMismatchSameCountry = 2,
        [pbr::OriginalName("LOC_MISMATCH_OTHER_COUNTRY")] LocMismatchOtherCountry = 3,
        [pbr::OriginalName("LOC_ROAMING_COUNTRY_MATCH")] LocRoamingCountryMatch = 4,
        [pbr::OriginalName("LOC_ROAMING_COUNTRY_MISMATCH")] LocRoamingCountryMismatch = 5,
        [pbr::OriginalName("LOC_ERROR_UNAUTHORIZED")] LocErrorUnauthorized = 6,
        [pbr::OriginalName("LOC_ERROR_OTHER")] LocErrorOther = 7,
      }

    }
    #endregion

  }

  public sealed partial class GetLocationRequest : pb::IMessage<GetLocationRequest> {
    private static readonly pb::MessageParser<GetLocationRequest> _parser = new pb::MessageParser<GetLocationRequest>(() => new GetLocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest(GetLocationRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest Clone() {
      return new GetLocationRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLocationReply : pb::IMessage<GetLocationReply> {
    private static readonly pb::MessageParser<GetLocationReply> _parser = new pb::MessageParser<GetLocationReply>(() => new GetLocationReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLocationReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply(GetLocationReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      carrierName_ = other.carrierName_;
      tower_ = other.tower_;
      networkLocation_ = other.networkLocation_ != null ? other.networkLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply Clone() {
      return new GetLocationReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.GetLocationReply.Types.Loc_Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.GetLocationReply.Types.Loc_Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tower" field.</summary>
    public const int TowerFieldNumber = 4;
    private ulong tower_;
    /// <summary>
    /// The tower that user is currently connected to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Tower {
      get { return tower_; }
      set {
        tower_ = value;
      }
    }

    /// <summary>Field number for the "NetworkLocation" field.</summary>
    public const int NetworkLocationFieldNumber = 5;
    private global::DistributedMatchEngine.Loc networkLocation_;
    /// <summary>
    /// The GPS location of the user 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc NetworkLocation {
      get { return networkLocation_; }
      set {
        networkLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLocationReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLocationReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (CarrierName != other.CarrierName) return false;
      if (Tower != other.Tower) return false;
      if (!object.Equals(NetworkLocation, other.NetworkLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (Tower != 0UL) hash ^= Tower.GetHashCode();
      if (networkLocation_ != null) hash ^= NetworkLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (Tower != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Tower);
      }
      if (networkLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NetworkLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (Tower != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tower);
      }
      if (networkLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLocationReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.Tower != 0UL) {
        Tower = other.Tower;
      }
      if (other.networkLocation_ != null) {
        if (networkLocation_ == null) {
          networkLocation_ = new global::DistributedMatchEngine.Loc();
        }
        NetworkLocation.MergeFrom(other.NetworkLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.GetLocationReply.Types.Loc_Status) input.ReadEnum();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 32: {
            Tower = input.ReadUInt64();
            break;
          }
          case 42: {
            if (networkLocation_ == null) {
              networkLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(networkLocation_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetLocationReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum Loc_Status {
        [pbr::OriginalName("LOC_UNKNOWN")] LocUnknown = 0,
        [pbr::OriginalName("LOC_FOUND")] LocFound = 1,
        /// <summary>
        /// The user does not allow his location to be tracked
        /// </summary>
        [pbr::OriginalName("LOC_DENIED")] LocDenied = 2,
      }

    }
    #endregion

  }

  public sealed partial class AppInstListRequest : pb::IMessage<AppInstListRequest> {
    private static readonly pb::MessageParser<AppInstListRequest> _parser = new pb::MessageParser<AppInstListRequest>(() => new AppInstListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInstListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest(AppInstListRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest Clone() {
      return new AppInstListRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GpsLocation" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location of the user 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInstListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInstListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInstListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Appinstance : pb::IMessage<Appinstance> {
    private static readonly pb::MessageParser<Appinstance> _parser = new pb::MessageParser<Appinstance>(() => new Appinstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Appinstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance(Appinstance other) : this() {
      appname_ = other.appname_;
      appversion_ = other.appversion_;
      fQDN_ = other.fQDN_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance Clone() {
      return new Appinstance(this);
    }

    /// <summary>Field number for the "Appname" field.</summary>
    public const int AppnameFieldNumber = 1;
    private string appname_ = "";
    /// <summary>
    /// App Instance Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Appname {
      get { return appname_; }
      set {
        appname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Appversion" field.</summary>
    public const int AppversionFieldNumber = 2;
    private string appversion_ = "";
    /// <summary>
    /// App Instance Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Appversion {
      get { return appversion_; }
      set {
        appversion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FQDN" field.</summary>
    public const int FQDNFieldNumber = 3;
    private string fQDN_ = "";
    /// <summary>
    /// App Instance FQDN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FQDN {
      get { return fQDN_; }
      set {
        fQDN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Appinstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Appinstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appname != other.Appname) return false;
      if (Appversion != other.Appversion) return false;
      if (FQDN != other.FQDN) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Appname.Length != 0) hash ^= Appname.GetHashCode();
      if (Appversion.Length != 0) hash ^= Appversion.GetHashCode();
      if (FQDN.Length != 0) hash ^= FQDN.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Appname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Appname);
      }
      if (Appversion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Appversion);
      }
      if (FQDN.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FQDN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Appname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Appname);
      }
      if (Appversion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Appversion);
      }
      if (FQDN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FQDN);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Appinstance other) {
      if (other == null) {
        return;
      }
      if (other.Appname.Length != 0) {
        Appname = other.Appname;
      }
      if (other.Appversion.Length != 0) {
        Appversion = other.Appversion;
      }
      if (other.FQDN.Length != 0) {
        FQDN = other.FQDN;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Appname = input.ReadString();
            break;
          }
          case 18: {
            Appversion = input.ReadString();
            break;
          }
          case 26: {
            FQDN = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloudletLocation : pb::IMessage<CloudletLocation> {
    private static readonly pb::MessageParser<CloudletLocation> _parser = new pb::MessageParser<CloudletLocation>(() => new CloudletLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudletLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation(CloudletLocation other) : this() {
      carrierName_ = other.carrierName_;
      cloudletName_ = other.cloudletName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      distance_ = other.distance_;
      appinstances_ = other.appinstances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation Clone() {
      return new CloudletLocation(this);
    }

    /// <summary>Field number for the "CarrierName" field.</summary>
    public const int CarrierNameFieldNumber = 1;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CloudletName" field.</summary>
    public const int CloudletNameFieldNumber = 2;
    private string cloudletName_ = "";
    /// <summary>
    /// Cloudlet Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CloudletName {
      get { return cloudletName_; }
      set {
        cloudletName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GpsLocation" field.</summary>
    public const int GpsLocationFieldNumber = 3;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS Location of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "Distance" field.</summary>
    public const int DistanceFieldNumber = 4;
    private double distance_;
    /// <summary>
    /// Distance of cloudlet vs loc in request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "Appinstances" field.</summary>
    public const int AppinstancesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.Appinstance> _repeated_appinstances_codec
        = pb::FieldCodec.ForMessage(42, global::DistributedMatchEngine.Appinstance.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.Appinstance> appinstances_ = new pbc::RepeatedField<global::DistributedMatchEngine.Appinstance>();
    /// <summary>
    /// App instances
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.Appinstance> Appinstances {
      get { return appinstances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudletLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudletLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CarrierName != other.CarrierName) return false;
      if (CloudletName != other.CloudletName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Distance, other.Distance)) return false;
      if(!appinstances_.Equals(other.appinstances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (CloudletName.Length != 0) hash ^= CloudletName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (Distance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Distance);
      hash ^= appinstances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CarrierName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CarrierName);
      }
      if (CloudletName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CloudletName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GpsLocation);
      }
      if (Distance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Distance);
      }
      appinstances_.WriteTo(output, _repeated_appinstances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (CloudletName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CloudletName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (Distance != 0D) {
        size += 1 + 8;
      }
      size += appinstances_.CalculateSize(_repeated_appinstances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudletLocation other) {
      if (other == null) {
        return;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.CloudletName.Length != 0) {
        CloudletName = other.CloudletName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.Distance != 0D) {
        Distance = other.Distance;
      }
      appinstances_.Add(other.appinstances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CarrierName = input.ReadString();
            break;
          }
          case 18: {
            CloudletName = input.ReadString();
            break;
          }
          case 26: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 33: {
            Distance = input.ReadDouble();
            break;
          }
          case 42: {
            appinstances_.AddEntriesFrom(input, _repeated_appinstances_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppInstListReply : pb::IMessage<AppInstListReply> {
    private static readonly pb::MessageParser<AppInstListReply> _parser = new pb::MessageParser<AppInstListReply>(() => new AppInstListReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInstListReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply(AppInstListReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      cloudlets_ = other.cloudlets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply Clone() {
      return new AppInstListReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.AppInstListReply.Types.AI_Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.AppInstListReply.Types.AI_Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Cloudlets" field.</summary>
    public const int CloudletsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.CloudletLocation> _repeated_cloudlets_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.CloudletLocation.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation> cloudlets_ = new pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation> Cloudlets {
      get { return cloudlets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInstListReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInstListReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if(!cloudlets_.Equals(other.cloudlets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= cloudlets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      cloudlets_.WriteTo(output, _repeated_cloudlets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += cloudlets_.CalculateSize(_repeated_cloudlets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInstListReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      cloudlets_.Add(other.cloudlets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.AppInstListReply.Types.AI_Status) input.ReadEnum();
            break;
          }
          case 26: {
            cloudlets_.AddEntriesFrom(input, _repeated_cloudlets_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AppInstListReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum AI_Status {
        [pbr::OriginalName("AI_UNDEFINED")] AiUndefined = 0,
        [pbr::OriginalName("AI_SUCCESS")] AiSuccess = 1,
        [pbr::OriginalName("AI_FAIL")] AiFail = 2,
      }

    }
    #endregion

  }

  public sealed partial class DynamicLocGroupRequest : pb::IMessage<DynamicLocGroupRequest> {
    private static readonly pb::MessageParser<DynamicLocGroupRequest> _parser = new pb::MessageParser<DynamicLocGroupRequest>(() => new DynamicLocGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicLocGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest(DynamicLocGroupRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      lgId_ = other.lgId_;
      commType_ = other.commType_;
      userData_ = other.userData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest Clone() {
      return new DynamicLocGroupRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "SessionCookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LgId" field.</summary>
    public const int LgIdFieldNumber = 3;
    private ulong lgId_;
    /// <summary>
    /// Dynamic Location Group Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LgId {
      get { return lgId_; }
      set {
        lgId_ = value;
      }
    }

    /// <summary>Field number for the "CommType" field.</summary>
    public const int CommTypeFieldNumber = 11;
    private global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType commType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType CommType {
      get { return commType_; }
      set {
        commType_ = value;
      }
    }

    /// <summary>Field number for the "UserData" field.</summary>
    public const int UserDataFieldNumber = 12;
    private string userData_ = "";
    /// <summary>
    /// Unused
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserData {
      get { return userData_; }
      set {
        userData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicLocGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicLocGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (LgId != other.LgId) return false;
      if (CommType != other.CommType) return false;
      if (UserData != other.UserData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (LgId != 0UL) hash ^= LgId.GetHashCode();
      if (CommType != 0) hash ^= CommType.GetHashCode();
      if (UserData.Length != 0) hash ^= UserData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (LgId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LgId);
      }
      if (CommType != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CommType);
      }
      if (UserData.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(UserData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (LgId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LgId);
      }
      if (CommType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommType);
      }
      if (UserData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicLocGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.LgId != 0UL) {
        LgId = other.LgId;
      }
      if (other.CommType != 0) {
        CommType = other.CommType;
      }
      if (other.UserData.Length != 0) {
        UserData = other.UserData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 24: {
            LgId = input.ReadUInt64();
            break;
          }
          case 88: {
            commType_ = (global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType) input.ReadEnum();
            break;
          }
          case 98: {
            UserData = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DynamicLocGroupRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Use Secure communication or Open with the group
      /// </summary>
      public enum DlgCommType {
        [pbr::OriginalName("DlgUndefined")] DlgUndefined = 0,
        [pbr::OriginalName("DlgSecure")] DlgSecure = 1,
        [pbr::OriginalName("DlgOpen")] DlgOpen = 2,
      }

    }
    #endregion

  }

  public sealed partial class DynamicLocGroupReply : pb::IMessage<DynamicLocGroupReply> {
    private static readonly pb::MessageParser<DynamicLocGroupReply> _parser = new pb::MessageParser<DynamicLocGroupReply>(() => new DynamicLocGroupReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicLocGroupReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply(DynamicLocGroupReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      errorCode_ = other.errorCode_;
      groupCookie_ = other.groupCookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply Clone() {
      return new DynamicLocGroupReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.ReplyStatus status_ = 0;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ReplyStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    private uint errorCode_;
    /// <summary>
    /// Error Code based on Failure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "GroupCookie" field.</summary>
    public const int GroupCookieFieldNumber = 5;
    private string groupCookie_ = "";
    /// <summary>
    /// Group Cookie for Secure Group Communication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupCookie {
      get { return groupCookie_; }
      set {
        groupCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicLocGroupReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicLocGroupReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (GroupCookie != other.GroupCookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (GroupCookie.Length != 0) hash ^= GroupCookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (GroupCookie.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorCode);
      }
      if (GroupCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupCookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicLocGroupReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.GroupCookie.Length != 0) {
        GroupCookie = other.GroupCookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 42: {
            GroupCookie = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
