// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: loc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DistributedMatchEngine {

  /// <summary>Holder for reflection information generated from loc.proto</summary>
  public static partial class LocReflection {

    #region Descriptor
    /// <summary>File descriptor for loc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cglsb2MucHJvdG8SGGRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZRofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byK4AQoDTG9jEgsKA2xhdBgBIAEo",
            "ARIMCgRsb25nGAIgASgBEhsKE2hvcml6b250YWxfYWNjdXJhY3kYAyABKAES",
            "GQoRdmVydGljYWxfYWNjdXJhY3kYBCABKAESEAoIYWx0aXR1ZGUYBSABKAES",
            "DgoGY291cnNlGAYgASgBEg0KBXNwZWVkGAcgASgBEi0KCXRpbWVzdGFtcBgI",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Loc), global::DistributedMatchEngine.Loc.Parser, new[]{ "Lat", "Long", "HorizontalAccuracy", "VerticalAccuracy", "Altitude", "Course", "Speed", "Timestamp" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Loc : pb::IMessage<Loc> {
    private static readonly pb::MessageParser<Loc> _parser = new pb::MessageParser<Loc>(() => new Loc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Loc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.LocReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loc(Loc other) : this() {
      lat_ = other.lat_;
      long_ = other.long_;
      horizontalAccuracy_ = other.horizontalAccuracy_;
      verticalAccuracy_ = other.verticalAccuracy_;
      altitude_ = other.altitude_;
      course_ = other.course_;
      speed_ = other.speed_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loc Clone() {
      return new Loc(this);
    }

    /// <summary>Field number for the "lat" field.</summary>
    public const int LatFieldNumber = 1;
    private double lat_;
    /// <summary>
    /// latitude in WGS 84 coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lat {
      get { return lat_; }
      set {
        lat_ = value;
      }
    }

    /// <summary>Field number for the "long" field.</summary>
    public const int LongFieldNumber = 2;
    private double long_;
    /// <summary>
    /// longitude in WGS 84 coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Long {
      get { return long_; }
      set {
        long_ = value;
      }
    }

    /// <summary>Field number for the "horizontal_accuracy" field.</summary>
    public const int HorizontalAccuracyFieldNumber = 3;
    private double horizontalAccuracy_;
    /// <summary>
    /// horizontal accuracy (radius in meters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double HorizontalAccuracy {
      get { return horizontalAccuracy_; }
      set {
        horizontalAccuracy_ = value;
      }
    }

    /// <summary>Field number for the "vertical_accuracy" field.</summary>
    public const int VerticalAccuracyFieldNumber = 4;
    private double verticalAccuracy_;
    /// <summary>
    /// veritical accuracy (meters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VerticalAccuracy {
      get { return verticalAccuracy_; }
      set {
        verticalAccuracy_ = value;
      }
    }

    /// <summary>Field number for the "altitude" field.</summary>
    public const int AltitudeFieldNumber = 5;
    private double altitude_;
    /// <summary>
    /// On android only lat and long are guaranteed to be supplied
    /// altitude in meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Altitude {
      get { return altitude_; }
      set {
        altitude_ = value;
      }
    }

    /// <summary>Field number for the "course" field.</summary>
    public const int CourseFieldNumber = 6;
    private double course_;
    /// <summary>
    /// course (IOS) / bearing (Android) (degrees east relative to true north)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Course {
      get { return course_; }
      set {
        course_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 7;
    private double speed_;
    /// <summary>
    /// speed (IOS) / velocity (Android) (meters/sec)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Loc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Loc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lat, other.Lat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Long, other.Long)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HorizontalAccuracy, other.HorizontalAccuracy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VerticalAccuracy, other.VerticalAccuracy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Altitude, other.Altitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Course, other.Course)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lat);
      if (Long != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Long);
      if (HorizontalAccuracy != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HorizontalAccuracy);
      if (VerticalAccuracy != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VerticalAccuracy);
      if (Altitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Altitude);
      if (Course != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Course);
      if (Speed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Speed);
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lat != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Lat);
      }
      if (Long != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Long);
      }
      if (HorizontalAccuracy != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(HorizontalAccuracy);
      }
      if (VerticalAccuracy != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(VerticalAccuracy);
      }
      if (Altitude != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Altitude);
      }
      if (Course != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Course);
      }
      if (Speed != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Speed);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lat != 0D) {
        size += 1 + 8;
      }
      if (Long != 0D) {
        size += 1 + 8;
      }
      if (HorizontalAccuracy != 0D) {
        size += 1 + 8;
      }
      if (VerticalAccuracy != 0D) {
        size += 1 + 8;
      }
      if (Altitude != 0D) {
        size += 1 + 8;
      }
      if (Course != 0D) {
        size += 1 + 8;
      }
      if (Speed != 0D) {
        size += 1 + 8;
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Loc other) {
      if (other == null) {
        return;
      }
      if (other.Lat != 0D) {
        Lat = other.Lat;
      }
      if (other.Long != 0D) {
        Long = other.Long;
      }
      if (other.HorizontalAccuracy != 0D) {
        HorizontalAccuracy = other.HorizontalAccuracy;
      }
      if (other.VerticalAccuracy != 0D) {
        VerticalAccuracy = other.VerticalAccuracy;
      }
      if (other.Altitude != 0D) {
        Altitude = other.Altitude;
      }
      if (other.Course != 0D) {
        Course = other.Course;
      }
      if (other.Speed != 0D) {
        Speed = other.Speed;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Lat = input.ReadDouble();
            break;
          }
          case 17: {
            Long = input.ReadDouble();
            break;
          }
          case 25: {
            HorizontalAccuracy = input.ReadDouble();
            break;
          }
          case 33: {
            VerticalAccuracy = input.ReadDouble();
            break;
          }
          case 41: {
            Altitude = input.ReadDouble();
            break;
          }
          case 49: {
            Course = input.ReadDouble();
            break;
          }
          case 57: {
            Speed = input.ReadDouble();
            break;
          }
          case 66: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
