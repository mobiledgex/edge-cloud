// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: app-client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DistributedMatchEngine {

  /// <summary>Holder for reflection information generated from app-client.proto</summary>
  public static partial class AppClientReflection {

    #region Descriptor
    /// <summary>File descriptor for app-client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AppClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBhcHAtY2xpZW50LnByb3RvEhhkaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUa",
            "HGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aCWxvYy5wcm90bxoPYXBw",
            "Y29tbW9uLnByb3RvIoQBChVSZWdpc3RlckNsaWVudFJlcXVlc3QSCwoDdmVy",
            "GAEgASgNEhAKCGRldl9uYW1lGAIgASgJEhAKCGFwcF9uYW1lGAMgASgJEhAK",
            "CGFwcF92ZXJzGAQgASgJEhQKDGNhcnJpZXJfbmFtZRgFIAEoCRISCgphdXRo",
            "X3Rva2VuGAYgASgJIosBChNSZWdpc3RlckNsaWVudFJlcGx5EgsKA3ZlchgB",
            "IAEoDRI1CgZzdGF0dXMYAiABKA4yJS5kaXN0cmlidXRlZF9tYXRjaF9lbmdp",
            "bmUuUmVwbHlTdGF0dXMSFgoOc2Vzc2lvbl9jb29raWUYAyABKAkSGAoQdG9r",
            "ZW5fc2VydmVyX3VyaRgEIAEoCSK7AQoTRmluZENsb3VkbGV0UmVxdWVzdBIL",
            "CgN2ZXIYASABKA0SFgoOc2Vzc2lvbl9jb29raWUYAiABKAkSFAoMY2Fycmll",
            "cl9uYW1lGAMgASgJEjMKDGdwc19sb2NhdGlvbhgEIAEoCzIdLmRpc3RyaWJ1",
            "dGVkX21hdGNoX2VuZ2luZS5Mb2MSEAoIZGV2X25hbWUYBSABKAkSEAoIYXBw",
            "X25hbWUYBiABKAkSEAoIYXBwX3ZlcnMYByABKAkipQIKEUZpbmRDbG91ZGxl",
            "dFJlcGx5EgsKA3ZlchgBIAEoDRJGCgZzdGF0dXMYAiABKA4yNi5kaXN0cmli",
            "dXRlZF9tYXRjaF9lbmdpbmUuRmluZENsb3VkbGV0UmVwbHkuRmluZFN0YXR1",
            "cxIMCgRmcWRuGAMgASgJEjAKBXBvcnRzGAQgAygLMiEuZGlzdHJpYnV0ZWRf",
            "bWF0Y2hfZW5naW5lLkFwcFBvcnQSOAoRY2xvdWRsZXRfbG9jYXRpb24YBSAB",
            "KAsyHS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuTG9jIkEKCkZpbmRTdGF0",
            "dXMSEAoMRklORF9VTktOT1dOEAASDgoKRklORF9GT1VORBABEhEKDUZJTkRf",
            "Tk9URk9VTkQQAiKhAQoVVmVyaWZ5TG9jYXRpb25SZXF1ZXN0EgsKA3ZlchgB",
            "IAEoDRIWCg5zZXNzaW9uX2Nvb2tpZRgCIAEoCRIUCgxjYXJyaWVyX25hbWUY",
            "AyABKAkSMwoMZ3BzX2xvY2F0aW9uGAQgASgLMh0uZGlzdHJpYnV0ZWRfbWF0",
            "Y2hfZW5naW5lLkxvYxIYChB2ZXJpZnlfbG9jX3Rva2VuGAUgASgJIscEChNW",
            "ZXJpZnlMb2NhdGlvblJlcGx5EgsKA3ZlchgBIAEoDRJPCgx0b3dlcl9zdGF0",
            "dXMYAiABKA4yOS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuVmVyaWZ5TG9j",
            "YXRpb25SZXBseS5Ub3dlclN0YXR1cxJcChNncHNfbG9jYXRpb25fc3RhdHVz",
            "GAMgASgOMj8uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLlZlcmlmeUxvY2F0",
            "aW9uUmVwbHkuR1BTTG9jYXRpb25TdGF0dXMSIAoYZ3BzX2xvY2F0aW9uX2Fj",
            "Y3VyYWN5X2ttGAQgASgBImgKC1Rvd2VyU3RhdHVzEhEKDVRPV0VSX1VOS05P",
            "V04QABIgChxDT05ORUNURURfVE9fU1BFQ0lGSUVEX1RPV0VSEAESJAogTk9U",
            "X0NPTk5FQ1RFRF9UT19TUEVDSUZJRURfVE9XRVIQAiLnAQoRR1BTTG9jYXRp",
            "b25TdGF0dXMSDwoLTE9DX1VOS05PV04QABIQCgxMT0NfVkVSSUZJRUQQARId",
            "ChlMT0NfTUlTTUFUQ0hfU0FNRV9DT1VOVFJZEAISHgoaTE9DX01JU01BVENI",
            "X09USEVSX0NPVU5UUlkQAxIdChlMT0NfUk9BTUlOR19DT1VOVFJZX01BVENI",
            "EAQSIAocTE9DX1JPQU1JTkdfQ09VTlRSWV9NSVNNQVRDSBAFEhoKFkxPQ19F",
            "UlJPUl9VTkFVVEhPUklaRUQQBhITCg9MT0NfRVJST1JfT1RIRVIQByJPChJH",
            "ZXRMb2NhdGlvblJlcXVlc3QSCwoDdmVyGAEgASgNEhYKDnNlc3Npb25fY29v",
            "a2llGAIgASgJEhQKDGNhcnJpZXJfbmFtZRgDIAEoCSKAAgoQR2V0TG9jYXRp",
            "b25SZXBseRILCgN2ZXIYASABKA0SRAoGc3RhdHVzGAIgASgOMjQuZGlzdHJp",
            "YnV0ZWRfbWF0Y2hfZW5naW5lLkdldExvY2F0aW9uUmVwbHkuTG9jU3RhdHVz",
            "EhQKDGNhcnJpZXJfbmFtZRgDIAEoCRINCgV0b3dlchgEIAEoBBI3ChBuZXR3",
            "b3JrX2xvY2F0aW9uGAUgASgLMh0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5l",
            "LkxvYyI7CglMb2NTdGF0dXMSDwoLTE9DX1VOS05PV04QABINCglMT0NfRk9V",
            "TkQQARIOCgpMT0NfREVOSUVEEAIihAEKEkFwcEluc3RMaXN0UmVxdWVzdBIL",
            "CgN2ZXIYASABKA0SFgoOc2Vzc2lvbl9jb29raWUYAiABKAkSFAoMY2Fycmll",
            "cl9uYW1lGAMgASgJEjMKDGdwc19sb2NhdGlvbhgEIAEoCzIdLmRpc3RyaWJ1",
            "dGVkX21hdGNoX2VuZ2luZS5Mb2MicQoLQXBwaW5zdGFuY2USEAoIYXBwX25h",
            "bWUYASABKAkSEAoIYXBwX3ZlcnMYAiABKAkSDAoEZnFkbhgDIAEoCRIwCgVw",
            "b3J0cxgEIAMoCzIhLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5BcHBQb3J0",
            "IsMBChBDbG91ZGxldExvY2F0aW9uEhQKDGNhcnJpZXJfbmFtZRgBIAEoCRIV",
            "Cg1jbG91ZGxldF9uYW1lGAIgASgJEjMKDGdwc19sb2NhdGlvbhgDIAEoCzId",
            "LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5Mb2MSEAoIZGlzdGFuY2UYBCAB",
            "KAESOwoMYXBwaW5zdGFuY2VzGAUgAygLMiUuZGlzdHJpYnV0ZWRfbWF0Y2hf",
            "ZW5naW5lLkFwcGluc3RhbmNlIt4BChBBcHBJbnN0TGlzdFJlcGx5EgsKA3Zl",
            "chgBIAEoDRJDCgZzdGF0dXMYAiABKA4yMy5kaXN0cmlidXRlZF9tYXRjaF9l",
            "bmdpbmUuQXBwSW5zdExpc3RSZXBseS5BSVN0YXR1cxI9CgljbG91ZGxldHMY",
            "AyADKAsyKi5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuQ2xvdWRsZXRMb2Nh",
            "dGlvbiI5CghBSVN0YXR1cxIQCgxBSV9VTkRFRklORUQQABIOCgpBSV9TVUND",
            "RVNTEAESCwoHQUlfRkFJTBACIjYKD0ZxZG5MaXN0UmVxdWVzdBILCgN2ZXIY",
            "ASABKA0SFgoOc2Vzc2lvbl9jb29raWUYAiABKAkibAoHQXBwRnFkbhIQCghh",
            "cHBfbmFtZRgBIAEoCRIQCghhcHBfdmVycxgCIAEoCRIQCghkZXZfbmFtZRgD",
            "IAEoCRINCgVmcWRucxgEIAMoCRIcChRhbmRyb2lkX3BhY2thZ2VfbmFtZRgF",
            "IAEoCSLPAQoNRnFkbkxpc3RSZXBseRILCgN2ZXIYASABKA0SNAoJYXBwX2Zx",
            "ZG5zGAMgAygLMiEuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkFwcEZxZG4S",
            "QAoGc3RhdHVzGAQgASgOMjAuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkZx",
            "ZG5MaXN0UmVwbHkuRkxTdGF0dXMiOQoIRkxTdGF0dXMSEAoMRkxfVU5ERUZJ",
            "TkVEEAASDgoKRkxfU1VDQ0VTUxABEgsKB0ZMX0ZBSUwQAiLwAQoWRHluYW1p",
            "Y0xvY0dyb3VwUmVxdWVzdBILCgN2ZXIYASABKA0SFgoOc2Vzc2lvbl9jb29r",
            "aWUYAiABKAkSDQoFbGdfaWQYAyABKAQSTwoJY29tbV90eXBlGAsgASgOMjwu",
            "ZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkR5bmFtaWNMb2NHcm91cFJlcXVl",
            "c3QuRGxnQ29tbVR5cGUSEQoJdXNlcl9kYXRhGAwgASgJIj4KC0RsZ0NvbW1U",
            "eXBlEhEKDURMR19VTkRFRklORUQQABIOCgpETEdfU0VDVVJFEAESDAoIRExH",
            "X09QRU4QAiKEAQoURHluYW1pY0xvY0dyb3VwUmVwbHkSCwoDdmVyGAEgASgN",
            "EjUKBnN0YXR1cxgCIAEoDjIlLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5S",
            "ZXBseVN0YXR1cxISCgplcnJvcl9jb2RlGAMgASgNEhQKDGdyb3VwX2Nvb2tp",
            "ZRgFIAEoCSJWCgtRb3NQb3NpdGlvbhISCgpwb3NpdGlvbmlkGAEgASgDEjMK",
            "DGdwc19sb2NhdGlvbhgCIAEoCzIdLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2lu",
            "ZS5Mb2MidgoVUW9zUG9zaXRpb25LcGlSZXF1ZXN0EgsKA3ZlchgBIAEoDRIW",
            "Cg5zZXNzaW9uX2Nvb2tpZRgCIAEoCRI4Cglwb3NpdGlvbnMYAyADKAsyJS5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuUW9zUG9zaXRpb24izwIKEVFvc1Bv",
            "c2l0aW9uUmVzdWx0EhIKCnBvc2l0aW9uaWQYASABKAMSMwoMZ3BzX2xvY2F0",
            "aW9uGAIgASgLMh0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkxvYxIcChRk",
            "bHVzZXJ0aHJvdWdocHV0X21pbhgDIAEoAhIcChRkbHVzZXJ0aHJvdWdocHV0",
            "X2F2ZxgEIAEoAhIcChRkbHVzZXJ0aHJvdWdocHV0X21heBgFIAEoAhIcChR1",
            "bHVzZXJ0aHJvdWdocHV0X21pbhgGIAEoAhIcChR1bHVzZXJ0aHJvdWdocHV0",
            "X2F2ZxgHIAEoAhIcChR1bHVzZXJ0aHJvdWdocHV0X21heBgIIAEoAhITCgts",
            "YXRlbmN5X21pbhgJIAEoAhITCgtsYXRlbmN5X2F2ZxgKIAEoAhITCgtsYXRl",
            "bmN5X21heBgLIAEoAiKgAQoTUW9zUG9zaXRpb25LcGlSZXBseRILCgN2ZXIY",
            "ASABKA0SNQoGc3RhdHVzGAIgASgOMiUuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5n",
            "aW5lLlJlcGx5U3RhdHVzEkUKEHBvc2l0aW9uX3Jlc3VsdHMYAyADKAsyKy5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuUW9zUG9zaXRpb25SZXN1bHQqPQoH",
            "SURUeXBlcxIQCgxJRF9VTkRFRklORUQQABIICgRJTUVJEAESCgoGTVNJU0RO",
            "EAISCgoGSVBBRERSEAMqPAoLUmVwbHlTdGF0dXMSEAoMUlNfVU5ERUZJTkVE",
            "EAASDgoKUlNfU1VDQ0VTUxABEgsKB1JTX0ZBSUwQAjL9CAoOTWF0Y2hFbmdp",
            "bmVBcGkSjwEKDlJlZ2lzdGVyQ2xpZW50Ei8uZGlzdHJpYnV0ZWRfbWF0Y2hf",
            "ZW5naW5lLlJlZ2lzdGVyQ2xpZW50UmVxdWVzdBotLmRpc3RyaWJ1dGVkX21h",
            "dGNoX2VuZ2luZS5SZWdpc3RlckNsaWVudFJlcGx5Ih2C0+STAhciEi92MS9y",
            "ZWdpc3RlcmNsaWVudDoBKhKHAQoMRmluZENsb3VkbGV0Ei0uZGlzdHJpYnV0",
            "ZWRfbWF0Y2hfZW5naW5lLkZpbmRDbG91ZGxldFJlcXVlc3QaKy5kaXN0cmli",
            "dXRlZF9tYXRjaF9lbmdpbmUuRmluZENsb3VkbGV0UmVwbHkiG4LT5JMCFSIQ",
            "L3YxL2ZpbmRjbG91ZGxldDoBKhKPAQoOVmVyaWZ5TG9jYXRpb24SLy5kaXN0",
            "cmlidXRlZF9tYXRjaF9lbmdpbmUuVmVyaWZ5TG9jYXRpb25SZXF1ZXN0Gi0u",
            "ZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLlZlcmlmeUxvY2F0aW9uUmVwbHki",
            "HYLT5JMCFyISL3YxL3ZlcmlmeWxvY2F0aW9uOgEqEoMBCgtHZXRMb2NhdGlv",
            "bhIsLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5HZXRMb2NhdGlvblJlcXVl",
            "c3QaKi5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuR2V0TG9jYXRpb25SZXBs",
            "eSIagtPkkwIUIg8vdjEvZ2V0bG9jYXRpb246ASoSkQEKDkFkZFVzZXJUb0dy",
            "b3VwEjAuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkR5bmFtaWNMb2NHcm91",
            "cFJlcXVlc3QaLi5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuRHluYW1pY0xv",
            "Y0dyb3VwUmVwbHkiHYLT5JMCFyISL3YxL2FkZHVzZXJ0b2dyb3VwOgEqEokB",
            "Cg5HZXRBcHBJbnN0TGlzdBIsLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5B",
            "cHBJbnN0TGlzdFJlcXVlc3QaKi5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUu",
            "QXBwSW5zdExpc3RSZXBseSIdgtPkkwIXIhIvdjEvZ2V0YXBwaW5zdGxpc3Q6",
            "ASoSfQoLR2V0RnFkbkxpc3QSKS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUu",
            "RnFkbkxpc3RSZXF1ZXN0GicuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkZx",
            "ZG5MaXN0UmVwbHkiGoLT5JMCFCIPL3YxL2dldGZxZG5saXN0OgEqEpcBChFH",
            "ZXRRb3NQb3NpdGlvbktwaRIvLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5R",
            "b3NQb3NpdGlvbktwaVJlcXVlc3QaLS5kaXN0cmlidXRlZF9tYXRjaF9lbmdp",
            "bmUuUW9zUG9zaXRpb25LcGlSZXBseSIggtPkkwIaIhUvdjEvZ2V0cW9zcG9z",
            "aXRpb25rcGk6ASowAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::DistributedMatchEngine.LocReflection.Descriptor, global::DistributedMatchEngine.AppcommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DistributedMatchEngine.IDTypes), typeof(global::DistributedMatchEngine.ReplyStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.RegisterClientRequest), global::DistributedMatchEngine.RegisterClientRequest.Parser, new[]{ "Ver", "DevName", "AppName", "AppVers", "CarrierName", "AuthToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.RegisterClientReply), global::DistributedMatchEngine.RegisterClientReply.Parser, new[]{ "Ver", "Status", "SessionCookie", "TokenServerUri" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FindCloudletRequest), global::DistributedMatchEngine.FindCloudletRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation", "DevName", "AppName", "AppVers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FindCloudletReply), global::DistributedMatchEngine.FindCloudletReply.Parser, new[]{ "Ver", "Status", "Fqdn", "Ports", "CloudletLocation" }, null, new[]{ typeof(global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.VerifyLocationRequest), global::DistributedMatchEngine.VerifyLocationRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation", "VerifyLocToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.VerifyLocationReply), global::DistributedMatchEngine.VerifyLocationReply.Parser, new[]{ "Ver", "TowerStatus", "GpsLocationStatus", "GpsLocationAccuracyKm" }, null, new[]{ typeof(global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus), typeof(global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.GetLocationRequest), global::DistributedMatchEngine.GetLocationRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.GetLocationReply), global::DistributedMatchEngine.GetLocationReply.Parser, new[]{ "Ver", "Status", "CarrierName", "Tower", "NetworkLocation" }, null, new[]{ typeof(global::DistributedMatchEngine.GetLocationReply.Types.LocStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppInstListRequest), global::DistributedMatchEngine.AppInstListRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Appinstance), global::DistributedMatchEngine.Appinstance.Parser, new[]{ "AppName", "AppVers", "Fqdn", "Ports" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.CloudletLocation), global::DistributedMatchEngine.CloudletLocation.Parser, new[]{ "CarrierName", "CloudletName", "GpsLocation", "Distance", "Appinstances" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppInstListReply), global::DistributedMatchEngine.AppInstListReply.Parser, new[]{ "Ver", "Status", "Cloudlets" }, null, new[]{ typeof(global::DistributedMatchEngine.AppInstListReply.Types.AIStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FqdnListRequest), global::DistributedMatchEngine.FqdnListRequest.Parser, new[]{ "Ver", "SessionCookie" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppFqdn), global::DistributedMatchEngine.AppFqdn.Parser, new[]{ "AppName", "AppVers", "DevName", "Fqdns", "AndroidPackageName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FqdnListReply), global::DistributedMatchEngine.FqdnListReply.Parser, new[]{ "Ver", "AppFqdns", "Status" }, null, new[]{ typeof(global::DistributedMatchEngine.FqdnListReply.Types.FLStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.DynamicLocGroupRequest), global::DistributedMatchEngine.DynamicLocGroupRequest.Parser, new[]{ "Ver", "SessionCookie", "LgId", "CommType", "UserData" }, null, new[]{ typeof(global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.DynamicLocGroupReply), global::DistributedMatchEngine.DynamicLocGroupReply.Parser, new[]{ "Ver", "Status", "ErrorCode", "GroupCookie" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.QosPosition), global::DistributedMatchEngine.QosPosition.Parser, new[]{ "Positionid", "GpsLocation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.QosPositionKpiRequest), global::DistributedMatchEngine.QosPositionKpiRequest.Parser, new[]{ "Ver", "SessionCookie", "Positions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.QosPositionResult), global::DistributedMatchEngine.QosPositionResult.Parser, new[]{ "Positionid", "GpsLocation", "DluserthroughputMin", "DluserthroughputAvg", "DluserthroughputMax", "UluserthroughputMin", "UluserthroughputAvg", "UluserthroughputMax", "LatencyMin", "LatencyAvg", "LatencyMax" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.QosPositionKpiReply), global::DistributedMatchEngine.QosPositionKpiReply.Parser, new[]{ "Ver", "Status", "PositionResults" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum IDTypes {
    [pbr::OriginalName("ID_UNDEFINED")] IdUndefined = 0,
    [pbr::OriginalName("IMEI")] Imei = 1,
    [pbr::OriginalName("MSISDN")] Msisdn = 2,
    [pbr::OriginalName("IPADDR")] Ipaddr = 3,
  }

  public enum ReplyStatus {
    [pbr::OriginalName("RS_UNDEFINED")] RsUndefined = 0,
    [pbr::OriginalName("RS_SUCCESS")] RsSuccess = 1,
    [pbr::OriginalName("RS_FAIL")] RsFail = 2,
  }

  #endregion

  #region Messages
  public sealed partial class RegisterClientRequest : pb::IMessage<RegisterClientRequest> {
    private static readonly pb::MessageParser<RegisterClientRequest> _parser = new pb::MessageParser<RegisterClientRequest>(() => new RegisterClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest(RegisterClientRequest other) : this() {
      ver_ = other.ver_;
      devName_ = other.devName_;
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      carrierName_ = other.carrierName_;
      authToken_ = other.authToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest Clone() {
      return new RegisterClientRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "dev_name" field.</summary>
    public const int DevNameFieldNumber = 2;
    private string devName_ = "";
    /// <summary>
    /// App Developer Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevName {
      get { return devName_; }
      set {
        devName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 3;
    private string appName_ = "";
    /// <summary>
    /// App Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_vers" field.</summary>
    public const int AppVersFieldNumber = 4;
    private string appVers_ = "";
    /// <summary>
    /// App Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 5;
    private string carrierName_ = "";
    /// <summary>
    /// carrier name, not currently used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auth_token" field.</summary>
    public const int AuthTokenFieldNumber = 6;
    private string authToken_ = "";
    /// <summary>
    /// authentication token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthToken {
      get { return authToken_; }
      set {
        authToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (DevName != other.DevName) return false;
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      if (CarrierName != other.CarrierName) return false;
      if (AuthToken != other.AuthToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (DevName.Length != 0) hash ^= DevName.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (AuthToken.Length != 0) hash ^= AuthToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (DevName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DevName);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppVers);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CarrierName);
      }
      if (AuthToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AuthToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (DevName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevName);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (AuthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.DevName.Length != 0) {
        DevName = other.DevName;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.AuthToken.Length != 0) {
        AuthToken = other.AuthToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            DevName = input.ReadString();
            break;
          }
          case 26: {
            AppName = input.ReadString();
            break;
          }
          case 34: {
            AppVers = input.ReadString();
            break;
          }
          case 42: {
            CarrierName = input.ReadString();
            break;
          }
          case 50: {
            AuthToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterClientReply : pb::IMessage<RegisterClientReply> {
    private static readonly pb::MessageParser<RegisterClientReply> _parser = new pb::MessageParser<RegisterClientReply>(() => new RegisterClientReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterClientReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply(RegisterClientReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      sessionCookie_ = other.sessionCookie_;
      tokenServerUri_ = other.tokenServerUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply Clone() {
      return new RegisterClientReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.ReplyStatus status_ = 0;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ReplyStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 3;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie to be used in later API calls
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_server_uri" field.</summary>
    public const int TokenServerUriFieldNumber = 4;
    private string tokenServerUri_ = "";
    /// <summary>
    /// URI for Token Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenServerUri {
      get { return tokenServerUri_; }
      set {
        tokenServerUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterClientReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterClientReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (TokenServerUri != other.TokenServerUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (TokenServerUri.Length != 0) hash ^= TokenServerUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionCookie);
      }
      if (TokenServerUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenServerUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (TokenServerUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenServerUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterClientReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.TokenServerUri.Length != 0) {
        TokenServerUri = other.TokenServerUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 26: {
            SessionCookie = input.ReadString();
            break;
          }
          case 34: {
            TokenServerUri = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindCloudletRequest : pb::IMessage<FindCloudletRequest> {
    private static readonly pb::MessageParser<FindCloudletRequest> _parser = new pb::MessageParser<FindCloudletRequest>(() => new FindCloudletRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindCloudletRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest(FindCloudletRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      devName_ = other.devName_;
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest Clone() {
      return new FindCloudletRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "dev_name" field.</summary>
    public const int DevNameFieldNumber = 5;
    private string devName_ = "";
    /// <summary>
    /// DevName is applicable to Platform apps only
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevName {
      get { return devName_; }
      set {
        devName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 6;
    private string appName_ = "";
    /// <summary>
    /// App Name is applicable to Platform apps only
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_vers" field.</summary>
    public const int AppVersFieldNumber = 7;
    private string appVers_ = "";
    /// <summary>
    /// App Version is applicable to Platform apps only
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindCloudletRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindCloudletRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (DevName != other.DevName) return false;
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (DevName.Length != 0) hash ^= DevName.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (DevName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DevName);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AppVers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (DevName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevName);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindCloudletRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.DevName.Length != 0) {
        DevName = other.DevName;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 42: {
            DevName = input.ReadString();
            break;
          }
          case 50: {
            AppName = input.ReadString();
            break;
          }
          case 58: {
            AppVers = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindCloudletReply : pb::IMessage<FindCloudletReply> {
    private static readonly pb::MessageParser<FindCloudletReply> _parser = new pb::MessageParser<FindCloudletReply>(() => new FindCloudletReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindCloudletReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply(FindCloudletReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      fqdn_ = other.fqdn_;
      ports_ = other.ports_.Clone();
      cloudletLocation_ = other.cloudletLocation_ != null ? other.cloudletLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply Clone() {
      return new FindCloudletReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus status_ = 0;
    /// <summary>
    /// Status return
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "fqdn" field.</summary>
    public const int FqdnFieldNumber = 3;
    private string fqdn_ = "";
    /// <summary>
    /// Full Qualified Domain Name of Closest App instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fqdn {
      get { return fqdn_; }
      set {
        fqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ports" field.</summary>
    public const int PortsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.AppPort> _repeated_ports_codec
        = pb::FieldCodec.ForMessage(34, global::DistributedMatchEngine.AppPort.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.AppPort> ports_ = new pbc::RepeatedField<global::DistributedMatchEngine.AppPort>();
    /// <summary>
    /// List of Service Endpoints for AppInst
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.AppPort> Ports {
      get { return ports_; }
    }

    /// <summary>Field number for the "cloudlet_location" field.</summary>
    public const int CloudletLocationFieldNumber = 5;
    private global::DistributedMatchEngine.Loc cloudletLocation_;
    /// <summary>
    /// Location of the cloudlet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc CloudletLocation {
      get { return cloudletLocation_; }
      set {
        cloudletLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindCloudletReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindCloudletReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (Fqdn != other.Fqdn) return false;
      if(!ports_.Equals(other.ports_)) return false;
      if (!object.Equals(CloudletLocation, other.CloudletLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Fqdn.Length != 0) hash ^= Fqdn.GetHashCode();
      hash ^= ports_.GetHashCode();
      if (cloudletLocation_ != null) hash ^= CloudletLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Fqdn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fqdn);
      }
      ports_.WriteTo(output, _repeated_ports_codec);
      if (cloudletLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CloudletLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Fqdn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fqdn);
      }
      size += ports_.CalculateSize(_repeated_ports_codec);
      if (cloudletLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudletLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindCloudletReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Fqdn.Length != 0) {
        Fqdn = other.Fqdn;
      }
      ports_.Add(other.ports_);
      if (other.cloudletLocation_ != null) {
        if (cloudletLocation_ == null) {
          cloudletLocation_ = new global::DistributedMatchEngine.Loc();
        }
        CloudletLocation.MergeFrom(other.CloudletLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus) input.ReadEnum();
            break;
          }
          case 26: {
            Fqdn = input.ReadString();
            break;
          }
          case 34: {
            ports_.AddEntriesFrom(input, _repeated_ports_codec);
            break;
          }
          case 42: {
            if (cloudletLocation_ == null) {
              cloudletLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(cloudletLocation_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FindCloudletReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum FindStatus {
        [pbr::OriginalName("FIND_UNKNOWN")] FindUnknown = 0,
        [pbr::OriginalName("FIND_FOUND")] FindFound = 1,
        [pbr::OriginalName("FIND_NOTFOUND")] FindNotfound = 2,
      }

    }
    #endregion

  }

  public sealed partial class VerifyLocationRequest : pb::IMessage<VerifyLocationRequest> {
    private static readonly pb::MessageParser<VerifyLocationRequest> _parser = new pb::MessageParser<VerifyLocationRequest>(() => new VerifyLocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyLocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest(VerifyLocationRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      verifyLocToken_ = other.verifyLocToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest Clone() {
      return new VerifyLocationRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location to verify
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "verify_loc_token" field.</summary>
    public const int VerifyLocTokenFieldNumber = 5;
    private string verifyLocToken_ = "";
    /// <summary>
    /// token used for location verification, app must retrieve from TokenServerURI
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VerifyLocToken {
      get { return verifyLocToken_; }
      set {
        verifyLocToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyLocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyLocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (VerifyLocToken != other.VerifyLocToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (VerifyLocToken.Length != 0) hash ^= VerifyLocToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (VerifyLocToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VerifyLocToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (VerifyLocToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VerifyLocToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyLocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.VerifyLocToken.Length != 0) {
        VerifyLocToken = other.VerifyLocToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 42: {
            VerifyLocToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyLocationReply : pb::IMessage<VerifyLocationReply> {
    private static readonly pb::MessageParser<VerifyLocationReply> _parser = new pb::MessageParser<VerifyLocationReply>(() => new VerifyLocationReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyLocationReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply(VerifyLocationReply other) : this() {
      ver_ = other.ver_;
      towerStatus_ = other.towerStatus_;
      gpsLocationStatus_ = other.gpsLocationStatus_;
      gpsLocationAccuracyKm_ = other.gpsLocationAccuracyKm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply Clone() {
      return new VerifyLocationReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "tower_status" field.</summary>
    public const int TowerStatusFieldNumber = 2;
    private global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus towerStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus TowerStatus {
      get { return towerStatus_; }
      set {
        towerStatus_ = value;
      }
    }

    /// <summary>Field number for the "gps_location_status" field.</summary>
    public const int GpsLocationStatusFieldNumber = 3;
    private global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus gpsLocationStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus GpsLocationStatus {
      get { return gpsLocationStatus_; }
      set {
        gpsLocationStatus_ = value;
      }
    }

    /// <summary>Field number for the "gps_location_accuracy_km" field.</summary>
    public const int GpsLocationAccuracyKmFieldNumber = 4;
    private double gpsLocationAccuracyKm_;
    /// <summary>
    /// location accuracy, the location is verified to 
    /// be within this number of kilometers.  Negative value
    /// means no verification was done 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GpsLocationAccuracyKm {
      get { return gpsLocationAccuracyKm_; }
      set {
        gpsLocationAccuracyKm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyLocationReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyLocationReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (TowerStatus != other.TowerStatus) return false;
      if (GpsLocationStatus != other.GpsLocationStatus) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GpsLocationAccuracyKm, other.GpsLocationAccuracyKm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (TowerStatus != 0) hash ^= TowerStatus.GetHashCode();
      if (GpsLocationStatus != 0) hash ^= GpsLocationStatus.GetHashCode();
      if (GpsLocationAccuracyKm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GpsLocationAccuracyKm);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (TowerStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TowerStatus);
      }
      if (GpsLocationStatus != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GpsLocationStatus);
      }
      if (GpsLocationAccuracyKm != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(GpsLocationAccuracyKm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (TowerStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TowerStatus);
      }
      if (GpsLocationStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GpsLocationStatus);
      }
      if (GpsLocationAccuracyKm != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyLocationReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.TowerStatus != 0) {
        TowerStatus = other.TowerStatus;
      }
      if (other.GpsLocationStatus != 0) {
        GpsLocationStatus = other.GpsLocationStatus;
      }
      if (other.GpsLocationAccuracyKm != 0D) {
        GpsLocationAccuracyKm = other.GpsLocationAccuracyKm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            towerStatus_ = (global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus) input.ReadEnum();
            break;
          }
          case 24: {
            gpsLocationStatus_ = (global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus) input.ReadEnum();
            break;
          }
          case 33: {
            GpsLocationAccuracyKm = input.ReadDouble();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the VerifyLocationReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum TowerStatus {
        [pbr::OriginalName("TOWER_UNKNOWN")] TowerUnknown = 0,
        [pbr::OriginalName("CONNECTED_TO_SPECIFIED_TOWER")] ConnectedToSpecifiedTower = 1,
        [pbr::OriginalName("NOT_CONNECTED_TO_SPECIFIED_TOWER")] NotConnectedToSpecifiedTower = 2,
      }

      public enum GPSLocationStatus {
        [pbr::OriginalName("LOC_UNKNOWN")] LocUnknown = 0,
        [pbr::OriginalName("LOC_VERIFIED")] LocVerified = 1,
        [pbr::OriginalName("LOC_MISMATCH_SAME_COUNTRY")] LocMismatchSameCountry = 2,
        [pbr::OriginalName("LOC_MISMATCH_OTHER_COUNTRY")] LocMismatchOtherCountry = 3,
        [pbr::OriginalName("LOC_ROAMING_COUNTRY_MATCH")] LocRoamingCountryMatch = 4,
        [pbr::OriginalName("LOC_ROAMING_COUNTRY_MISMATCH")] LocRoamingCountryMismatch = 5,
        [pbr::OriginalName("LOC_ERROR_UNAUTHORIZED")] LocErrorUnauthorized = 6,
        [pbr::OriginalName("LOC_ERROR_OTHER")] LocErrorOther = 7,
      }

    }
    #endregion

  }

  public sealed partial class GetLocationRequest : pb::IMessage<GetLocationRequest> {
    private static readonly pb::MessageParser<GetLocationRequest> _parser = new pb::MessageParser<GetLocationRequest>(() => new GetLocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest(GetLocationRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest Clone() {
      return new GetLocationRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLocationReply : pb::IMessage<GetLocationReply> {
    private static readonly pb::MessageParser<GetLocationReply> _parser = new pb::MessageParser<GetLocationReply>(() => new GetLocationReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLocationReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply(GetLocationReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      carrierName_ = other.carrierName_;
      tower_ = other.tower_;
      networkLocation_ = other.networkLocation_ != null ? other.networkLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply Clone() {
      return new GetLocationReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.GetLocationReply.Types.LocStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.GetLocationReply.Types.LocStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tower" field.</summary>
    public const int TowerFieldNumber = 4;
    private ulong tower_;
    /// <summary>
    /// The tower that user is currently connected to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Tower {
      get { return tower_; }
      set {
        tower_ = value;
      }
    }

    /// <summary>Field number for the "network_location" field.</summary>
    public const int NetworkLocationFieldNumber = 5;
    private global::DistributedMatchEngine.Loc networkLocation_;
    /// <summary>
    /// The GPS location of the user 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc NetworkLocation {
      get { return networkLocation_; }
      set {
        networkLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLocationReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLocationReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (CarrierName != other.CarrierName) return false;
      if (Tower != other.Tower) return false;
      if (!object.Equals(NetworkLocation, other.NetworkLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (Tower != 0UL) hash ^= Tower.GetHashCode();
      if (networkLocation_ != null) hash ^= NetworkLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (Tower != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Tower);
      }
      if (networkLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NetworkLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (Tower != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tower);
      }
      if (networkLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLocationReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.Tower != 0UL) {
        Tower = other.Tower;
      }
      if (other.networkLocation_ != null) {
        if (networkLocation_ == null) {
          networkLocation_ = new global::DistributedMatchEngine.Loc();
        }
        NetworkLocation.MergeFrom(other.NetworkLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.GetLocationReply.Types.LocStatus) input.ReadEnum();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 32: {
            Tower = input.ReadUInt64();
            break;
          }
          case 42: {
            if (networkLocation_ == null) {
              networkLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(networkLocation_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetLocationReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum LocStatus {
        [pbr::OriginalName("LOC_UNKNOWN")] LocUnknown = 0,
        [pbr::OriginalName("LOC_FOUND")] LocFound = 1,
        /// <summary>
        /// The user does not allow his location to be tracked
        /// </summary>
        [pbr::OriginalName("LOC_DENIED")] LocDenied = 2,
      }

    }
    #endregion

  }

  public sealed partial class AppInstListRequest : pb::IMessage<AppInstListRequest> {
    private static readonly pb::MessageParser<AppInstListRequest> _parser = new pb::MessageParser<AppInstListRequest>(() => new AppInstListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInstListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest(AppInstListRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest Clone() {
      return new AppInstListRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location of the user 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInstListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInstListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInstListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Appinstance : pb::IMessage<Appinstance> {
    private static readonly pb::MessageParser<Appinstance> _parser = new pb::MessageParser<Appinstance>(() => new Appinstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Appinstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance(Appinstance other) : this() {
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      fqdn_ = other.fqdn_;
      ports_ = other.ports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance Clone() {
      return new Appinstance(this);
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 1;
    private string appName_ = "";
    /// <summary>
    /// App Instance Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_vers" field.</summary>
    public const int AppVersFieldNumber = 2;
    private string appVers_ = "";
    /// <summary>
    /// App Instance Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fqdn" field.</summary>
    public const int FqdnFieldNumber = 3;
    private string fqdn_ = "";
    /// <summary>
    /// App Instance FQDN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fqdn {
      get { return fqdn_; }
      set {
        fqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ports" field.</summary>
    public const int PortsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.AppPort> _repeated_ports_codec
        = pb::FieldCodec.ForMessage(34, global::DistributedMatchEngine.AppPort.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.AppPort> ports_ = new pbc::RepeatedField<global::DistributedMatchEngine.AppPort>();
    /// <summary>
    /// ports to access app
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.AppPort> Ports {
      get { return ports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Appinstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Appinstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      if (Fqdn != other.Fqdn) return false;
      if(!ports_.Equals(other.ports_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (Fqdn.Length != 0) hash ^= Fqdn.GetHashCode();
      hash ^= ports_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppVers);
      }
      if (Fqdn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fqdn);
      }
      ports_.WriteTo(output, _repeated_ports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (Fqdn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fqdn);
      }
      size += ports_.CalculateSize(_repeated_ports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Appinstance other) {
      if (other == null) {
        return;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      if (other.Fqdn.Length != 0) {
        Fqdn = other.Fqdn;
      }
      ports_.Add(other.ports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppName = input.ReadString();
            break;
          }
          case 18: {
            AppVers = input.ReadString();
            break;
          }
          case 26: {
            Fqdn = input.ReadString();
            break;
          }
          case 34: {
            ports_.AddEntriesFrom(input, _repeated_ports_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloudletLocation : pb::IMessage<CloudletLocation> {
    private static readonly pb::MessageParser<CloudletLocation> _parser = new pb::MessageParser<CloudletLocation>(() => new CloudletLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudletLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation(CloudletLocation other) : this() {
      carrierName_ = other.carrierName_;
      cloudletName_ = other.cloudletName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      distance_ = other.distance_;
      appinstances_ = other.appinstances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation Clone() {
      return new CloudletLocation(this);
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 1;
    private string carrierName_ = "";
    /// <summary>
    /// The carrier name that user is connected to ("Cellular Carrier Name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cloudlet_name" field.</summary>
    public const int CloudletNameFieldNumber = 2;
    private string cloudletName_ = "";
    /// <summary>
    /// Cloudlet Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CloudletName {
      get { return cloudletName_; }
      set {
        cloudletName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 3;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS Location of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 4;
    private double distance_;
    /// <summary>
    /// Distance of cloudlet vs loc in request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "appinstances" field.</summary>
    public const int AppinstancesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.Appinstance> _repeated_appinstances_codec
        = pb::FieldCodec.ForMessage(42, global::DistributedMatchEngine.Appinstance.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.Appinstance> appinstances_ = new pbc::RepeatedField<global::DistributedMatchEngine.Appinstance>();
    /// <summary>
    /// App instances
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.Appinstance> Appinstances {
      get { return appinstances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudletLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudletLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CarrierName != other.CarrierName) return false;
      if (CloudletName != other.CloudletName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Distance, other.Distance)) return false;
      if(!appinstances_.Equals(other.appinstances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (CloudletName.Length != 0) hash ^= CloudletName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (Distance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Distance);
      hash ^= appinstances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CarrierName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CarrierName);
      }
      if (CloudletName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CloudletName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GpsLocation);
      }
      if (Distance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Distance);
      }
      appinstances_.WriteTo(output, _repeated_appinstances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (CloudletName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CloudletName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (Distance != 0D) {
        size += 1 + 8;
      }
      size += appinstances_.CalculateSize(_repeated_appinstances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudletLocation other) {
      if (other == null) {
        return;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.CloudletName.Length != 0) {
        CloudletName = other.CloudletName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.Distance != 0D) {
        Distance = other.Distance;
      }
      appinstances_.Add(other.appinstances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CarrierName = input.ReadString();
            break;
          }
          case 18: {
            CloudletName = input.ReadString();
            break;
          }
          case 26: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 33: {
            Distance = input.ReadDouble();
            break;
          }
          case 42: {
            appinstances_.AddEntriesFrom(input, _repeated_appinstances_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppInstListReply : pb::IMessage<AppInstListReply> {
    private static readonly pb::MessageParser<AppInstListReply> _parser = new pb::MessageParser<AppInstListReply>(() => new AppInstListReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInstListReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply(AppInstListReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      cloudlets_ = other.cloudlets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply Clone() {
      return new AppInstListReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.AppInstListReply.Types.AIStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.AppInstListReply.Types.AIStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "cloudlets" field.</summary>
    public const int CloudletsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.CloudletLocation> _repeated_cloudlets_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.CloudletLocation.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation> cloudlets_ = new pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation> Cloudlets {
      get { return cloudlets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInstListReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInstListReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if(!cloudlets_.Equals(other.cloudlets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= cloudlets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      cloudlets_.WriteTo(output, _repeated_cloudlets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += cloudlets_.CalculateSize(_repeated_cloudlets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInstListReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      cloudlets_.Add(other.cloudlets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.AppInstListReply.Types.AIStatus) input.ReadEnum();
            break;
          }
          case 26: {
            cloudlets_.AddEntriesFrom(input, _repeated_cloudlets_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AppInstListReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum AIStatus {
        [pbr::OriginalName("AI_UNDEFINED")] AiUndefined = 0,
        [pbr::OriginalName("AI_SUCCESS")] AiSuccess = 1,
        [pbr::OriginalName("AI_FAIL")] AiFail = 2,
      }

    }
    #endregion

  }

  public sealed partial class FqdnListRequest : pb::IMessage<FqdnListRequest> {
    private static readonly pb::MessageParser<FqdnListRequest> _parser = new pb::MessageParser<FqdnListRequest>(() => new FqdnListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FqdnListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListRequest(FqdnListRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListRequest Clone() {
      return new FqdnListRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FqdnListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FqdnListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FqdnListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppFqdn : pb::IMessage<AppFqdn> {
    private static readonly pb::MessageParser<AppFqdn> _parser = new pb::MessageParser<AppFqdn>(() => new AppFqdn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppFqdn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFqdn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFqdn(AppFqdn other) : this() {
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      devName_ = other.devName_;
      fqdns_ = other.fqdns_.Clone();
      androidPackageName_ = other.androidPackageName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFqdn Clone() {
      return new AppFqdn(this);
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 1;
    private string appName_ = "";
    /// <summary>
    /// App  Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_vers" field.</summary>
    public const int AppVersFieldNumber = 2;
    private string appVers_ = "";
    /// <summary>
    /// App Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_name" field.</summary>
    public const int DevNameFieldNumber = 3;
    private string devName_ = "";
    /// <summary>
    /// developer name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevName {
      get { return devName_; }
      set {
        devName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fqdns" field.</summary>
    public const int FqdnsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_fqdns_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> fqdns_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// App FQDN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Fqdns {
      get { return fqdns_; }
    }

    /// <summary>Field number for the "android_package_name" field.</summary>
    public const int AndroidPackageNameFieldNumber = 5;
    private string androidPackageName_ = "";
    /// <summary>
    /// optional android package name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AndroidPackageName {
      get { return androidPackageName_; }
      set {
        androidPackageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppFqdn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppFqdn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      if (DevName != other.DevName) return false;
      if(!fqdns_.Equals(other.fqdns_)) return false;
      if (AndroidPackageName != other.AndroidPackageName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (DevName.Length != 0) hash ^= DevName.GetHashCode();
      hash ^= fqdns_.GetHashCode();
      if (AndroidPackageName.Length != 0) hash ^= AndroidPackageName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppVers);
      }
      if (DevName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DevName);
      }
      fqdns_.WriteTo(output, _repeated_fqdns_codec);
      if (AndroidPackageName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AndroidPackageName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (DevName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevName);
      }
      size += fqdns_.CalculateSize(_repeated_fqdns_codec);
      if (AndroidPackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AndroidPackageName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppFqdn other) {
      if (other == null) {
        return;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      if (other.DevName.Length != 0) {
        DevName = other.DevName;
      }
      fqdns_.Add(other.fqdns_);
      if (other.AndroidPackageName.Length != 0) {
        AndroidPackageName = other.AndroidPackageName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppName = input.ReadString();
            break;
          }
          case 18: {
            AppVers = input.ReadString();
            break;
          }
          case 26: {
            DevName = input.ReadString();
            break;
          }
          case 34: {
            fqdns_.AddEntriesFrom(input, _repeated_fqdns_codec);
            break;
          }
          case 42: {
            AndroidPackageName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FqdnListReply : pb::IMessage<FqdnListReply> {
    private static readonly pb::MessageParser<FqdnListReply> _parser = new pb::MessageParser<FqdnListReply>(() => new FqdnListReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FqdnListReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListReply(FqdnListReply other) : this() {
      ver_ = other.ver_;
      appFqdns_ = other.appFqdns_.Clone();
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListReply Clone() {
      return new FqdnListReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "app_fqdns" field.</summary>
    public const int AppFqdnsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.AppFqdn> _repeated_appFqdns_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.AppFqdn.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.AppFqdn> appFqdns_ = new pbc::RepeatedField<global::DistributedMatchEngine.AppFqdn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.AppFqdn> AppFqdns {
      get { return appFqdns_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::DistributedMatchEngine.FqdnListReply.Types.FLStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.FqdnListReply.Types.FLStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FqdnListReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FqdnListReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if(!appFqdns_.Equals(other.appFqdns_)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      hash ^= appFqdns_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      appFqdns_.WriteTo(output, _repeated_appFqdns_codec);
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      size += appFqdns_.CalculateSize(_repeated_appFqdns_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FqdnListReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      appFqdns_.Add(other.appFqdns_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 26: {
            appFqdns_.AddEntriesFrom(input, _repeated_appFqdns_codec);
            break;
          }
          case 32: {
            status_ = (global::DistributedMatchEngine.FqdnListReply.Types.FLStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FqdnListReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum FLStatus {
        [pbr::OriginalName("FL_UNDEFINED")] FlUndefined = 0,
        [pbr::OriginalName("FL_SUCCESS")] FlSuccess = 1,
        [pbr::OriginalName("FL_FAIL")] FlFail = 2,
      }

    }
    #endregion

  }

  public sealed partial class DynamicLocGroupRequest : pb::IMessage<DynamicLocGroupRequest> {
    private static readonly pb::MessageParser<DynamicLocGroupRequest> _parser = new pb::MessageParser<DynamicLocGroupRequest>(() => new DynamicLocGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicLocGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest(DynamicLocGroupRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      lgId_ = other.lgId_;
      commType_ = other.commType_;
      userData_ = other.userData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest Clone() {
      return new DynamicLocGroupRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lg_id" field.</summary>
    public const int LgIdFieldNumber = 3;
    private ulong lgId_;
    /// <summary>
    /// Dynamic Location Group Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LgId {
      get { return lgId_; }
      set {
        lgId_ = value;
      }
    }

    /// <summary>Field number for the "comm_type" field.</summary>
    public const int CommTypeFieldNumber = 11;
    private global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType commType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType CommType {
      get { return commType_; }
      set {
        commType_ = value;
      }
    }

    /// <summary>Field number for the "user_data" field.</summary>
    public const int UserDataFieldNumber = 12;
    private string userData_ = "";
    /// <summary>
    /// Unused
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserData {
      get { return userData_; }
      set {
        userData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicLocGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicLocGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (LgId != other.LgId) return false;
      if (CommType != other.CommType) return false;
      if (UserData != other.UserData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (LgId != 0UL) hash ^= LgId.GetHashCode();
      if (CommType != 0) hash ^= CommType.GetHashCode();
      if (UserData.Length != 0) hash ^= UserData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (LgId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LgId);
      }
      if (CommType != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CommType);
      }
      if (UserData.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(UserData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (LgId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LgId);
      }
      if (CommType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommType);
      }
      if (UserData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicLocGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.LgId != 0UL) {
        LgId = other.LgId;
      }
      if (other.CommType != 0) {
        CommType = other.CommType;
      }
      if (other.UserData.Length != 0) {
        UserData = other.UserData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 24: {
            LgId = input.ReadUInt64();
            break;
          }
          case 88: {
            commType_ = (global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType) input.ReadEnum();
            break;
          }
          case 98: {
            UserData = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DynamicLocGroupRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Use Secure communication or Open with the group
      /// </summary>
      public enum DlgCommType {
        [pbr::OriginalName("DLG_UNDEFINED")] DlgUndefined = 0,
        [pbr::OriginalName("DLG_SECURE")] DlgSecure = 1,
        [pbr::OriginalName("DLG_OPEN")] DlgOpen = 2,
      }

    }
    #endregion

  }

  public sealed partial class DynamicLocGroupReply : pb::IMessage<DynamicLocGroupReply> {
    private static readonly pb::MessageParser<DynamicLocGroupReply> _parser = new pb::MessageParser<DynamicLocGroupReply>(() => new DynamicLocGroupReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicLocGroupReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply(DynamicLocGroupReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      errorCode_ = other.errorCode_;
      groupCookie_ = other.groupCookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply Clone() {
      return new DynamicLocGroupReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.ReplyStatus status_ = 0;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ReplyStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    private uint errorCode_;
    /// <summary>
    /// Error Code based on Failure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "group_cookie" field.</summary>
    public const int GroupCookieFieldNumber = 5;
    private string groupCookie_ = "";
    /// <summary>
    /// Group Cookie for Secure Group Communication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupCookie {
      get { return groupCookie_; }
      set {
        groupCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicLocGroupReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicLocGroupReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (GroupCookie != other.GroupCookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (GroupCookie.Length != 0) hash ^= GroupCookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (GroupCookie.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorCode);
      }
      if (GroupCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupCookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicLocGroupReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.GroupCookie.Length != 0) {
        GroupCookie = other.GroupCookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 42: {
            GroupCookie = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QosPosition : pb::IMessage<QosPosition> {
    private static readonly pb::MessageParser<QosPosition> _parser = new pb::MessageParser<QosPosition>(() => new QosPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QosPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPosition(QosPosition other) : this() {
      positionid_ = other.positionid_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPosition Clone() {
      return new QosPosition(this);
    }

    /// <summary>Field number for the "positionid" field.</summary>
    public const int PositionidFieldNumber = 1;
    private long positionid_;
    /// <summary>
    /// as set by the client, must be unique within QosRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Positionid {
      get { return positionid_; }
      set {
        positionid_ = value;
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 2;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    ///location
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QosPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QosPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Positionid != other.Positionid) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Positionid != 0L) hash ^= Positionid.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Positionid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Positionid);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GpsLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Positionid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Positionid);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QosPosition other) {
      if (other == null) {
        return;
      }
      if (other.Positionid != 0L) {
        Positionid = other.Positionid;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Positionid = input.ReadInt64();
            break;
          }
          case 18: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QosPositionKpiRequest : pb::IMessage<QosPositionKpiRequest> {
    private static readonly pb::MessageParser<QosPositionKpiRequest> _parser = new pb::MessageParser<QosPositionKpiRequest>(() => new QosPositionKpiRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QosPositionKpiRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiRequest(QosPositionKpiRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      positions_ = other.positions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiRequest Clone() {
      return new QosPositionKpiRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    /// API version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.QosPosition> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.QosPosition.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.QosPosition> positions_ = new pbc::RepeatedField<global::DistributedMatchEngine.QosPosition>();
    /// <summary>
    /// list of positions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.QosPosition> Positions {
      get { return positions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QosPositionKpiRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QosPositionKpiRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if(!positions_.Equals(other.positions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      hash ^= positions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      size += positions_.CalculateSize(_repeated_positions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QosPositionKpiRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      positions_.Add(other.positions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QosPositionResult : pb::IMessage<QosPositionResult> {
    private static readonly pb::MessageParser<QosPositionResult> _parser = new pb::MessageParser<QosPositionResult>(() => new QosPositionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QosPositionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionResult(QosPositionResult other) : this() {
      positionid_ = other.positionid_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      dluserthroughputMin_ = other.dluserthroughputMin_;
      dluserthroughputAvg_ = other.dluserthroughputAvg_;
      dluserthroughputMax_ = other.dluserthroughputMax_;
      uluserthroughputMin_ = other.uluserthroughputMin_;
      uluserthroughputAvg_ = other.uluserthroughputAvg_;
      uluserthroughputMax_ = other.uluserthroughputMax_;
      latencyMin_ = other.latencyMin_;
      latencyAvg_ = other.latencyAvg_;
      latencyMax_ = other.latencyMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionResult Clone() {
      return new QosPositionResult(this);
    }

    /// <summary>Field number for the "positionid" field.</summary>
    public const int PositionidFieldNumber = 1;
    private long positionid_;
    /// <summary>
    /// as set by the client, must be unique within one QosPositionKpiRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Positionid {
      get { return positionid_; }
      set {
        positionid_ = value;
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 2;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// the location which was requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "dluserthroughput_min" field.</summary>
    public const int DluserthroughputMinFieldNumber = 3;
    private float dluserthroughputMin_;
    /// <summary>
    /// throughput 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DluserthroughputMin {
      get { return dluserthroughputMin_; }
      set {
        dluserthroughputMin_ = value;
      }
    }

    /// <summary>Field number for the "dluserthroughput_avg" field.</summary>
    public const int DluserthroughputAvgFieldNumber = 4;
    private float dluserthroughputAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DluserthroughputAvg {
      get { return dluserthroughputAvg_; }
      set {
        dluserthroughputAvg_ = value;
      }
    }

    /// <summary>Field number for the "dluserthroughput_max" field.</summary>
    public const int DluserthroughputMaxFieldNumber = 5;
    private float dluserthroughputMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DluserthroughputMax {
      get { return dluserthroughputMax_; }
      set {
        dluserthroughputMax_ = value;
      }
    }

    /// <summary>Field number for the "uluserthroughput_min" field.</summary>
    public const int UluserthroughputMinFieldNumber = 6;
    private float uluserthroughputMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float UluserthroughputMin {
      get { return uluserthroughputMin_; }
      set {
        uluserthroughputMin_ = value;
      }
    }

    /// <summary>Field number for the "uluserthroughput_avg" field.</summary>
    public const int UluserthroughputAvgFieldNumber = 7;
    private float uluserthroughputAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float UluserthroughputAvg {
      get { return uluserthroughputAvg_; }
      set {
        uluserthroughputAvg_ = value;
      }
    }

    /// <summary>Field number for the "uluserthroughput_max" field.</summary>
    public const int UluserthroughputMaxFieldNumber = 8;
    private float uluserthroughputMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float UluserthroughputMax {
      get { return uluserthroughputMax_; }
      set {
        uluserthroughputMax_ = value;
      }
    }

    /// <summary>Field number for the "latency_min" field.</summary>
    public const int LatencyMinFieldNumber = 9;
    private float latencyMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LatencyMin {
      get { return latencyMin_; }
      set {
        latencyMin_ = value;
      }
    }

    /// <summary>Field number for the "latency_avg" field.</summary>
    public const int LatencyAvgFieldNumber = 10;
    private float latencyAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LatencyAvg {
      get { return latencyAvg_; }
      set {
        latencyAvg_ = value;
      }
    }

    /// <summary>Field number for the "latency_max" field.</summary>
    public const int LatencyMaxFieldNumber = 11;
    private float latencyMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LatencyMax {
      get { return latencyMax_; }
      set {
        latencyMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QosPositionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QosPositionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Positionid != other.Positionid) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DluserthroughputMin, other.DluserthroughputMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DluserthroughputAvg, other.DluserthroughputAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DluserthroughputMax, other.DluserthroughputMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UluserthroughputMin, other.UluserthroughputMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UluserthroughputAvg, other.UluserthroughputAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UluserthroughputMax, other.UluserthroughputMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LatencyMin, other.LatencyMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LatencyAvg, other.LatencyAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LatencyMax, other.LatencyMax)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Positionid != 0L) hash ^= Positionid.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (DluserthroughputMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DluserthroughputMin);
      if (DluserthroughputAvg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DluserthroughputAvg);
      if (DluserthroughputMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DluserthroughputMax);
      if (UluserthroughputMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UluserthroughputMin);
      if (UluserthroughputAvg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UluserthroughputAvg);
      if (UluserthroughputMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UluserthroughputMax);
      if (LatencyMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LatencyMin);
      if (LatencyAvg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LatencyAvg);
      if (LatencyMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LatencyMax);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Positionid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Positionid);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GpsLocation);
      }
      if (DluserthroughputMin != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(DluserthroughputMin);
      }
      if (DluserthroughputAvg != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(DluserthroughputAvg);
      }
      if (DluserthroughputMax != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DluserthroughputMax);
      }
      if (UluserthroughputMin != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(UluserthroughputMin);
      }
      if (UluserthroughputAvg != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(UluserthroughputAvg);
      }
      if (UluserthroughputMax != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(UluserthroughputMax);
      }
      if (LatencyMin != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(LatencyMin);
      }
      if (LatencyAvg != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(LatencyAvg);
      }
      if (LatencyMax != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(LatencyMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Positionid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Positionid);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (DluserthroughputMin != 0F) {
        size += 1 + 4;
      }
      if (DluserthroughputAvg != 0F) {
        size += 1 + 4;
      }
      if (DluserthroughputMax != 0F) {
        size += 1 + 4;
      }
      if (UluserthroughputMin != 0F) {
        size += 1 + 4;
      }
      if (UluserthroughputAvg != 0F) {
        size += 1 + 4;
      }
      if (UluserthroughputMax != 0F) {
        size += 1 + 4;
      }
      if (LatencyMin != 0F) {
        size += 1 + 4;
      }
      if (LatencyAvg != 0F) {
        size += 1 + 4;
      }
      if (LatencyMax != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QosPositionResult other) {
      if (other == null) {
        return;
      }
      if (other.Positionid != 0L) {
        Positionid = other.Positionid;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          gpsLocation_ = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.DluserthroughputMin != 0F) {
        DluserthroughputMin = other.DluserthroughputMin;
      }
      if (other.DluserthroughputAvg != 0F) {
        DluserthroughputAvg = other.DluserthroughputAvg;
      }
      if (other.DluserthroughputMax != 0F) {
        DluserthroughputMax = other.DluserthroughputMax;
      }
      if (other.UluserthroughputMin != 0F) {
        UluserthroughputMin = other.UluserthroughputMin;
      }
      if (other.UluserthroughputAvg != 0F) {
        UluserthroughputAvg = other.UluserthroughputAvg;
      }
      if (other.UluserthroughputMax != 0F) {
        UluserthroughputMax = other.UluserthroughputMax;
      }
      if (other.LatencyMin != 0F) {
        LatencyMin = other.LatencyMin;
      }
      if (other.LatencyAvg != 0F) {
        LatencyAvg = other.LatencyAvg;
      }
      if (other.LatencyMax != 0F) {
        LatencyMax = other.LatencyMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Positionid = input.ReadInt64();
            break;
          }
          case 18: {
            if (gpsLocation_ == null) {
              gpsLocation_ = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(gpsLocation_);
            break;
          }
          case 29: {
            DluserthroughputMin = input.ReadFloat();
            break;
          }
          case 37: {
            DluserthroughputAvg = input.ReadFloat();
            break;
          }
          case 45: {
            DluserthroughputMax = input.ReadFloat();
            break;
          }
          case 53: {
            UluserthroughputMin = input.ReadFloat();
            break;
          }
          case 61: {
            UluserthroughputAvg = input.ReadFloat();
            break;
          }
          case 69: {
            UluserthroughputMax = input.ReadFloat();
            break;
          }
          case 77: {
            LatencyMin = input.ReadFloat();
            break;
          }
          case 85: {
            LatencyAvg = input.ReadFloat();
            break;
          }
          case 93: {
            LatencyMax = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QosPositionKpiReply : pb::IMessage<QosPositionKpiReply> {
    private static readonly pb::MessageParser<QosPositionKpiReply> _parser = new pb::MessageParser<QosPositionKpiReply>(() => new QosPositionKpiReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QosPositionKpiReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiReply(QosPositionKpiReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      positionResults_ = other.positionResults_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiReply Clone() {
      return new QosPositionKpiReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.ReplyStatus status_ = 0;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ReplyStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "position_results" field.</summary>
    public const int PositionResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.QosPositionResult> _repeated_positionResults_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.QosPositionResult.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.QosPositionResult> positionResults_ = new pbc::RepeatedField<global::DistributedMatchEngine.QosPositionResult>();
    /// <summary>
    /// kpi details
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.QosPositionResult> PositionResults {
      get { return positionResults_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QosPositionKpiReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QosPositionKpiReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if(!positionResults_.Equals(other.positionResults_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= positionResults_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      positionResults_.WriteTo(output, _repeated_positionResults_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += positionResults_.CalculateSize(_repeated_positionResults_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QosPositionKpiReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      positionResults_.Add(other.positionResults_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            status_ = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 26: {
            positionResults_.AddEntriesFrom(input, _repeated_positionResults_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
