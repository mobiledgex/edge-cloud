apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven-publish'

def grpcVersion='1.15.1'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def nexusUser = properties.getProperty("nexus.user")
def nexusPassword = properties.getProperty("nexus.password")

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.3.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            proto {
                srcDirs '../../../../d-match-engine/dme-proto'
                srcDirs '../../../third_party/googleapis'
            }
            java {
            }
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    protobuf 'com.google.protobuf:protobuf-java:3.0.2' // FIXME: Timestamp, for lite version: old lib: https://github.com/google/protobuf/issues/1889
    implementation 'javax.annotation:javax.annotation-api:1.2'

    // For Google Location Services.
    implementation 'com.google.android.gms:play-services-location:15.0.1'
}

publishing {
    repositories {
        maven {
            def version = android.defaultConfig.versionName
            def releasesRepoUrl = "https://registry.mobiledgex.net/nexus/content/repositories/releases/"
            def snapshotsRepoUrl = "https://registry.mobiledgex.net/nexus/content/repositories/snapshots/"
            url = version.endsWith('SNAP') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username nexusUser
                password nexusPassword
            }
            authentication {
                digest(DigestAuthentication)
            }
        }
        mavenLocal()
    }

    publications {
        maven(MavenPublication) {
            // AAR of each library
            version android.defaultConfig.versionName
            groupId "com.mobiledgex"
            artifactId "${project.name}"
            artifact "${project.buildDir}/outputs/aar/${project.name}-release.aar"
        }
    }
}
