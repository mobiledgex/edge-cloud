// Application instance on a Cloudlet

syntax = "proto3";
package proto;

import "google/api/annotations.proto";
import "result.proto";
import "github.com/mobiledgex/edge-cloud/protogen/protogen.proto";
import "app.proto";
import "cloudlet.proto";
import "loc.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message AppInstKey {
  // App key
  AppKey app_key = 1 [(gogoproto.nullable) = false];
  // Cloudlet it's on
  CloudletKey cloudlet_key = 2 [(gogoproto.nullable) = false];
  // inst id
  fixed64 id = 3;
  option (protogen.generate_matches) = true;
  option (protogen.obj_key) = true;
  option (gogoproto.gostring) = true;
}

// AppInsts are instances of an application instantiated
// on a cloudlet, like a docker or VM instance.
message AppInst {
  bytes fields = 1;
  // Unique identifier key
  AppInstKey key = 2 [(gogoproto.nullable) = false];
  // Cache the location of the cloudlet
  Loc cloudlet_loc = 3 [(gogoproto.nullable) = false];
  // how to connect to this instance
  bytes ip = 4;
  // port to connect to this instance
  uint32 port = 5;
  // type of instance
  enum Liveness {
    UNKNOWN = 0;
    STATIC = 1;
    DYNAMIC = 2;
  }
  Liveness liveness = 6;
  option (protogen.generate_matches) = true;
  option (protogen.generate_cud) = true;
}

// This API is for manual configuration of static app instances.
// The long term goal is that most app instance creation/deletion
// will be dynamic based on load.
service AppInstApi {
  rpc CreateAppInst(AppInst) returns (Result) {
    option (google.api.http) = {
      post: "/create/appinst"
      body: "*"
    };
  }
  rpc DeleteAppInst(AppInst) returns (Result) {
   option (google.api.http) = {
      post: "/delete/appinst"
      body: "*"
    };
  }
  rpc UpdateAppInst(AppInst) returns (Result) {
   option (google.api.http) = {
      post: "/update/appinst"
      body: "*"
    };
  }
  rpc ShowAppInst(AppInst) returns (stream AppInst) {
   option (google.api.http) = {
      post: "/show/appinst"
      body: "*"
    };
  }
}