// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cloudlet.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Cloudlet Sites are created and uploaded by Operators
// This information is used to connect to and manage Cloudlets
type Cloudlet struct {
	// Name of the cloudlet
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Internally generated unique ID of the cloudlet site
	Id uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	// Operator id of the cloudlet site
	OperId uint64 `protobuf:"varint,3,opt,name=oper_id,json=operId" json:"oper_id,omitempty"`
	// IP to use to connect to and control cloudlet site
	AccessIp []byte `protobuf:"bytes,4,opt,name=access_ip,json=accessIp,proto3" json:"access_ip,omitempty"`
}

func (m *Cloudlet) Reset()                    { *m = Cloudlet{} }
func (m *Cloudlet) String() string            { return proto1.CompactTextString(m) }
func (*Cloudlet) ProtoMessage()               {}
func (*Cloudlet) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Cloudlet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cloudlet) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Cloudlet) GetOperId() uint64 {
	if m != nil {
		return m.OperId
	}
	return 0
}

func (m *Cloudlet) GetAccessIp() []byte {
	if m != nil {
		return m.AccessIp
	}
	return nil
}

func init() {
	proto1.RegisterType((*Cloudlet)(nil), "proto.Cloudlet")
}

// message name Cloudlet

func init() { proto1.RegisterFile("cloudlet.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8d, 0x31, 0x0f, 0x82, 0x30,
	0x14, 0x84, 0x53, 0x44, 0x84, 0x17, 0xc3, 0xf0, 0x16, 0x1b, 0x75, 0x20, 0x4e, 0x4c, 0x32, 0xf8,
	0x13, 0x9c, 0x58, 0xf9, 0x03, 0xa4, 0xf2, 0x1a, 0xf2, 0x12, 0xec, 0x6b, 0x68, 0xfd, 0xff, 0xc6,
	0xe2, 0x74, 0x77, 0x5f, 0xee, 0x72, 0x50, 0x4f, 0x8b, 0x7c, 0x68, 0xb1, 0xf1, 0xee, 0x57, 0x89,
	0x82, 0xfb, 0x24, 0xe7, 0xeb, 0x2c, 0x32, 0x2f, 0xb6, 0x33, 0x9e, 0x3b, 0xe3, 0x9c, 0x44, 0x13,
	0x59, 0x5c, 0xd8, 0x4a, 0x37, 0x82, 0xf2, 0xf9, 0x9f, 0x21, 0x42, 0xee, 0xcc, 0xdb, 0x6a, 0xd5,
	0xa8, 0xb6, 0x1a, 0x92, 0xc7, 0x1a, 0x32, 0x26, 0x9d, 0x35, 0xaa, 0xcd, 0x87, 0x8c, 0x09, 0x4f,
	0x70, 0x10, 0x6f, 0xd7, 0x91, 0x49, 0xef, 0x12, 0x2c, 0x7e, 0xb1, 0x27, 0xbc, 0x40, 0x65, 0xa6,
	0xc9, 0x86, 0x30, 0xb2, 0xd7, 0x79, 0xa3, 0xda, 0xe3, 0x50, 0x6e, 0xa0, 0xf7, 0xaf, 0x22, 0x9d,
	0x3d, 0xbe, 0x01, 0x00, 0x00, 0xff, 0xff, 0x03, 0x60, 0xc4, 0x0e, 0xa3, 0x00, 0x00, 0x00,
}
