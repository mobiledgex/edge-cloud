// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operator.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Operator struct {
	// Company or Organization name of the operator
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Internally generated unique ID of the operator
	Id uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	// Operator code consists of two pars, a mobile network code (MNC)
	// and a mobile country code (MCC)
	Mnc uint32 `protobuf:"varint,3,opt,name=mnc" json:"mnc,omitempty"`
	Mcc uint32 `protobuf:"varint,4,opt,name=mcc" json:"mcc,omitempty"`
}

func (m *Operator) Reset()                    { *m = Operator{} }
func (m *Operator) String() string            { return proto1.CompactTextString(m) }
func (*Operator) ProtoMessage()               {}
func (*Operator) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *Operator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Operator) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Operator) GetMnc() uint32 {
	if m != nil {
		return m.Mnc
	}
	return 0
}

func (m *Operator) GetMcc() uint32 {
	if m != nil {
		return m.Mcc
	}
	return 0
}

func init() {
	proto1.RegisterType((*Operator)(nil), "proto.Operator")
}

// message name Operator

func init() { proto1.RegisterFile("operator.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x2f, 0x48, 0x2d,
	0x4a, 0x2c, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x32,
	0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x89, 0x05, 0x99, 0xfa, 0x89, 0x79, 0x79, 0xf9, 0x25,
	0x89, 0x25, 0x99, 0xf9, 0x79, 0xc5, 0x10, 0x45, 0x4a, 0x41, 0x5c, 0x1c, 0xfe, 0x50, 0x6d, 0x42,
	0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6,
	0x10, 0x1f, 0x17, 0x53, 0x66, 0x8a, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x4b, 0x10, 0x53, 0x66, 0x8a,
	0x90, 0x00, 0x17, 0x73, 0x6e, 0x5e, 0xb2, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x6f, 0x10, 0x88, 0x09,
	0x16, 0x49, 0x4e, 0x96, 0x60, 0x81, 0x8a, 0x24, 0x27, 0x27, 0xb1, 0x81, 0x8d, 0x36, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x49, 0x66, 0xdf, 0xce, 0x91, 0x00, 0x00, 0x00,
}
