// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app_inst.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Instance of an App on a cloudlet
type AppInst struct {
	// id
	AppId uint64 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// cloudlet info
	CloudletId uint64 `protobuf:"varint,2,opt,name=cloudlet_id,json=cloudletId" json:"cloudlet_id,omitempty"`
	// cache cloudlet location
	// location = 3,4,5
	// connect info
	Ip []byte `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	// port
	Port uint32 `protobuf:"varint,7,opt,name=port" json:"port,omitempty"`
}

func (m *AppInst) Reset()                    { *m = AppInst{} }
func (m *AppInst) String() string            { return proto1.CompactTextString(m) }
func (*AppInst) ProtoMessage()               {}
func (*AppInst) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AppInst) GetAppId() uint64 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *AppInst) GetCloudletId() uint64 {
	if m != nil {
		return m.CloudletId
	}
	return 0
}

func (m *AppInst) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *AppInst) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto1.RegisterType((*AppInst)(nil), "proto.AppInst")
}

// message name AppInst

func init() { proto1.RegisterFile("app_inst.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8d, 0xcf, 0xca, 0xc2, 0x30,
	0x10, 0xc4, 0x49, 0xe9, 0x1f, 0xd8, 0xef, 0xb3, 0x87, 0x05, 0xa1, 0x88, 0x60, 0xf1, 0x94, 0x93,
	0x3d, 0xf8, 0x04, 0x1e, 0x73, 0xcd, 0x0b, 0x48, 0x34, 0xa1, 0x04, 0x42, 0x76, 0x69, 0xd6, 0xf7,
	0x17, 0x23, 0x9e, 0x66, 0x98, 0xdf, 0x30, 0x03, 0xa3, 0x63, 0xbe, 0xc7, 0x5c, 0xe4, 0xc2, 0x1b,
	0x09, 0x61, 0x57, 0xe5, 0x70, 0x5c, 0x89, 0xd6, 0x14, 0x16, 0xc7, 0x71, 0x71, 0x39, 0x93, 0x38,
	0x89, 0x94, 0xcb, 0xb7, 0x74, 0x0e, 0x30, 0xdc, 0x98, 0x4d, 0x2e, 0x82, 0x7b, 0xe8, 0xeb, 0x82,
	0x9f, 0xd4, 0xac, 0x74, 0x6b, 0x3b, 0xc7, 0x6c, 0x3c, 0x9e, 0xe0, 0xef, 0x99, 0xe8, 0xe5, 0x53,
	0x90, 0x0f, 0x6b, 0x2a, 0x83, 0x5f, 0x64, 0x3c, 0x8e, 0xd0, 0x44, 0x9e, 0xfa, 0x59, 0xe9, 0x7f,
	0xdb, 0x44, 0x46, 0x84, 0x96, 0x69, 0x93, 0x69, 0x98, 0x95, 0xde, 0xd9, 0xea, 0x1f, 0x7d, 0x7d,
	0xbb, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x51, 0xc0, 0xc1, 0x67, 0xa4, 0x00, 0x00, 0x00,
}
