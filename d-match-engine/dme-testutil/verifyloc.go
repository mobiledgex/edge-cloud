package dmetest

import dme "github.com/mobiledgex/edge-cloud/d-match-engine/dme-proto"

type VerifyLocRR struct {
	Reg   dme.RegisterClientRequest
	Req   dme.VerifyLocationRequest
	Reply dme.VerifyLocationReply
	Error string
}

const Unknown = dme.VerifyLocationReply_LOC_UNKNOWN
const Verified = dme.VerifyLocationReply_LOC_VERIFIED
const Mismatch = dme.VerifyLocationReply_LOC_MISMATCH_SAME_COUNTRY
const ErrorOther = dme.VerifyLocationReply_LOC_ERROR_OTHER

// VerifyLocation API test data.
// Replies are based on AppInst data generated by GenerateAppInsts()
// in this package.
var VerifyLocData = []VerifyLocRR{
	VerifyLocRR{
		Reg: dme.RegisterClientRequest{
			DevName: "1000realities",
			AppName: "1000realities",
			AppVers: "1.1",
		},
		Req: dme.VerifyLocationRequest{
			CarrierName: "TDG",
			GPSLocation: &dme.Loc{Latitude: 50.73, Longitude: 7.1},
		},
		Reply: dme.VerifyLocationReply{
			GPS_Location_Status:      Verified,
			GPS_Location_Accuracy_KM: 2,
		},
	},
	VerifyLocRR{
		Reg: dme.RegisterClientRequest{
			DevName: "1000realities",
			AppName: "1000realities",
			AppVers: "1.1",
		},
		Req: dme.VerifyLocationRequest{
			CarrierName: "TDG",
			GPSLocation: &dme.Loc{Latitude: 52.65, Longitude: 12.341},
		},
		Reply: dme.VerifyLocationReply{
			GPS_Location_Status:      Verified,
			GPS_Location_Accuracy_KM: 100,
		},
	},
	VerifyLocRR{
		Reg: dme.RegisterClientRequest{
			DevName: "1000realities",
			AppName: "1000realities",
			AppVers: "1.1",
		},
		Req: dme.VerifyLocationRequest{
			CarrierName: "ATT",
			GPSLocation: &dme.Loc{Latitude: 52.65, Longitude: 10.341},
		},
		Reply: dme.VerifyLocationReply{},
		Error: "carrier not found for app",
	},
	VerifyLocRR{
		Reg: dme.RegisterClientRequest{
			DevName: "1000realities",
			AppName: "1000realities",
			AppVers: "1.1",
		},
		Req: dme.VerifyLocationRequest{
			CarrierName: "TDG",
			GPSLocation: &dme.Loc{Latitude: 50.75, Longitude: 7.9050},
		},
		Reply: dme.VerifyLocationReply{
			GPS_Location_Status:      Verified,
			GPS_Location_Accuracy_KM: 100,
		},
	},
	VerifyLocRR{
		Reg: dme.RegisterClientRequest{
			DevName: "Niantic Labs",
			AppName: "Pokemon-go",
			AppVers: "2.1",
		},
		Req: dme.VerifyLocationRequest{
			CarrierName: "TDG",
			GPSLocation: &dme.Loc{Latitude: 52.75, Longitude: 12.9050},
		},
		Reply: dme.VerifyLocationReply{
			GPS_Location_Status:      Verified,
			GPS_Location_Accuracy_KM: 100,
		},
	},
	VerifyLocRR{
		Reg: dme.RegisterClientRequest{
			DevName: "Niantic Labs",
			AppName: "HarryPotter-go",
			AppVers: "1.0",
		},
		Req: dme.VerifyLocationRequest{
			CarrierName: "TDG",
			GPSLocation: &dme.Loc{Latitude: 50.75, Longitude: 11.9050},
		},
		Reply: dme.VerifyLocationReply{
			GPS_Location_Status:      Mismatch,
			GPS_Location_Accuracy_KM: -1,
		},
	},
	VerifyLocRR{
		Reg: dme.RegisterClientRequest{
			DevName: "Ever.AI",
			AppName: "Ever",
			AppVers: "1.7",
		},
		Req: dme.VerifyLocationRequest{
			CarrierName: "TMUS",
			GPSLocation: &dme.Loc{Latitude: 47.75, Longitude: 122.9050},
		},
		Reply: dme.VerifyLocationReply{
			GPS_Location_Status:      Verified,
			GPS_Location_Accuracy_KM: 100,
		},
	},
}
