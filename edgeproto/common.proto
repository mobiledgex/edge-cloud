// common definitions

syntax = "proto3";
package edgeproto;

import "google/api/annotations.proto";

// Liveness indicates if an object was created statically via an external API call, or dynamically via an internal algorithm.
enum Liveness {
  // Unknown liveness
  LivenessUnknown = 0;
  // Object managed by external entity
  LivenessStatic = 1;
  // Object managed internally
  LivenessDynamic = 2;
}

// IpSupport indicates the type of public IP support provided by the Cloudlet. Static IP support indicates a set of static public IPs are available for use, and managed by the Controller. Dynamic indicates the Cloudlet uses a DHCP server to provide public IP addresses, and the controller has no control over which IPs are assigned.
enum IpSupport {
  // Unknown IP support
  IpSupportUnknown = 0;
  // Static IP addresses are provided to and managed by Controller
  IpSupportStatic = 1;
  // IP addresses are dynamically provided by an Operator's DHCP server
  IpSupportDynamic = 2;
}

enum IpAccess {
  // Unknown IP access
  IpAccessUnknown = 0;
  // Dedicated IP access
  IpAccessDedicated = 1;
  // Dedicated or shared (prefers dedicated) access
  IpAccessDedicatedOrShared = 2;
  // Shared IP access
  IpAccessShared = 3;
}

// TrackedState is used to track the state of an object on a remote node,
// i.e. track the state of a ClusterInst object on the CRM (Cloudlet).
enum TrackedState {
  // Unknown state
  TrackedStateUnknown = 0;
  // Not present (does not exist)
  NotPresent = 1;
  // Create requested
  CreateRequested = 2;
  // Creating
  Creating = 3;
  // Create error
  CreateError = 4;
  // Ready
  Ready = 5;
  // Update requested
  UpdateRequested = 6;
  // Updating
  Updating = 7;
  // Update error
  UpdateError = 8;
  // Delete requested
  DeleteRequested = 9;
  // Deleting
  Deleting = 10;
  // Delete error
  DeleteError = 11;
}

// CRMOverride can be applied to commands that issue requests to the CRM.
// It should only be used by administrators when bugs have caused the
// Controller and CRM to get out of sync. It allows commands from the
// Controller to ignore errors from the CRM, or ignore the CRM completely
// (messages will not be sent to CRM).
enum CRMOverride {
  // No override
  NoOverride = 0;
  // Ignore errors from CRM
  IgnoreCRMErrors = 1;
  // Ignore CRM completely (does not inform CRM of operation)
  IgnoreCRM = 2;
  // Ignore Transient State (only admin should use if CRM crashed)
  IgnoreTransientState = 3;
  // Ignore CRM and Transient State
  IgnoreCRMandTransientState = 4;
}
