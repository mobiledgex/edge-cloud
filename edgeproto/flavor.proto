// A Flavor defines the resources assigned to a Kubernetes cluster.
// Note that these are NOT openstack VM flavors, although some parts
// of it may translate to openstack flavors.

syntax = "proto3";
package edgeproto;

import "google/api/annotations.proto";
import "github.com/mobiledgex/edge-cloud/protogen/protogen.proto";
import "github.com/mobiledgex/edge-cloud/protoc-gen-cmd/protocmd/protocmd.proto";
import "result.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// FlavorKey uniquely identifies a Flavor.
message FlavorKey {
  string name = 1;
  option (protogen.generate_matches) = true;
  option (protogen.obj_key) = true;
  option (gogoproto.gostring) = true;
}

// A Flavor identifies the Cpu, Ram, and Disk resources required for either a node in a Cluster, or an application instance. For a node in a cluster, these are the physical resources provided by that node. For an application instance, this defines the resources (per node) that should be allocated to the instance from the Cluster.
message Flavor {
  // Fields are used for the Update API to specify which fields to apply
  repeated string fields = 1;
  // Unique key
  FlavorKey key = 2 [(gogoproto.nullable) = false];
  // RAM in MB
  uint64 ram = 3;
  // VCPU cores
  uint64 vcpus = 4;
  // Amount of disk in GB
  uint64 disk = 5;
  option (protogen.generate_matches) = true;
  option (protogen.generate_cud) = true;
  option (protogen.generate_cud_test) = true;
  option (protogen.generate_cache) = true;
}

service FlavorApi {
  // Create a Flavor
  rpc CreateFlavor(Flavor) returns (Result) {
    option (google.api.http) = {
      post: "/create/flavor"
      body: "*"
    };
  }
  // Delete a Flavor
  rpc DeleteFlavor(Flavor) returns (Result) {
      option (google.api.http) = {
      post: "/delete/flavor"
      body: "*"
    };
  }
  // Update a Flavor
  rpc UpdateFlavor(Flavor) returns (Result) {
      option (google.api.http) = {
      post: "/update/flavor"
      body: "*"
    };
  }
  // Show Flavors
  rpc ShowFlavor(Flavor) returns (stream Flavor) {
      option (google.api.http) = {
      post: "/show/flavor"
      body: "*"
    };
  }
}
