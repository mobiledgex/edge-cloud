// Copyright 2022 MobiledgeX, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// OperatorCode proto

syntax = "proto3";
package edgeproto;

import "google/api/annotations.proto";
import "github.com/mobiledgex/edge-cloud/protogen/protogen.proto";
import "result.proto";
import "gogoproto/gogo.proto";

option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_sizecache_all) = false;

// OperatorCode maps a carrier code to an Operator organization name
message OperatorCode {
  // MCC plus MNC code, or custom carrier code designation.
  string code = 1;
   // Operator Organization name 
  string organization = 2;
  option (protogen.generate_matches) = true;
  option (protogen.generate_cud) = true;
  option (protogen.generate_cud_test) = true;
  option (protogen.generate_cud_test_update) = false;
  option (protogen.generate_cache) = true;
  option (protogen.notify_cache) = true;
  option (protogen.custom_key_type) = "OperatorCodeKey";
  option (protogen.uses_org) = "val=Organization";
}

service OperatorCodeApi {
  // Create Operator Code. Create a code for an Operator.
  rpc CreateOperatorCode(OperatorCode) returns (Result) {
    option (google.api.http) = {
      post: "/create/operatorcode"
      body: "*"
    };
    option (protogen.mc2_api) = "ResourceCloudlets,ActionManage,Organization";
    option (protogen.mc2_api_requires_org) = "Organization";
  }
  // Delete Operator Code. Delete a code for an Operator.
  rpc DeleteOperatorCode(OperatorCode) returns (Result) {
    option (google.api.http) = {
      post: "/delete/operatorcode"
      body: "*"
    };
    option (protogen.mc2_api) = "ResourceCloudlets,ActionManage,Organization";
  }
  // Show Operator Code. Show Codes for an Operator.
  rpc ShowOperatorCode(OperatorCode) returns (stream OperatorCode) {
    option (google.api.http) = {
      post: "/show/operatorcode"
      body: "*"
    };
    option (protogen.mc2_api) = "ResourceCloudlets,ActionView,Organization";
  }
}
