{
  "swagger": "2.0",
  "info": {
    "title": "app.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/create/app": {
      "post": {
        "summary": "Create an application",
        "operationId": "CreateApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoApp"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/create/appinst": {
      "post": {
        "summary": "Show application instances state.",
        "operationId": "CreateAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/create/cloudlet": {
      "post": {
        "operationId": "CreateCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudlet"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/create/clusterinst": {
      "post": {
        "operationId": "CreateClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInst"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/create/developer": {
      "post": {
        "operationId": "CreateDeveloper",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDeveloper"
            }
          }
        ],
        "tags": [
          "DeveloperApi"
        ]
      }
    },
    "/create/flavor": {
      "post": {
        "operationId": "CreateFlavor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/create/operator": {
      "post": {
        "operationId": "CreateOperator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoOperator"
            }
          }
        ],
        "tags": [
          "OperatorApi"
        ]
      }
    },
    "/delete/app": {
      "post": {
        "summary": "Delete an application",
        "operationId": "DeleteApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoApp"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/delete/appinst": {
      "post": {
        "operationId": "DeleteAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/delete/cloudet": {
      "post": {
        "operationId": "DeleteCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudlet"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/delete/clusterinst": {
      "post": {
        "operationId": "DeleteClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInst"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/delete/developer": {
      "post": {
        "operationId": "DeleteDeveloper",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDeveloper"
            }
          }
        ],
        "tags": [
          "DeveloperApi"
        ]
      }
    },
    "/delete/flavor": {
      "post": {
        "operationId": "DeleteFlavor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/delete/operator": {
      "post": {
        "operationId": "DeleteOperator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoOperator"
            }
          }
        ],
        "tags": [
          "OperatorApi"
        ]
      }
    },
    "/show/app": {
      "post": {
        "summary": "Show applications. Any fields specified will be used to filter results.",
        "operationId": "ShowApp",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoApp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoApp"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/show/appinst": {
      "post": {
        "operationId": "ShowAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAppInst"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/show/cloudlet": {
      "post": {
        "operationId": "ShowCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoCloudlet"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudlet"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/show/clusterinst": {
      "post": {
        "operationId": "ShowClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoClusterInst"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInst"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/show/developer": {
      "post": {
        "operationId": "ShowDeveloper",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoDeveloper"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDeveloper"
            }
          }
        ],
        "tags": [
          "DeveloperApi"
        ]
      }
    },
    "/show/flavor": {
      "post": {
        "operationId": "ShowFlavor",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoFlavor"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/show/operator": {
      "post": {
        "operationId": "ShowOperator",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoOperator"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoOperator"
            }
          }
        ],
        "tags": [
          "OperatorApi"
        ]
      }
    },
    "/update/app": {
      "post": {
        "summary": "Update an application",
        "operationId": "UpdateApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoApp"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/update/appinst": {
      "post": {
        "operationId": "UpdateAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/update/cloudlet": {
      "post": {
        "operationId": "UpdateCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudlet"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/update/clusterinst": {
      "post": {
        "operationId": "UpdateClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInst"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/update/developer": {
      "post": {
        "operationId": "UpdateDeveloper",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDeveloper"
            }
          }
        ],
        "tags": [
          "DeveloperApi"
        ]
      }
    },
    "/update/flavor": {
      "post": {
        "operationId": "UpdateFlavor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/update/operator": {
      "post": {
        "operationId": "UpdateOperator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoOperator"
            }
          }
        ],
        "tags": [
          "OperatorApi"
        ]
      }
    }
  },
  "definitions": {
    "distributed_match_engineLoc": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "title": "latitude in WGS 84 coordinates"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "longitude in WGS 84 coordinates"
        },
        "horizontal_accuracy": {
          "type": "number",
          "format": "double",
          "title": "horizontal accuracy (radius in meters)"
        },
        "vertical_accuracy": {
          "type": "number",
          "format": "double",
          "title": "veritical accuracy (meters)"
        },
        "altitude": {
          "type": "number",
          "format": "double",
          "title": "On android only lat and long are guaranteed to be supplied\naltitude in meters"
        },
        "course": {
          "type": "number",
          "format": "double",
          "title": "course (IOS) / bearing (Android) (degrees east relative to true north)"
        },
        "speed": {
          "type": "number",
          "format": "double",
          "title": "speed (IOS) / velocity (Android) (meters/sec)"
        },
        "timestamp": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "timestamp"
        }
      }
    },
    "distributed_match_engineTimestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "This is a simple Timestamp message type\ngrpc-gateway converts google.protobuf.Timestamp into an RFC3339-type string\nwhich is a waste of a conversion, so we define our own"
    },
    "edgeprotoApp": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "Unique identifier key"
        },
        "image_path": {
          "type": "string",
          "title": "URI from which to download image"
        },
        "image_type": {
          "$ref": "#/definitions/edgeprotoImageType",
          "title": "Image type (see ImageType)"
        },
        "access_ports": {
          "type": "string",
          "description": "For Layer4 access, the ports the app listens on.\nThis is a comma separated list of protocol:port pairs, i.e.\ntcp:80,http:443,udp:10002.\nOnly tcp, udp, and http protocols are supported; tcp and udp are assumed\nto be L4, and http is assumed to be L7 access."
        },
        "default_flavor": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "title": "Default flavor for the App, may be overridden by the AppInst"
        },
        "auth_public_key": {
          "type": "string",
          "title": "public key used for authentication"
        },
        "command": {
          "type": "string",
          "title": "Command to start service"
        },
        "deployment": {
          "type": "string",
          "title": "Deployment target (kubernetes, docker, kvm, etc)"
        },
        "deployment_manifest": {
          "type": "string",
          "title": "Deployment manifest is the deployment specific manifest file/config"
        },
        "android_package_name": {
          "type": "string",
          "title": "Android package name used to match the App name from the Android package"
        },
        "configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoConfigFile"
          },
          "title": "Customization files passed through to implementing services"
        }
      },
      "description": "Apps are applications that may be instantiated on Cloudlets, providing a back-end service to an application client (using the mobiledgex SDK) running on a user device such as a cell phone, wearable, drone, etc. Applications belong to Developers, and must specify their image and accessibility. Applications are analagous to Pods in Kubernetes.\nAn application in itself is not tied to a Cloudlet, but provides a definition that can be used to instantiate it on a Cloudlet. AppInsts are applications instantiated on a particular Cloudlet."
    },
    "edgeprotoAppInst": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoAppInstKey",
          "title": "Unique identifier key"
        },
        "uri": {
          "type": "string",
          "description": "Base FQDN (not really URI) for the App. See Service FQDN for endpoint access."
        },
        "flavor": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "title": "Flavor defining resource requirements"
        },
        "created_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Created at time"
        }
      },
      "description": "AppInst is an instance of an App (application) on a Cloudlet. It is defined by an App plus a Cloudlet key. This separation of the definition of the App versus its instantiation is unique to Mobiledgex, and allows the Developer to provide the App defintion, while either the Developer may statically define the instances, or the Mobiledgex platform may dynamically create and destroy instances in response to demand.\nWhen an application is instantiated on a Cloudlet, the user may override the default Flavor of the application. This allows for an instance in one location to be provided more resources than an instance in other locations, in expectation of different demands in different locations.\nMany of the fields here are inherited from the App definition. Some are derived, like the mapped ports field, depending upon if the AppInst accessibility is via a shared or dedicated load balancer."
    },
    "edgeprotoAppInstKey": {
      "type": "object",
      "properties": {
        "app_key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "App key"
        },
        "cluster_inst_key": {
          "$ref": "#/definitions/edgeprotoClusterInstKey",
          "title": "Cluster instance on which this is instantiated"
        }
      },
      "description": "AppInstKey uniquely identifies an Application Instance (AppInst) or Application Instance state (AppInstInfo)."
    },
    "edgeprotoAppKey": {
      "type": "object",
      "properties": {
        "developer_key": {
          "$ref": "#/definitions/edgeprotoDeveloperKey",
          "title": "Developer key"
        },
        "name": {
          "type": "string",
          "title": "Application name"
        },
        "version": {
          "type": "string",
          "title": "Version of the app"
        }
      },
      "description": "AppKey uniquely identifies an Application."
    },
    "edgeprotoCloudlet": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Unique identifier key"
        },
        "access_credentials": {
          "type": "string",
          "title": "Placeholder for cloudlet access credentials, i.e. openstack keys, passwords, etc"
        },
        "location": {
          "$ref": "#/definitions/distributed_match_engineLoc",
          "title": "Location of the Cloudlet site"
        },
        "ip_support": {
          "$ref": "#/definitions/edgeprotoIpSupport",
          "title": "Type of IP support provided by Cloudlet (see IpSupport)"
        },
        "static_ips": {
          "type": "string",
          "title": "List of static IPs for static IP support"
        },
        "num_dynamic_ips": {
          "type": "integer",
          "format": "int32",
          "title": "Number of dynamic IPs available for dynamic IP support"
        }
      },
      "description": "A Cloudlet is a set of compute resources at a particular location, typically an Operator's regional data center, or a cell tower. The Cloudlet is managed by a Cloudlet Resource Manager, which communicates with the Mobiledgex Controller and allows AppInsts (application instances) to be instantiated on the Cloudlet.\nA Cloudlet will be created by either a Mobiledgex admin or an Operator that provides the Cloudlet."
    },
    "edgeprotoCloudletKey": {
      "type": "object",
      "properties": {
        "operator_key": {
          "$ref": "#/definitions/edgeprotoOperatorKey",
          "title": "Operator of the cloudlet site"
        },
        "name": {
          "type": "string",
          "title": "Name of the cloudlet"
        }
      },
      "description": "CloudletKey uniquely identifies a Cloudlet."
    },
    "edgeprotoClusterInst": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoClusterInstKey",
          "title": "Unique key"
        },
        "flavor": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "title": "Node flavor"
        },
        "ip_access": {
          "$ref": "#/definitions/edgeprotoIpAccess",
          "title": "IP access type"
        },
        "allocated_ip": {
          "type": "string",
          "title": "allocated IP for dedicated access"
        },
        "deployment": {
          "type": "string",
          "title": "Deployment target (kubernetes, docker, kvm, etc)"
        },
        "num_masters": {
          "type": "integer",
          "format": "int64",
          "title": "number of masters"
        },
        "num_nodes": {
          "type": "integer",
          "format": "int64",
          "title": "number of nodes"
        }
      },
      "description": "ClusterInst is an instance of a Cluster on a Cloudlet. It is defined by a Cluster plus a Cloudlet key. This separation of the definition of the Cluster versus its instance is unique to Mobiledgex, and allows the Developer to provide the Cluster definition, while either the Developer may statically define the instances, or the Mobiledgex platform may dynamically create and destroy instances in response to demand.\nWhen a Cluster is instantiated on a Cloudlet, the user may override the default ClusterFlavor of the Cluster. This allows for an instance in one location to be provided more resources than an instance in other locations, in expectation of different demands in different locations."
    },
    "edgeprotoClusterInstKey": {
      "type": "object",
      "properties": {
        "cluster_key": {
          "$ref": "#/definitions/edgeprotoClusterKey",
          "title": "Cluster key"
        },
        "cloudlet_key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet on which the Cluster is instantiated"
        },
        "developer": {
          "type": "string",
          "title": "Developer organization this cluster belongs to"
        }
      },
      "description": "ClusterInstKey uniquely identifies a Cluster Instance (ClusterInst) or Cluster Instance state (ClusterInstInfo)."
    },
    "edgeprotoClusterKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Cluster name"
        }
      },
      "description": "ClusterKey uniquely identifies a Cluster."
    },
    "edgeprotoConfigFile": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "kind (type) of config, i.e. k8s-manifest, helm-values, deploygen-config"
        },
        "config": {
          "type": "string",
          "title": "config file contents or URI reference"
        }
      }
    },
    "edgeprotoDeveloper": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoDeveloperKey",
          "title": "Unique identifier key"
        }
      },
      "description": "A Developer defines a Mobiledgex customer that can create and manage applications, clusters, instances, etc. Applications and other objects created by one Developer cannot be seen or managed by other Developers. Billing will likely be done on a per-developer basis.\nCreating a developer identity is likely the first step of (self-)registering a new customer.\nTODO: user management, auth, etc is not implemented yet."
    },
    "edgeprotoDeveloperKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Organization or Company Name"
        }
      },
      "title": "DeveloperKey uniquely identifies a Developer (Mobiledgex customer)"
    },
    "edgeprotoFlavor": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "title": "Unique key"
        },
        "ram": {
          "type": "string",
          "format": "uint64",
          "title": "RAM in MB"
        },
        "vcpus": {
          "type": "string",
          "format": "uint64",
          "title": "VCPU cores"
        },
        "disk": {
          "type": "string",
          "format": "uint64",
          "title": "Amount of disk in GB"
        }
      },
      "description": "A Flavor identifies the Cpu, Ram, and Disk resources required for either a node in a Cluster, or an application instance. For a node in a cluster, these are the physical resources provided by that node. For an application instance, this defines the resources (per node) that should be allocated to the instance from the Cluster."
    },
    "edgeprotoFlavorKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "description": "FlavorKey uniquely identifies a Flavor."
    },
    "edgeprotoImageType": {
      "type": "string",
      "enum": [
        "IMAGE_TYPE_UNKNOWN",
        "IMAGE_TYPE_DOCKER",
        "IMAGE_TYPE_QCOW"
      ],
      "default": "IMAGE_TYPE_UNKNOWN",
      "description": "ImageType specifies the image type of the application.\n\n - IMAGE_TYPE_UNKNOWN: Unknown image type\n - IMAGE_TYPE_DOCKER: Docker container image type compatible with Kubernetes\n - IMAGE_TYPE_QCOW: QCOW2 virtual machine image type"
    },
    "edgeprotoIpAccess": {
      "type": "string",
      "enum": [
        "IP_ACCESS_UNKNOWN",
        "IP_ACCESS_DEDICATED",
        "IP_ACCESS_DEDICATED_OR_SHARED",
        "IP_ACCESS_SHARED"
      ],
      "default": "IP_ACCESS_UNKNOWN",
      "title": "- IP_ACCESS_UNKNOWN: Unknown IP access\n - IP_ACCESS_DEDICATED: Dedicated IP access\n - IP_ACCESS_DEDICATED_OR_SHARED: Dedicated or shared (prefers dedicated) access\n - IP_ACCESS_SHARED: Shared IP access"
    },
    "edgeprotoIpSupport": {
      "type": "string",
      "enum": [
        "IP_SUPPORT_UNKNOWN",
        "IP_SUPPORT_STATIC",
        "IP_SUPPORT_DYNAMIC"
      ],
      "default": "IP_SUPPORT_UNKNOWN",
      "description": "IpSupport indicates the type of public IP support provided by the Cloudlet. Static IP support indicates a set of static public IPs are available for use, and managed by the Controller. Dynamic indicates the Cloudlet uses a DHCP server to provide public IP addresses, and the controller has no control over which IPs are assigned.\n\n - IP_SUPPORT_UNKNOWN: Unknown IP support\n - IP_SUPPORT_STATIC: Static IP addresses are provided to and managed by Controller\n - IP_SUPPORT_DYNAMIC: IP addresses are dynamically provided by an Operator's DHCP server"
    },
    "edgeprotoOperator": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoOperatorKey",
          "title": "Unique identifier key"
        }
      },
      "description": "An Operator defines a telecommunications provider such as AT\u0026T, T-Mobile, etc. The operators in turn provide Mobiledgex with compute resource Cloudlets that serve as the basis for location-based services."
    },
    "edgeprotoOperatorKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Company or Organization name of the operator"
        }
      },
      "title": "OperatorKey uniquely identifies an Operator"
    },
    "edgeprotoResult": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "Message, may be success or failure message"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Error code, 0 indicates success, non-zero indicates failure (not implemented)"
        }
      },
      "description": "Result is a generic object for returning the result of an API call. In general, result is not used. The error value returned by the GRPC API call is used instead."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "x-stream-definitions": {
    "edgeprotoApp": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoApp"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoApp"
    },
    "edgeprotoAppInst": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAppInst"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAppInst"
    },
    "edgeprotoCloudlet": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoCloudlet"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoCloudlet"
    },
    "edgeprotoClusterInst": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoClusterInst"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoClusterInst"
    },
    "edgeprotoDeveloper": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoDeveloper"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoDeveloper"
    },
    "edgeprotoFlavor": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoFlavor"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoFlavor"
    },
    "edgeprotoOperator": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoOperator"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoOperator"
    },
    "edgeprotoResult": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoResult"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoResult"
    }
  }
}
