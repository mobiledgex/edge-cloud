// Developer proto

syntax = "proto3";
package edgeproto;

import "google/api/annotations.proto";
import "github.com/mobiledgex/edge-cloud/protogen/protogen.proto";
import "result.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message DeveloperKey {
  //bytes fields = 1;
  // Organization or Company Name
  string name = 2;
  option (protogen.generate_matches) = true;
  option (protogen.obj_key) = true;
  option (gogoproto.gostring) = true;
}

message Developer {
  bytes fields = 1;
  // Unique identifier key
  DeveloperKey key = 2 [(gogoproto.nullable) = false];
  // auth scheme plus generic hash instead of user/pass
  // Login name
  string username = 3;
  // encrypted password
  string passhash = 4;
  // Address
  string address = 5;
  // Contact email
  string email = 6 [(protogen.test_update) = true];
  // login cert?
  option (protogen.generate_matches) = true;
  option (protogen.generate_cud) = true;
}

service DeveloperApi {
  rpc CreateDeveloper(Developer) returns (Result) {
    option (google.api.http) = {
      post: "/create/developer"
      body: "*"
    };
  }
  rpc DeleteDeveloper(Developer) returns (Result) {
    option (google.api.http) = {
      post: "/delete/developer"
      body: "*"
    };
  }
  rpc UpdateDeveloper(Developer) returns (Result) {
    option (google.api.http) = {
      post: "/update/developer"
      body: "*"
    };
  }
  rpc ShowDeveloper(Developer) returns (stream Developer) {
    option (google.api.http) = {
      post: "/show/developer"
      body: "*"
    };
  }
}
