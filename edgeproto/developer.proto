// Developer proto

syntax = "proto3";
package edgeproto;

import "google/api/annotations.proto";
import "github.com/mobiledgex/edge-cloud/protogen/protogen.proto";
import "result.proto";
import "gogoproto/gogo.proto";

// DeveloperKey uniquely identifies a Developer 
message DeveloperKey {
  // Organization or Company Name that a Developer is part of
  string name = 2;
  option (protogen.generate_matches) = true;
  option (protogen.obj_key) = true;
  option (gogoproto.gostring) = true;
}

// Developer is defined as the consumer of edge computing resources to manage and deploy Apps
message Developer {
  // Fields are used for the Update API to specify which fields to apply
  repeated string fields = 1;
  // Unique identifier key
  DeveloperKey key = 2 [(gogoproto.nullable) = false];

  option (protogen.generate_matches) = true;
  option (protogen.generate_cud) = true;
  option (protogen.generate_cud_test) = true;
  option (protogen.generate_cache) = true;
  option (protogen.alias) = "name=Key.Name";
}

service DeveloperApi {
  // Create a Developer
  rpc CreateDeveloper(Developer) returns (Result) {
    option (google.api.http) = {
      post: "/create/developer"
      body: "*"
    };
  }
  // Delete a Developer
  rpc DeleteDeveloper(Developer) returns (Result) {
    option (google.api.http) = {
      post: "/delete/developer"
      body: "*"
    };
  }
  // Update a Developer
  rpc UpdateDeveloper(Developer) returns (Result) {
    option (google.api.http) = {
      post: "/update/developer"
      body: "*"
    };
  }
  // Show Developers
  rpc ShowDeveloper(Developer) returns (stream Developer) {
    option (google.api.http) = {
      post: "/show/developer"
      body: "*"
    };
  }
}
