// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: version.proto

package edgeproto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"
import _ "github.com/mobiledgex/edge-cloud/protoc-gen-cmd/protocmd"

import "errors"
import "strconv"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Below enum lists hashes as well as corresponding versions
type VersionHash int32

const (
	VersionHash_HASH_d41d8cd98f00b204e9800998ecf8427e VersionHash = 0
	VersionHash_HASH_d0e4bef9e3b9df9706bdf22ca21b7f10 VersionHash = 1
	VersionHash_HASH_5fa51eabc5ed920af77764db93babdf8 VersionHash = 2
	VersionHash_HASH_b35326df0fcd1550b7c0cf6460c4bca2 VersionHash = 3
)

var VersionHash_name = map[int32]string{
	0: "HASH_d41d8cd98f00b204e9800998ecf8427e",
	1: "HASH_d0e4bef9e3b9df9706bdf22ca21b7f10",
	2: "HASH_5fa51eabc5ed920af77764db93babdf8",
	3: "HASH_b35326df0fcd1550b7c0cf6460c4bca2",
}
var VersionHash_value = map[string]int32{
	"HASH_d41d8cd98f00b204e9800998ecf8427e": 0,
	"HASH_d0e4bef9e3b9df9706bdf22ca21b7f10": 1,
	"HASH_5fa51eabc5ed920af77764db93babdf8": 2,
	"HASH_b35326df0fcd1550b7c0cf6460c4bca2": 3,
}

func (x VersionHash) String() string {
	return proto.EnumName(VersionHash_name, int32(x))
}
func (VersionHash) EnumDescriptor() ([]byte, []int) { return fileDescriptorVersion, []int{0} }

func init() {
	proto.RegisterEnum("edgeproto.VersionHash", VersionHash_name, VersionHash_value)
}

var VersionHashStrings = []string{
	"HASH_d41d8cd98f00b204e9800998ecf8427e",
	"HASH_d0e4bef9e3b9df9706bdf22ca21b7f10",
	"HASH_5fa51eabc5ed920af77764db93babdf8",
	"HASH_b35326df0fcd1550b7c0cf6460c4bca2",
}

const (
	VersionHashHASHD41D8Cd98F00B204E9800998Ecf8427E  uint64 = 1 << 0
	VersionHashHASHD0E4Bef9E3B9Df9706Bdf22Ca21B7F10  uint64 = 1 << 1
	VersionHashHASH_5Fa51Eabc5Ed920Af77764Db93Babdf8 uint64 = 1 << 2
	VersionHashHASHB35326Df0Fcd1550B7C0Cf6460C4Bca2  uint64 = 1 << 3
)

func (e *VersionHash) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var str string
	err := unmarshal(&str)
	if err != nil {
		return err
	}
	val, ok := VersionHash_value[str]
	if !ok {
		// may be enum value instead of string
		ival, err := strconv.Atoi(str)
		val = int32(ival)
		if err == nil {
			_, ok = VersionHash_name[val]
		}
	}
	if !ok {
		return errors.New(fmt.Sprintf("No enum value for %s", str))
	}
	*e = VersionHash(val)
	return nil
}

func (e VersionHash) MarshalYAML() (interface{}, error) {
	return e.String(), nil
}

// Keys being hashed:
// AppInstKey
// AppKey
// CloudletKey
// ClusterInstKey
// ClusterKey
// ControllerKey
// DeveloperKey
// FlavorKey
// NodeKey
// OperatorKey
var versionHashString = "b35326df0fcd1550b7c0cf6460c4bca2"

func GetDataModelVersion() string {
	return versionHashString
}

var VersionHash_UpgradeFuncs = map[int32]VersionUpgradeFunc{
	0: nil,
	1: UpgradeMexSaltExample,
	2: UpgradeFuncExample,
	3: UpgradeFuncReplaceEverything,
}
var VersionHash_UpgradeFuncNames = map[int32]string{
	0: "",
	1: "UpgradeMexSaltExample",
	2: "UpgradeFuncExample",
	3: "UpgradeFuncReplaceEverything",
}

func init() { proto.RegisterFile("version.proto", fileDescriptorVersion) }

var fileDescriptorVersion = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xcf, 0x8a, 0x13, 0x41,
	0x10, 0xc6, 0x77, 0x56, 0x11, 0x8c, 0x0a, 0xc3, 0x80, 0x32, 0x0e, 0x4b, 0xf0, 0xe2, 0x41, 0x21,
	0x3b, 0x3d, 0x3d, 0x7f, 0xfb, 0xb8, 0xe2, 0x6a, 0x40, 0xbc, 0xb8, 0xe8, 0x55, 0xba, 0xaa, 0xab,
	0x3b, 0x03, 0x93, 0xee, 0x21, 0x99, 0x2c, 0xf1, 0xea, 0x31, 0xcf, 0xe0, 0x03, 0xed, 0xd1, 0x47,
	0xd0, 0x3c, 0x83, 0x03, 0x1e, 0x65, 0x93, 0x89, 0xe4, 0xb8, 0x97, 0xe2, 0x2b, 0xf8, 0x7e, 0x3f,
	0x8a, 0x1a, 0x3d, 0xb9, 0xa6, 0xc5, 0xb2, 0x76, 0xf6, 0xbc, 0x5d, 0xb8, 0xce, 0x05, 0x0f, 0x49,
	0x19, 0xda, 0xc5, 0xe8, 0xcc, 0x38, 0x67, 0x1a, 0x8a, 0x65, 0x5b, 0xc7, 0xd2, 0x5a, 0xd7, 0xc9,
	0xae, 0x76, 0x76, 0xb9, 0x2f, 0x46, 0x95, 0xa9, 0xbb, 0xd9, 0x0a, 0xce, 0xd1, 0xcd, 0xe3, 0xb9,
	0x83, 0xba, 0xb9, 0x05, 0xd7, 0xf1, 0xed, 0x9c, 0x60, 0xe3, 0x56, 0x2a, 0xde, 0xf5, 0x0c, 0xd9,
	0xff, 0x61, 0x20, 0xdf, 0xdf, 0x8d, 0xc4, 0x89, 0x21, 0x3b, 0xc1, 0xf9, 0x61, 0x3d, 0x0a, 0x7b,
	0xd1, 0xeb, 0x1f, 0xa7, 0xa3, 0x47, 0x5f, 0xf6, 0xd7, 0x4f, 0xe5, 0x72, 0x16, 0xbc, 0x1a, 0xbd,
	0x9c, 0x5e, 0x5c, 0x4d, 0xbf, 0xaa, 0x2c, 0x51, 0x15, 0x2a, 0x51, 0x69, 0xc6, 0x80, 0xb3, 0x8c,
	0x44, 0xc5, 0x98, 0x10, 0x15, 0xa1, 0xae, 0x32, 0x5e, 0x92, 0x7f, 0x12, 0xbc, 0x3d, 0x54, 0x19,
	0x65, 0x40, 0x5a, 0x50, 0x0a, 0x42, 0x69, 0x51, 0xb2, 0x02, 0x94, 0xe6, 0x1c, 0x25, 0x4f, 0xa0,
	0xd4, 0x09, 0xf3, 0xbd, 0xe8, 0xf9, 0xa6, 0x0f, 0x9f, 0x7e, 0x6e, 0xcd, 0x42, 0x2a, 0xfa, 0x48,
	0xeb, 0x2b, 0xd9, 0x74, 0x97, 0x6b, 0x39, 0x6f, 0x1b, 0x0a, 0x2e, 0x06, 0x4b, 0xae, 0x65, 0x9e,
	0x90, 0x04, 0xcc, 0x49, 0x09, 0xce, 0xa4, 0x2e, 0xcb, 0xb2, 0xc8, 0x14, 0x88, 0x14, 0x24, 0x28,
	0x5d, 0xf9, 0xa7, 0xd1, 0xb3, 0x4d, 0x1f, 0x06, 0x83, 0xe5, 0xdd, 0xca, 0xe2, 0x41, 0xf1, 0x61,
	0x50, 0x40, 0x9a, 0xa7, 0xbc, 0x50, 0x9a, 0x69, 0x54, 0x49, 0x9e, 0x33, 0x28, 0x91, 0xa1, 0x2e,
	0xb2, 0x82, 0x61, 0x06, 0x28, 0xb9, 0x7f, 0x2f, 0x7a, 0xb1, 0xe9, 0xc3, 0xb3, 0x23, 0xc5, 0x27,
	0x6a, 0x1b, 0x89, 0x74, 0x79, 0x4d, 0x8b, 0x6f, 0xdd, 0xac, 0xb6, 0x26, 0x7a, 0xfc, 0xf7, 0x4f,
	0xe8, 0x7d, 0xef, 0xc3, 0xfb, 0x12, 0x50, 0xbd, 0xf1, 0x6f, 0x7e, 0x8f, 0x4f, 0x6e, 0xb6, 0x63,
	0xef, 0xe7, 0x76, 0xec, 0xfd, 0xda, 0x8e, 0x3d, 0x78, 0xb0, 0xfb, 0x5b, 0xfa, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xd3, 0x05, 0xfa, 0x8d, 0xf4, 0x01, 0x00, 0x00,
}
