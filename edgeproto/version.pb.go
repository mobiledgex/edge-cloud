// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: version.proto

package edgeproto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/mobiledgex/edge-cloud/protogen"

import "github.com/mobiledgex/edge-cloud/util"
import "errors"
import "strconv"
import "encoding/json"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Below enum lists hashes as well as corresponding versions
type VersionHash int32

const (
	VersionHash_HASH_d41d8cd98f00b204e9800998ecf8427e VersionHash = 0
	VersionHash_HASH_b35326df0fcd1550b7c0cf6460c4bca2 VersionHash = 1
	VersionHash_HASH_52e6980599cd59bbbd0de8d5f4d53d4b VersionHash = 2
	VersionHash_HASH_00bdcfa956ca4ee42be87abcd8fcaf1c VersionHash = 3
	VersionHash_HASH_0d2d9c0b07ad989e96fb3b3a44924316 VersionHash = 4
	VersionHash_HASH_2b79f0b6e402045ee5f68d697b9386ae VersionHash = 5
	VersionHash_HASH_536a69a5e27bf7cf5152d85eba21aa74 VersionHash = 6
	VersionHash_HASH_caedcdeef911bc00d5dceacf8e55890a VersionHash = 7
	VersionHash_HASH_60febe402fd8f1a1ded0762dbc72a5a8 VersionHash = 8
	VersionHash_HASH_d4ca5418a77d22d968ce7a2afc549dfe VersionHash = 9
	VersionHash_HASH_7848d42e3a2eaf36e53bbd3af581b13a VersionHash = 10
	VersionHash_HASH_f31b7a9d7e06f72107e0ab13c708704e VersionHash = 11
	VersionHash_HASH_03fad51f0343d41f617329151f474d2b VersionHash = 12
)

var VersionHash_name = map[int32]string{
	0:  "HASH_d41d8cd98f00b204e9800998ecf8427e",
	1:  "HASH_b35326df0fcd1550b7c0cf6460c4bca2",
	2:  "HASH_52e6980599cd59bbbd0de8d5f4d53d4b",
	3:  "HASH_00bdcfa956ca4ee42be87abcd8fcaf1c",
	4:  "HASH_0d2d9c0b07ad989e96fb3b3a44924316",
	5:  "HASH_2b79f0b6e402045ee5f68d697b9386ae",
	6:  "HASH_536a69a5e27bf7cf5152d85eba21aa74",
	7:  "HASH_caedcdeef911bc00d5dceacf8e55890a",
	8:  "HASH_60febe402fd8f1a1ded0762dbc72a5a8",
	9:  "HASH_d4ca5418a77d22d968ce7a2afc549dfe",
	10: "HASH_7848d42e3a2eaf36e53bbd3af581b13a",
	11: "HASH_f31b7a9d7e06f72107e0ab13c708704e",
	12: "HASH_03fad51f0343d41f617329151f474d2b",
}
var VersionHash_value = map[string]int32{
	"HASH_d41d8cd98f00b204e9800998ecf8427e": 0,
	"HASH_b35326df0fcd1550b7c0cf6460c4bca2": 1,
	"HASH_52e6980599cd59bbbd0de8d5f4d53d4b": 2,
	"HASH_00bdcfa956ca4ee42be87abcd8fcaf1c": 3,
	"HASH_0d2d9c0b07ad989e96fb3b3a44924316": 4,
	"HASH_2b79f0b6e402045ee5f68d697b9386ae": 5,
	"HASH_536a69a5e27bf7cf5152d85eba21aa74": 6,
	"HASH_caedcdeef911bc00d5dceacf8e55890a": 7,
	"HASH_60febe402fd8f1a1ded0762dbc72a5a8": 8,
	"HASH_d4ca5418a77d22d968ce7a2afc549dfe": 9,
	"HASH_7848d42e3a2eaf36e53bbd3af581b13a": 10,
	"HASH_f31b7a9d7e06f72107e0ab13c708704e": 11,
	"HASH_03fad51f0343d41f617329151f474d2b": 12,
}

func (x VersionHash) String() string {
	return proto.EnumName(VersionHash_name, int32(x))
}
func (VersionHash) EnumDescriptor() ([]byte, []int) { return fileDescriptorVersion, []int{0} }

func init() {
	proto.RegisterEnum("edgeproto.VersionHash", VersionHash_name, VersionHash_value)
}

var VersionHashStrings = []string{
	"HASH_d41d8cd98f00b204e9800998ecf8427e",
	"HASH_b35326df0fcd1550b7c0cf6460c4bca2",
	"HASH_52e6980599cd59bbbd0de8d5f4d53d4b",
	"HASH_00bdcfa956ca4ee42be87abcd8fcaf1c",
	"HASH_0d2d9c0b07ad989e96fb3b3a44924316",
	"HASH_2b79f0b6e402045ee5f68d697b9386ae",
	"HASH_536a69a5e27bf7cf5152d85eba21aa74",
	"HASH_caedcdeef911bc00d5dceacf8e55890a",
	"HASH_60febe402fd8f1a1ded0762dbc72a5a8",
	"HASH_d4ca5418a77d22d968ce7a2afc549dfe",
	"HASH_7848d42e3a2eaf36e53bbd3af581b13a",
	"HASH_f31b7a9d7e06f72107e0ab13c708704e",
	"HASH_03fad51f0343d41f617329151f474d2b",
}

const (
	VersionHashHASHD41D8Cd98F00B204E9800998Ecf8427E  uint64 = 1 << 0
	VersionHashHASHB35326Df0Fcd1550B7C0Cf6460C4Bca2  uint64 = 1 << 1
	VersionHashHASH_52E6980599Cd59Bbbd0De8D5F4D53D4B uint64 = 1 << 2
	VersionHashHASH_00Bdcfa956Ca4Ee42Be87Abcd8Fcaf1C uint64 = 1 << 3
	VersionHashHASH_0D2D9C0B07Ad989E96Fb3B3A44924316 uint64 = 1 << 4
	VersionHashHASH_2B79F0B6E402045Ee5F68D697B9386Ae uint64 = 1 << 5
	VersionHashHASH_536A69A5E27Bf7Cf5152D85Eba21Aa74 uint64 = 1 << 6
	VersionHashHASHCaedcdeef911Bc00D5Dceacf8E55890A  uint64 = 1 << 7
	VersionHashHASH_60Febe402Fd8F1A1Ded0762Dbc72A5A8 uint64 = 1 << 8
	VersionHashHASHD4Ca5418A77D22D968Ce7A2Afc549Dfe  uint64 = 1 << 9
	VersionHashHASH_7848D42E3A2Eaf36E53Bbd3Af581B13A uint64 = 1 << 10
	VersionHashHASHF31B7A9D7E06F72107E0Ab13C708704E  uint64 = 1 << 11
	VersionHashHASH_03Fad51F0343D41F617329151F474D2B uint64 = 1 << 12
)

var VersionHash_CamelName = map[int32]string{
	// HASH_d41d8cd98f00b204e9800998ecf8427e -> HashD41D8Cd98F00B204E9800998Ecf8427E
	0: "HashD41D8Cd98F00B204E9800998Ecf8427E",
	// HASH_b35326df0fcd1550b7c0cf6460c4bca2 -> HashB35326Df0Fcd1550B7C0Cf6460C4Bca2
	1: "HashB35326Df0Fcd1550B7C0Cf6460C4Bca2",
	// HASH_52e6980599cd59bbbd0de8d5f4d53d4b -> Hash52E6980599Cd59Bbbd0De8D5F4D53D4B
	2: "Hash52E6980599Cd59Bbbd0De8D5F4D53D4B",
	// HASH_00bdcfa956ca4ee42be87abcd8fcaf1c -> Hash00Bdcfa956Ca4Ee42Be87Abcd8Fcaf1C
	3: "Hash00Bdcfa956Ca4Ee42Be87Abcd8Fcaf1C",
	// HASH_0d2d9c0b07ad989e96fb3b3a44924316 -> Hash0D2D9C0B07Ad989E96Fb3B3A44924316
	4: "Hash0D2D9C0B07Ad989E96Fb3B3A44924316",
	// HASH_2b79f0b6e402045ee5f68d697b9386ae -> Hash2B79F0B6E402045Ee5F68D697B9386Ae
	5: "Hash2B79F0B6E402045Ee5F68D697B9386Ae",
	// HASH_536a69a5e27bf7cf5152d85eba21aa74 -> Hash536A69A5E27Bf7Cf5152D85Eba21Aa74
	6: "Hash536A69A5E27Bf7Cf5152D85Eba21Aa74",
	// HASH_caedcdeef911bc00d5dceacf8e55890a -> HashCaedcdeef911Bc00D5Dceacf8E55890A
	7: "HashCaedcdeef911Bc00D5Dceacf8E55890A",
	// HASH_60febe402fd8f1a1ded0762dbc72a5a8 -> Hash60Febe402Fd8F1A1Ded0762Dbc72A5A8
	8: "Hash60Febe402Fd8F1A1Ded0762Dbc72A5A8",
	// HASH_d4ca5418a77d22d968ce7a2afc549dfe -> HashD4Ca5418A77D22D968Ce7A2Afc549Dfe
	9: "HashD4Ca5418A77D22D968Ce7A2Afc549Dfe",
	// HASH_7848d42e3a2eaf36e53bbd3af581b13a -> Hash7848D42E3A2Eaf36E53Bbd3Af581B13A
	10: "Hash7848D42E3A2Eaf36E53Bbd3Af581B13A",
	// HASH_f31b7a9d7e06f72107e0ab13c708704e -> HashF31B7A9D7E06F72107E0Ab13C708704E
	11: "HashF31B7A9D7E06F72107E0Ab13C708704E",
	// HASH_03fad51f0343d41f617329151f474d2b -> Hash03Fad51F0343D41F617329151F474D2B
	12: "Hash03Fad51F0343D41F617329151F474D2B",
}
var VersionHash_CamelValue = map[string]int32{
	"HashD41D8Cd98F00B204E9800998Ecf8427E": 0,
	"HashB35326Df0Fcd1550B7C0Cf6460C4Bca2": 1,
	"Hash52E6980599Cd59Bbbd0De8D5F4D53D4B": 2,
	"Hash00Bdcfa956Ca4Ee42Be87Abcd8Fcaf1C": 3,
	"Hash0D2D9C0B07Ad989E96Fb3B3A44924316": 4,
	"Hash2B79F0B6E402045Ee5F68D697B9386Ae": 5,
	"Hash536A69A5E27Bf7Cf5152D85Eba21Aa74": 6,
	"HashCaedcdeef911Bc00D5Dceacf8E55890A": 7,
	"Hash60Febe402Fd8F1A1Ded0762Dbc72A5A8": 8,
	"HashD4Ca5418A77D22D968Ce7A2Afc549Dfe": 9,
	"Hash7848D42E3A2Eaf36E53Bbd3Af581B13A": 10,
	"HashF31B7A9D7E06F72107E0Ab13C708704E": 11,
	"Hash03Fad51F0343D41F617329151F474D2B": 12,
}

func (e *VersionHash) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var str string
	err := unmarshal(&str)
	if err != nil {
		return err
	}
	val, ok := VersionHash_CamelValue[util.CamelCase(str)]
	if !ok {
		// may be enum value instead of string
		ival, err := strconv.Atoi(str)
		val = int32(ival)
		if err == nil {
			_, ok = VersionHash_CamelName[val]
		}
	}
	if !ok {
		return errors.New(fmt.Sprintf("No enum value for %s", str))
	}
	*e = VersionHash(val)
	return nil
}

func (e VersionHash) MarshalYAML() (interface{}, error) {
	return proto.EnumName(VersionHash_CamelName, int32(e)), nil
}

// custom JSON encoding/decoding
func (e *VersionHash) UnmarshalJSON(b []byte) error {
	var str string
	err := json.Unmarshal(b, &str)
	if err == nil {
		val, ok := VersionHash_CamelValue[util.CamelCase(str)]
		if !ok {
			// may be int value instead of enum name
			ival, err := strconv.Atoi(str)
			val = int32(ival)
			if err == nil {
				_, ok = VersionHash_CamelName[val]
			}
		}
		if !ok {
			return errors.New(fmt.Sprintf("No enum value for %s", str))
		}
		*e = VersionHash(val)
		return nil
	}
	var val int32
	err = json.Unmarshal(b, &val)
	if err == nil {
		*e = VersionHash(val)
		return nil
	}
	return fmt.Errorf("No enum value for %v", b)
}

// Keys being hashed:
// AppInstKey
// AppKey
// CloudletKey
// CloudletPoolKey
// ClusterInstKey
// ClusterKey
// ControllerKey
// DeveloperKey
// FlavorKey
// NodeKey
// OperatorKey
// PolicyKey
// ResTagTableKey
var versionHashString = "03fad51f0343d41f617329151f474d2b"

func GetDataModelVersion() string {
	return versionHashString
}

var VersionHash_UpgradeFuncs = map[int32]VersionUpgradeFunc{
	0:  nil,
	1:  TestUpgradeExample,
	2:  nil,
	3:  AddClusterInstKeyToAppInstKey,
	4:  LintFixAppInstFields,
	5:  AddClusterInstDeploymentField,
	6:  AddInternalPortsForPrometheus,
	7:  nil,
	8:  nil,
	9:  nil,
	10: SetDefaultLoadBalancerMaxPortRange,
	11: nil,
	12: SetDefaultMaxTrackedDmeClients,
}
var VersionHash_UpgradeFuncNames = map[int32]string{
	0:  "",
	1:  "TestUpgradeExample",
	2:  "",
	3:  "AddClusterInstKeyToAppInstKey",
	4:  "LintFixAppInstFields",
	5:  "AddClusterInstDeploymentField",
	6:  "AddInternalPortsForPrometheus",
	7:  "",
	8:  "",
	9:  "",
	10: "SetDefaultLoadBalancerMaxPortRange",
	11: "",
	12: "SetDefaultMaxTrackedDmeClients",
}

func init() { proto.RegisterFile("version.proto", fileDescriptorVersion) }

var fileDescriptorVersion = []byte{
	// 677 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcd, 0x6a, 0x24, 0x55,
	0x14, 0xc7, 0xa7, 0xfd, 0x88, 0x26, 0xa3, 0x50, 0x14, 0x22, 0x45, 0xa1, 0x0d, 0x0e, 0x28, 0x28,
	0x38, 0x7d, 0xbf, 0x3f, 0x96, 0x99, 0xc4, 0x90, 0xc1, 0x04, 0x46, 0x27, 0xba, 0x95, 0x73, 0xef,
	0x39, 0xb7, 0x53, 0x58, 0x5d, 0xb7, 0xa9, 0xaa, 0x96, 0x9e, 0xad, 0xcb, 0x7e, 0x18, 0x9f, 0x63,
	0x96, 0x3e, 0x82, 0xe6, 0x19, 0x6c, 0x70, 0x29, 0x49, 0x7a, 0x3a, 0x2e, 0x66, 0x73, 0xf9, 0x2f,
	0x7e, 0xe7, 0xff, 0x3f, 0xe7, 0xde, 0x73, 0x8f, 0x3e, 0xfe, 0x8d, 0xfa, 0xa1, 0xc9, 0xdd, 0xd3,
	0x65, 0x9f, 0xc7, 0x5c, 0x1e, 0x12, 0xce, 0xe9, 0x4e, 0xd6, 0x9f, 0xcd, 0x73, 0x9e, 0xb7, 0x34,
	0x83, 0x65, 0x33, 0x83, 0xae, 0xcb, 0x23, 0x8c, 0x4d, 0xee, 0x86, 0x7b, 0xb0, 0x76, 0xf3, 0x66,
	0xbc, 0x5e, 0x85, 0xa7, 0x31, 0x2f, 0x66, 0x8b, 0x1c, 0x9a, 0xf6, 0xb6, 0x70, 0x3d, 0xbb, 0x3d,
	0xbf, 0x8d, 0x6d, 0x5e, 0xe1, 0xec, 0x8e, 0x9b, 0x53, 0xb7, 0x17, 0xf7, 0x95, 0xdf, 0xfc, 0x71,
	0x70, 0xf4, 0xf8, 0xe7, 0xfb, 0xd0, 0x73, 0x18, 0xae, 0xcb, 0xaf, 0x8f, 0xbe, 0x3c, 0x3f, 0x7e,
	0x79, 0xfe, 0x0b, 0x2a, 0x8e, 0x2e, 0xa2, 0x77, 0x89, 0xb1, 0x20, 0x98, 0x22, 0xef, 0x18, 0xf3,
	0xde, 0x51, 0x4c, 0x4e, 0x09, 0x4b, 0xc5, 0xa3, 0xf2, 0x78, 0x87, 0x06, 0xa9, 0xa5, 0x30, 0x98,
	0x58, 0x8a, 0xc8, 0xb5, 0x66, 0xc1, 0x46, 0x16, 0x93, 0x51, 0x86, 0x45, 0x15, 0x22, 0x88, 0x62,
	0x52, 0x7f, 0xba, 0xd9, 0x56, 0xe5, 0x15, 0x0d, 0xe3, 0x4f, 0xcb, 0x79, 0x0f, 0x48, 0xdf, 0xad,
	0x61, 0xb1, 0x6c, 0x69, 0x9f, 0xa6, 0x05, 0x19, 0xef, 0x98, 0xf6, 0x3e, 0xa2, 0xf6, 0x21, 0x04,
	0x64, 0x48, 0x0e, 0x75, 0x52, 0xa8, 0x25, 0xaa, 0x50, 0xbc, 0x53, 0x5e, 0xec, 0x50, 0xc6, 0x02,
	0xc6, 0x04, 0x5e, 0x9b, 0x08, 0x8a, 0x48, 0x89, 0x40, 0xce, 0x42, 0x88, 0xe8, 0x52, 0x84, 0xc4,
	0x63, 0xf1, 0x6e, 0xfd, 0xc5, 0x66, 0x5b, 0x7d, 0x7e, 0x8c, 0x78, 0xd2, 0xae, 0x86, 0x91, 0xfa,
	0xe7, 0xdd, 0x30, 0x7e, 0x4f, 0xaf, 0xae, 0xf2, 0xf1, 0x72, 0xb9, 0xd3, 0xe5, 0xc9, 0x1b, 0x37,
	0x14, 0xe8, 0x23, 0x0b, 0xcc, 0x02, 0x7a, 0xe7, 0xc9, 0x9b, 0x14, 0x64, 0x90, 0xa0, 0x94, 0x17,
	0x4a, 0x72, 0x53, 0xbc, 0x57, 0x57, 0x9b, 0x6d, 0xf5, 0xc9, 0x45, 0xd3, 0x8d, 0x67, 0xcd, 0x7a,
	0xe7, 0x70, 0xd6, 0x50, 0x8b, 0xc3, 0xbe, 0x25, 0x11, 0xac, 0x4f, 0x2c, 0x18, 0x52, 0x4c, 0x30,
	0xa5, 0x89, 0x74, 0x32, 0x0e, 0x8d, 0xb7, 0xc1, 0x4b, 0x67, 0x80, 0x8a, 0xf7, 0xdf, 0xd6, 0xd2,
	0x29, 0x2d, 0xdb, 0xfc, 0x6a, 0x41, 0xdd, 0xbd, 0xdd, 0xde, 0x4d, 0x4b, 0x03, 0xc6, 0x83, 0x26,
	0x61, 0x43, 0xb2, 0x31, 0x69, 0xae, 0x05, 0x3a, 0x4d, 0x01, 0x04, 0x07, 0xb0, 0xaa, 0x38, 0xd8,
	0xbb, 0x3d, 0xef, 0x46, 0xea, 0x3b, 0x68, 0x5f, 0xe4, 0x7e, 0x1c, 0xce, 0x72, 0xff, 0xa2, 0xcf,
	0x0b, 0x1a, 0xaf, 0x69, 0x35, 0xec, 0x6f, 0x36, 0x02, 0x61, 0x44, 0xa2, 0xe4, 0x39, 0x0f, 0x91,
	0x31, 0xd4, 0x18, 0x09, 0x62, 0x72, 0xa4, 0xb5, 0xf3, 0x0c, 0x8a, 0x0f, 0xf6, 0xa8, 0x61, 0x89,
	0xc2, 0xed, 0x0c, 0x09, 0x5d, 0xe2, 0xc0, 0x91, 0x90, 0x59, 0x23, 0x30, 0x44, 0x2b, 0x40, 0x83,
	0x2b, 0x3e, 0xfc, 0xdf, 0x76, 0x44, 0xd0, 0x8a, 0x3b, 0xb0, 0x16, 0x85, 0x40, 0x6f, 0x5c, 0x24,
	0x0b, 0x02, 0x52, 0xd4, 0xca, 0x63, 0xa2, 0xe2, 0xb0, 0xfc, 0x61, 0x87, 0x5a, 0xa7, 0x1c, 0x2a,
	0x41, 0x12, 0x04, 0x41, 0x92, 0x86, 0xb4, 0x0c, 0x01, 0x25, 0x24, 0xed, 0x78, 0xe0, 0x12, 0x8a,
	0xa3, 0xfa, 0xab, 0xcd, 0xb6, 0x7a, 0xf2, 0x92, 0xc6, 0x53, 0x4a, 0xb0, 0x6a, 0xc7, 0x8b, 0x0c,
	0xf8, 0x0c, 0x5a, 0xe8, 0x22, 0xf5, 0x97, 0xb0, 0xbe, 0x1d, 0xee, 0x47, 0xe8, 0xe6, 0x0f, 0xdb,
	0x92, 0x24, 0x0f, 0x16, 0x3c, 0x5a, 0x62, 0x26, 0x59, 0xc1, 0x99, 0x25, 0x06, 0x81, 0xcb, 0x68,
	0x99, 0xb3, 0x4c, 0x51, 0xf1, 0xb8, 0xbc, 0x7c, 0xf3, 0xbe, 0x32, 0x01, 0x6a, 0x9e, 0x98, 0x54,
	0x12, 0x15, 0x4f, 0x86, 0x5b, 0x29, 0x3c, 0xd7, 0x3c, 0x29, 0xab, 0x50, 0x84, 0xe2, 0xa3, 0xfa,
	0xc9, 0x66, 0x5b, 0x4d, 0x1f, 0xd2, 0x2f, 0x61, 0x7d, 0xd5, 0x43, 0xfc, 0x95, 0xf0, 0x74, 0x41,
	0x27, 0x6d, 0x43, 0xdd, 0x38, 0xd4, 0x87, 0xff, 0xfe, 0x53, 0x4d, 0x7e, 0xdf, 0x56, 0x13, 0xf6,
	0xac, 0x78, 0xfd, 0xf7, 0xf4, 0xd1, 0xeb, 0x9b, 0xe9, 0xe4, 0xcf, 0x9b, 0xe9, 0xe4, 0xaf, 0x9b,
	0xe9, 0x24, 0x1c, 0xdc, 0xfd, 0x24, 0xf9, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x20, 0x04, 0x3d,
	0x7c, 0xbd, 0x03, 0x00, 0x00,
}
