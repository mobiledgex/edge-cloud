// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: version.proto

package edgeproto

import (
	"encoding/json"
	"errors"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	"github.com/mobiledgex/edge-cloud/util"
	math "math"
	"strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Below enum lists hashes as well as corresponding versions
type VersionHash int32

const (
	VersionHash_HASH_d41d8cd98f00b204e9800998ecf8427e VersionHash = 0
	//interim versions deleted
	VersionHash_HASH_d4ca5418a77d22d968ce7a2afc549dfe VersionHash = 9
	VersionHash_HASH_7848d42e3a2eaf36e53bbd3af581b13a VersionHash = 10
	VersionHash_HASH_f31b7a9d7e06f72107e0ab13c708704e VersionHash = 11
	VersionHash_HASH_03fad51f0343d41f617329151f474d2b VersionHash = 12
	VersionHash_HASH_7d32a983fafc3da768e045b1dc4d5f50 VersionHash = 13
	VersionHash_HASH_747c14bdfe2043f09d251568e4a722c6 VersionHash = 14
	VersionHash_HASH_c7fb20f545a5bc9869b00bb770753c31 VersionHash = 15
	VersionHash_HASH_83cd5c44b5c7387ebf7d055e7345ab42 VersionHash = 16
	VersionHash_HASH_d8a4e697d0d693479cfd9c1c523d7e06 VersionHash = 17
	VersionHash_HASH_e8360aa30f234ecefdfdb9fb2dc79c20 VersionHash = 18
	VersionHash_HASH_c53c7840d242efc7209549a36fcf9e04 VersionHash = 19
	VersionHash_HASH_1a57396698c4ade15f0579c9f5714cd6 VersionHash = 20
	VersionHash_HASH_71c580746ee2a6b7d1a4182b3a54407a VersionHash = 21
	VersionHash_HASH_a18636af1f4272c38ca72881b2a8bcea VersionHash = 22
	VersionHash_HASH_5172f54d72f7d2062d45c9c7ed60cc7e VersionHash = 23
)

var VersionHash_name = map[int32]string{
	0:  "HASH_d41d8cd98f00b204e9800998ecf8427e",
	9:  "HASH_d4ca5418a77d22d968ce7a2afc549dfe",
	10: "HASH_7848d42e3a2eaf36e53bbd3af581b13a",
	11: "HASH_f31b7a9d7e06f72107e0ab13c708704e",
	12: "HASH_03fad51f0343d41f617329151f474d2b",
	13: "HASH_7d32a983fafc3da768e045b1dc4d5f50",
	14: "HASH_747c14bdfe2043f09d251568e4a722c6",
	15: "HASH_c7fb20f545a5bc9869b00bb770753c31",
	16: "HASH_83cd5c44b5c7387ebf7d055e7345ab42",
	17: "HASH_d8a4e697d0d693479cfd9c1c523d7e06",
	18: "HASH_e8360aa30f234ecefdfdb9fb2dc79c20",
	19: "HASH_c53c7840d242efc7209549a36fcf9e04",
	20: "HASH_1a57396698c4ade15f0579c9f5714cd6",
	21: "HASH_71c580746ee2a6b7d1a4182b3a54407a",
	22: "HASH_a18636af1f4272c38ca72881b2a8bcea",
	23: "HASH_5172f54d72f7d2062d45c9c7ed60cc7e",
}

var VersionHash_value = map[string]int32{
	"HASH_d41d8cd98f00b204e9800998ecf8427e": 0,
	"HASH_d4ca5418a77d22d968ce7a2afc549dfe": 9,
	"HASH_7848d42e3a2eaf36e53bbd3af581b13a": 10,
	"HASH_f31b7a9d7e06f72107e0ab13c708704e": 11,
	"HASH_03fad51f0343d41f617329151f474d2b": 12,
	"HASH_7d32a983fafc3da768e045b1dc4d5f50": 13,
	"HASH_747c14bdfe2043f09d251568e4a722c6": 14,
	"HASH_c7fb20f545a5bc9869b00bb770753c31": 15,
	"HASH_83cd5c44b5c7387ebf7d055e7345ab42": 16,
	"HASH_d8a4e697d0d693479cfd9c1c523d7e06": 17,
	"HASH_e8360aa30f234ecefdfdb9fb2dc79c20": 18,
	"HASH_c53c7840d242efc7209549a36fcf9e04": 19,
	"HASH_1a57396698c4ade15f0579c9f5714cd6": 20,
	"HASH_71c580746ee2a6b7d1a4182b3a54407a": 21,
	"HASH_a18636af1f4272c38ca72881b2a8bcea": 22,
	"HASH_5172f54d72f7d2062d45c9c7ed60cc7e": 23,
}

func (x VersionHash) String() string {
	return proto.EnumName(VersionHash_name, int32(x))
}

func (VersionHash) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7d2c07d79758f814, []int{0}
}

func init() {
	proto.RegisterEnum("edgeproto.VersionHash", VersionHash_name, VersionHash_value)
}

func init() { proto.RegisterFile("version.proto", fileDescriptor_7d2c07d79758f814) }

var fileDescriptor_7d2c07d79758f814 = []byte{
	// 673 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd3, 0x3d, 0x6f, 0xa3, 0x45,
	0x10, 0x07, 0x70, 0xbb, 0x39, 0x29, 0x3e, 0xee, 0xd8, 0x33, 0x77, 0x60, 0x0c, 0x98, 0x8a, 0x02,
	0x24, 0x2e, 0xfb, 0x32, 0xbb, 0xb3, 0xdb, 0x01, 0x87, 0x90, 0x05, 0x05, 0x11, 0x01, 0x5a, 0xb4,
	0x3b, 0x2f, 0x4e, 0x20, 0xc9, 0x13, 0xd9, 0x8f, 0x4f, 0xd0, 0x52, 0xa6, 0xe2, 0x9b, 0xf0, 0x35,
	0xae, 0x4c, 0x49, 0x09, 0xc9, 0x57, 0xc0, 0x12, 0x25, 0x8a, 0x13, 0x1c, 0x9a, 0x47, 0x7f, 0x3d,
	0xfb, 0xdb, 0xd9, 0xd1, 0x48, 0x33, 0x7a, 0xf4, 0x52, 0x96, 0xab, 0xe3, 0xee, 0xec, 0xf9, 0xf9,
	0xb2, 0xeb, 0xbb, 0xf1, 0x9e, 0xf0, 0x42, 0xb6, 0x71, 0x9a, 0x17, 0xc7, 0xfd, 0xd1, 0xba, 0x3d,
	0xa7, 0xee, 0x74, 0xff, 0xb4, 0x6b, 0xc7, 0x27, 0x37, 0x47, 0x3f, 0xef, 0xdf, 0x7c, 0x3f, 0xa6,
	0x93, 0x6e, 0xcd, 0xfb, 0x5b, 0xb7, 0x90, 0xb3, 0x5d, 0xb8, 0x2d, 0x32, 0x7d, 0xba, 0xe8, 0x16,
	0xdd, 0x36, 0xee, 0xdf, 0xa4, 0xdb, 0xbf, 0x1f, 0xfd, 0xfe, 0x60, 0xf4, 0xf0, 0xfb, 0xdb, 0xc7,
	0xe6, 0x75, 0x75, 0x34, 0xfe, 0x70, 0xf4, 0xc1, 0xfc, 0xd3, 0xc3, 0xf9, 0x0f, 0x0c, 0x8e, 0x33,
	0x71, 0xc9, 0x6a, 0x6d, 0xf3, 0x16, 0xa4, 0x64, 0x6b, 0x4b, 0xc9, 0x42, 0x9a, 0xc1, 0xa3, 0x98,
	0xc1, 0xff, 0x28, 0xd5, 0x08, 0x2e, 0x57, 0x44, 0xf6, 0x9e, 0x4b, 0xca, 0x24, 0x58, 0x7d, 0x55,
	0x8a, 0x50, 0x58, 0xc5, 0xec, 0xed, 0x28, 0x66, 0xc8, 0x0c, 0x5e, 0x42, 0xf5, 0x52, 0x35, 0x24,
	0x89, 0xa1, 0x35, 0x0e, 0x55, 0x63, 0x76, 0xcd, 0x85, 0x6a, 0x46, 0x3b, 0xaa, 0xc1, 0x35, 0xac,
	0x85, 0x51, 0x6c, 0x52, 0xf4, 0xce, 0xa2, 0xd8, 0xda, 0x5c, 0x20, 0xb4, 0x19, 0x2d, 0x88, 0x79,
	0xb8, 0xa3, 0x36, 0x68, 0xe5, 0xe8, 0xd4, 0x06, 0x08, 0x0c, 0x4e, 0x93, 0xc3, 0xe0, 0x8b, 0x8b,
	0x4e, 0x01, 0x81, 0x7d, 0x33, 0xaf, 0xdd, 0x37, 0xc0, 0xc1, 0xd7, 0x92, 0x83, 0x56, 0xa5, 0xc0,
	0x15, 0x53, 0x16, 0x0b, 0xb1, 0x39, 0x26, 0xe0, 0xa8, 0xd1, 0x9a, 0x47, 0xf7, 0x14, 0x90, 0x1c,
	0x34, 0x56, 0xf1, 0x16, 0x82, 0xda, 0xc2, 0x3e, 0xba, 0x98, 0xb2, 0x40, 0x45, 0xef, 0x29, 0x99,
	0xc7, 0x3b, 0x4a, 0xa8, 0xcd, 0x5b, 0x8d, 0x10, 0x6b, 0x6c, 0x54, 0x72, 0x2a, 0xcd, 0xda, 0xd6,
	0x10, 0x2d, 0xc6, 0x40, 0xc1, 0x99, 0xd7, 0x77, 0x34, 0x07, 0xe2, 0x48, 0x00, 0x2d, 0x12, 0x86,
	0x8c, 0xd2, 0x14, 0xd9, 0xc6, 0x28, 0x18, 0x20, 0xd6, 0x06, 0xde, 0x98, 0xfb, 0xb9, 0xe6, 0x0a,
	0x92, 0x0a, 0xb2, 0xe5, 0x54, 0x02, 0x60, 0x21, 0xe5, 0x42, 0x8e, 0xa2, 0x0f, 0xdb, 0xa9, 0x98,
	0x27, 0x3b, 0x2a, 0x39, 0x24, 0x5b, 0x6b, 0xb0, 0xea, 0x03, 0x08, 0x89, 0xb2, 0x72, 0x2b, 0xda,
	0x3c, 0x13, 0x16, 0xf2, 0xd6, 0x8c, 0xef, 0x7b, 0x8d, 0x81, 0x30, 0x83, 0x65, 0x0f, 0x5e, 0x94,
	0xd0, 0xdb, 0x12, 0xa1, 0xd4, 0x90, 0x94, 0xb4, 0x88, 0x05, 0xf3, 0xc6, 0xf8, 0x93, 0x3b, 0xea,
	0x6a, 0xc4, 0x50, 0x52, 0x2a, 0x99, 0xa0, 0xb2, 0xb8, 0xa8, 0x36, 0x62, 0xa1, 0xa2, 0x11, 0x1d,
	0x10, 0x27, 0xf3, 0x74, 0xfa, 0xec, 0x62, 0x33, 0x79, 0xf2, 0xe2, 0x48, 0xe8, 0xa7, 0x2f, 0xba,
	0xe5, 0xbc, 0xef, 0xcf, 0x0f, 0xba, 0x65, 0xbf, 0x1a, 0x7f, 0xf9, 0xdf, 0x0c, 0x1d, 0xc5, 0x6c,
	0x11, 0x92, 0x88, 0xaf, 0xa9, 0x21, 0xbb, 0x0a, 0x2e, 0xfb, 0x16, 0x6a, 0x04, 0xb0, 0x58, 0xcd,
	0xb3, 0xe9, 0xfb, 0x17, 0x9b, 0xc9, 0x3b, 0x07, 0xcb, 0xf5, 0x99, 0x1c, 0xd6, 0xd3, 0xd5, 0xfa,
	0x6c, 0x71, 0x70, 0x52, 0x7b, 0xed, 0x96, 0xa7, 0x9f, 0xcb, 0xcb, 0x63, 0x92, 0xd5, 0xb8, 0xdc,
	0xd5, 0xaa, 0x2e, 0xa7, 0x90, 0xaa, 0x3a, 0x05, 0x8f, 0x9e, 0x42, 0xa6, 0x8a, 0x3e, 0x67, 0xd7,
	0x7c, 0xcd, 0x8d, 0xa4, 0x9a, 0x37, 0xa7, 0x8f, 0x2f, 0x36, 0x93, 0xd1, 0xa1, 0xf4, 0xdf, 0x2e,
	0xd7, 0xab, 0x5e, 0x78, 0x3c, 0xbf, 0xbb, 0x1a, 0x1d, 0x7a, 0x8d, 0xc0, 0xe8, 0x15, 0xd9, 0xdb,
	0xe4, 0x19, 0x22, 0x15, 0x42, 0xe1, 0x64, 0x89, 0x50, 0xcc, 0x5b, 0xd3, 0xf7, 0x2e, 0x36, 0x93,
	0xb7, 0xbf, 0x3b, 0xe7, 0xda, 0xcb, 0x8b, 0x9b, 0x35, 0x3a, 0x91, 0xfe, 0x1b, 0xd1, 0xd5, 0xd7,
	0xed, 0xc7, 0xaf, 0xe4, 0x97, 0xd5, 0x74, 0xef, 0x9f, 0xbf, 0x27, 0xc3, 0x5f, 0x37, 0x93, 0x61,
	0xfa, 0xec, 0xdd, 0x57, 0x7f, 0xcd, 0x06, 0xaf, 0xae, 0x66, 0xc3, 0xcb, 0xab, 0xd9, 0xf0, 0xcf,
	0xab, 0xd9, 0xf0, 0xb7, 0xeb, 0xd9, 0xe0, 0xf2, 0x7a, 0x36, 0xf8, 0xe3, 0x7a, 0x36, 0x68, 0x0f,
	0xb6, 0x6b, 0x15, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x80, 0xb4, 0x2d, 0x76, 0xc2, 0x03, 0x00,
	0x00,
}
var VersionHashStrings = []string{
	"HASH_d41d8cd98f00b204e9800998ecf8427e",
	"HASH_d4ca5418a77d22d968ce7a2afc549dfe",
	"HASH_7848d42e3a2eaf36e53bbd3af581b13a",
	"HASH_f31b7a9d7e06f72107e0ab13c708704e",
	"HASH_03fad51f0343d41f617329151f474d2b",
	"HASH_7d32a983fafc3da768e045b1dc4d5f50",
	"HASH_747c14bdfe2043f09d251568e4a722c6",
	"HASH_c7fb20f545a5bc9869b00bb770753c31",
	"HASH_83cd5c44b5c7387ebf7d055e7345ab42",
	"HASH_d8a4e697d0d693479cfd9c1c523d7e06",
	"HASH_e8360aa30f234ecefdfdb9fb2dc79c20",
	"HASH_c53c7840d242efc7209549a36fcf9e04",
	"HASH_1a57396698c4ade15f0579c9f5714cd6",
	"HASH_71c580746ee2a6b7d1a4182b3a54407a",
	"HASH_a18636af1f4272c38ca72881b2a8bcea",
	"HASH_5172f54d72f7d2062d45c9c7ed60cc7e",
}

const (
	VersionHashHASHD41D8Cd98F00B204E9800998Ecf8427E  uint64 = 1 << 0
	VersionHashHASHD4Ca5418A77D22D968Ce7A2Afc549Dfe  uint64 = 1 << 1
	VersionHashHASH_7848D42E3A2Eaf36E53Bbd3Af581B13A uint64 = 1 << 2
	VersionHashHASHF31B7A9D7E06F72107E0Ab13C708704E  uint64 = 1 << 3
	VersionHashHASH_03Fad51F0343D41F617329151F474D2B uint64 = 1 << 4
	VersionHashHASH_7D32A983Fafc3Da768E045B1Dc4D5F50 uint64 = 1 << 5
	VersionHashHASH_747C14Bdfe2043F09D251568E4A722C6 uint64 = 1 << 6
	VersionHashHASHC7Fb20F545A5Bc9869B00Bb770753C31  uint64 = 1 << 7
	VersionHashHASH_83Cd5C44B5C7387Ebf7D055E7345Ab42 uint64 = 1 << 8
	VersionHashHASHD8A4E697D0D693479Cfd9C1C523D7E06  uint64 = 1 << 9
	VersionHashHASHE8360Aa30F234Ecefdfdb9Fb2Dc79C20  uint64 = 1 << 10
	VersionHashHASHC53C7840D242Efc7209549A36Fcf9E04  uint64 = 1 << 11
	VersionHashHASH_1A57396698C4Ade15F0579C9F5714Cd6 uint64 = 1 << 12
	VersionHashHASH_71C580746Ee2A6B7D1A4182B3A54407A uint64 = 1 << 13
	VersionHashHASHA18636Af1F4272C38Ca72881B2A8Bcea  uint64 = 1 << 14
	VersionHashHASH_5172F54D72F7D2062D45C9C7Ed60Cc7E uint64 = 1 << 15
)

var VersionHash_CamelName = map[int32]string{
	// HASH_d41d8cd98f00b204e9800998ecf8427e -> HashD41D8Cd98F00B204E9800998Ecf8427E
	0: "HashD41D8Cd98F00B204E9800998Ecf8427E",
	// HASH_d4ca5418a77d22d968ce7a2afc549dfe -> HashD4Ca5418A77D22D968Ce7A2Afc549Dfe
	9: "HashD4Ca5418A77D22D968Ce7A2Afc549Dfe",
	// HASH_7848d42e3a2eaf36e53bbd3af581b13a -> Hash7848D42E3A2Eaf36E53Bbd3Af581B13A
	10: "Hash7848D42E3A2Eaf36E53Bbd3Af581B13A",
	// HASH_f31b7a9d7e06f72107e0ab13c708704e -> HashF31B7A9D7E06F72107E0Ab13C708704E
	11: "HashF31B7A9D7E06F72107E0Ab13C708704E",
	// HASH_03fad51f0343d41f617329151f474d2b -> Hash03Fad51F0343D41F617329151F474D2B
	12: "Hash03Fad51F0343D41F617329151F474D2B",
	// HASH_7d32a983fafc3da768e045b1dc4d5f50 -> Hash7D32A983Fafc3Da768E045B1Dc4D5F50
	13: "Hash7D32A983Fafc3Da768E045B1Dc4D5F50",
	// HASH_747c14bdfe2043f09d251568e4a722c6 -> Hash747C14Bdfe2043F09D251568E4A722C6
	14: "Hash747C14Bdfe2043F09D251568E4A722C6",
	// HASH_c7fb20f545a5bc9869b00bb770753c31 -> HashC7Fb20F545A5Bc9869B00Bb770753C31
	15: "HashC7Fb20F545A5Bc9869B00Bb770753C31",
	// HASH_83cd5c44b5c7387ebf7d055e7345ab42 -> Hash83Cd5C44B5C7387Ebf7D055E7345Ab42
	16: "Hash83Cd5C44B5C7387Ebf7D055E7345Ab42",
	// HASH_d8a4e697d0d693479cfd9c1c523d7e06 -> HashD8A4E697D0D693479Cfd9C1C523D7E06
	17: "HashD8A4E697D0D693479Cfd9C1C523D7E06",
	// HASH_e8360aa30f234ecefdfdb9fb2dc79c20 -> HashE8360Aa30F234Ecefdfdb9Fb2Dc79C20
	18: "HashE8360Aa30F234Ecefdfdb9Fb2Dc79C20",
	// HASH_c53c7840d242efc7209549a36fcf9e04 -> HashC53C7840D242Efc7209549A36Fcf9E04
	19: "HashC53C7840D242Efc7209549A36Fcf9E04",
	// HASH_1a57396698c4ade15f0579c9f5714cd6 -> Hash1A57396698C4Ade15F0579C9F5714Cd6
	20: "Hash1A57396698C4Ade15F0579C9F5714Cd6",
	// HASH_71c580746ee2a6b7d1a4182b3a54407a -> Hash71C580746Ee2A6B7D1A4182B3A54407A
	21: "Hash71C580746Ee2A6B7D1A4182B3A54407A",
	// HASH_a18636af1f4272c38ca72881b2a8bcea -> HashA18636Af1F4272C38Ca72881B2A8Bcea
	22: "HashA18636Af1F4272C38Ca72881B2A8Bcea",
	// HASH_5172f54d72f7d2062d45c9c7ed60cc7e -> Hash5172F54D72F7D2062D45C9C7Ed60Cc7E
	23: "Hash5172F54D72F7D2062D45C9C7Ed60Cc7E",
}
var VersionHash_CamelValue = map[string]int32{
	"HashD41D8Cd98F00B204E9800998Ecf8427E": 0,
	"HashD4Ca5418A77D22D968Ce7A2Afc549Dfe": 9,
	"Hash7848D42E3A2Eaf36E53Bbd3Af581B13A": 10,
	"HashF31B7A9D7E06F72107E0Ab13C708704E": 11,
	"Hash03Fad51F0343D41F617329151F474D2B": 12,
	"Hash7D32A983Fafc3Da768E045B1Dc4D5F50": 13,
	"Hash747C14Bdfe2043F09D251568E4A722C6": 14,
	"HashC7Fb20F545A5Bc9869B00Bb770753C31": 15,
	"Hash83Cd5C44B5C7387Ebf7D055E7345Ab42": 16,
	"HashD8A4E697D0D693479Cfd9C1C523D7E06": 17,
	"HashE8360Aa30F234Ecefdfdb9Fb2Dc79C20": 18,
	"HashC53C7840D242Efc7209549A36Fcf9E04": 19,
	"Hash1A57396698C4Ade15F0579C9F5714Cd6": 20,
	"Hash71C580746Ee2A6B7D1A4182B3A54407A": 21,
	"HashA18636Af1F4272C38Ca72881B2A8Bcea": 22,
	"Hash5172F54D72F7D2062D45C9C7Ed60Cc7E": 23,
}

func (e *VersionHash) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var str string
	err := unmarshal(&str)
	if err != nil {
		return err
	}
	val, ok := VersionHash_CamelValue[util.CamelCase(str)]
	if !ok {
		// may be enum value instead of string
		ival, err := strconv.Atoi(str)
		val = int32(ival)
		if err == nil {
			_, ok = VersionHash_CamelName[val]
		}
	}
	if !ok {
		return errors.New(fmt.Sprintf("No enum value for %s", str))
	}
	*e = VersionHash(val)
	return nil
}

func (e VersionHash) MarshalYAML() (interface{}, error) {
	return proto.EnumName(VersionHash_CamelName, int32(e)), nil
}

// custom JSON encoding/decoding
func (e *VersionHash) UnmarshalJSON(b []byte) error {
	var str string
	err := json.Unmarshal(b, &str)
	if err == nil {
		val, ok := VersionHash_CamelValue[util.CamelCase(str)]
		if !ok {
			// may be int value instead of enum name
			ival, err := strconv.Atoi(str)
			val = int32(ival)
			if err == nil {
				_, ok = VersionHash_CamelName[val]
			}
		}
		if !ok {
			return errors.New(fmt.Sprintf("No enum value for %s", str))
		}
		*e = VersionHash(val)
		return nil
	}
	var val int32
	err = json.Unmarshal(b, &val)
	if err == nil {
		*e = VersionHash(val)
		return nil
	}
	return fmt.Errorf("No enum value for %v", b)
}

// Keys being hashed:
// AppInstKey
// AppKey
// CloudletKey
// CloudletPoolKey
// ClusterInstKey
// ClusterKey
// ControllerKey
// DeviceKey
// FlavorKey
// NodeKey
// PolicyKey
// ResTagTableKey
// VMPoolKey
var versionHashString = "5172f54d72f7d2062d45c9c7ed60cc7e"

func GetDataModelVersion() string {
	return versionHashString
}

var VersionHash_UpgradeFuncs = map[int32]VersionUpgradeFunc{
	0:  nil,
	9:  nil,
	10: nil,
	11: nil,
	12: nil,
	13: nil,
	14: nil,
	15: nil,
	16: nil,
	17: nil,
	18: nil,
	19: nil,
	20: CheckForHttpPorts,
	21: PruneSamsungPlatformDevices,
	22: SetTrusted,
	23: UpdateCloudletRefsObjKeys,
}
var VersionHash_UpgradeFuncNames = map[int32]string{
	0:  "",
	9:  "",
	10: "",
	11: "",
	12: "",
	13: "",
	14: "",
	15: "",
	16: "",
	17: "",
	18: "",
	19: "",
	20: "CheckForHttpPorts",
	21: "PruneSamsungPlatformDevices",
	22: "SetTrusted",
	23: "UpdateCloudletRefsObjKeys",
}
