// Send updates to distributed matching engine when things change

syntax = "proto3";
package edgeproto;

import "google/api/annotations.proto";
import "github.com/mobiledgex/edge-cloud/protogen/protogen.proto";
import "app_inst.proto";
import "cloudlet.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

enum NoticeAction {
  NONE = 0;
  UPDATE = 1;
  DELETE = 2;
  VERSION = 3;
  SENDALL_END = 4;
}

message Notice {
  // action to perform
  NoticeAction action = 1;
  // connect count, used to ignore invalid buffered messages
  uint64 connectionId = 2;
  // protocol version supported by sender
  uint32 version = 3;
  // data included (for UPDATE and DELETE)
  oneof data {
    AppInst appInst = 4;
    Cloudlet cloudlet = 5;
  }
}

message NoticeReply {
  // action
  NoticeAction action = 1;
  // protocol version supported by receiver
  uint32 version = 2;
}

service NotifyApi {
  // Send update is used to send database changes to other nodes
  rpc StreamNotice(stream Notice) returns (stream NoticeReply) {}
}
