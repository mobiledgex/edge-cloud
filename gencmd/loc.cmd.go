// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: loc.proto

package gencmd

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import google_protobuf "github.com/gogo/protobuf/types"
import "time"
import "strconv"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/types"
import _ "github.com/mobiledgex/edge-cloud/protogen"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT
func LocSlicer(in *edgeproto.Loc) []string {
	s := make([]string, 0, 8)
	s = append(s, strconv.FormatFloat(float64(in.Lat), 'e', -1, 32))
	s = append(s, strconv.FormatFloat(float64(in.Long), 'e', -1, 32))
	s = append(s, strconv.FormatFloat(float64(in.HorizontalAccuracy), 'e', -1, 32))
	s = append(s, strconv.FormatFloat(float64(in.VerticalAccuracy), 'e', -1, 32))
	s = append(s, strconv.FormatFloat(float64(in.Altitude), 'e', -1, 32))
	s = append(s, strconv.FormatFloat(float64(in.Course), 'e', -1, 32))
	s = append(s, strconv.FormatFloat(float64(in.Speed), 'e', -1, 32))
	if in.Timestamp == nil {
		in.Timestamp = &google_protobuf.Timestamp{}
	}
	timestampTime := time.Unix(in.Timestamp.Seconds, int64(in.Timestamp.Nanos))
	s = append(s, timestampTime.String())
	return s
}

func LocHeaderSlicer() []string {
	s := make([]string, 0, 8)
	s = append(s, "Lat")
	s = append(s, "Long")
	s = append(s, "HorizontalAccuracy")
	s = append(s, "VerticalAccuracy")
	s = append(s, "Altitude")
	s = append(s, "Course")
	s = append(s, "Speed")
	s = append(s, "Timestamp")
	return s
}

func init() {
}
