// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: appcommon.proto

package gencmd

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT
var AppPortRequiredArgs = []string{}
var AppPortOptionalArgs = []string{
	"proto",
	"internalport",
	"publicport",
	"fqdnprefix",
	"endport",
	"tls",
	"nginx",
	"pktsize",
}
var AppPortAliasArgs = []string{}
var AppPortComments = map[string]string{
	"proto":        "TCP (L4) or UDP (L4) protocol, one of Unknown, Tcp, Udp",
	"internalport": "Container port",
	"publicport":   "Public facing port for TCP/UDP (may be mapped on shared LB reverse proxy)",
	"fqdnprefix":   "skip 4 to preserve the numbering. 4 was path_prefix but was removed since we dont need it after removed http FQDN prefix to append to base FQDN in FindCloudlet response. May be empty.",
	"endport":      "A non-zero end port indicates a port range from internal port to end port, inclusive.",
	"tls":          "TLS termination for this port",
	"nginx":        "use nginx proxy for this port if you really need a transparent proxy (udp only)",
	"pktsize":      "UDP datagram size (udp only)",
}
var AppPortSpecialArgs = map[string]string{}
var DeviceInfoStaticRequiredArgs = []string{}
var DeviceInfoStaticOptionalArgs = []string{
	"deviceos",
	"devicemodel",
}
var DeviceInfoStaticAliasArgs = []string{}
var DeviceInfoStaticComments = map[string]string{
	"deviceos":    "Android or iOS",
	"devicemodel": "Device model",
}
var DeviceInfoStaticSpecialArgs = map[string]string{}
var DeviceInfoDynamicRequiredArgs = []string{}
var DeviceInfoDynamicOptionalArgs = []string{
	"datanetworktype",
	"signalstrength",
	"carriername",
}
var DeviceInfoDynamicAliasArgs = []string{}
var DeviceInfoDynamicComments = map[string]string{
	"datanetworktype": "LTE, 5G, etc.",
	"signalstrength":  "Device signal strength",
	"carriername":     "Carrier name (can be different from cloudlet org if using )",
}
var DeviceInfoDynamicSpecialArgs = map[string]string{}
