// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: infraresources.proto

package gencmd

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mobiledgex/edge-cloud/protogen"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT
var ContainerInfoRequiredArgs = []string{}
var ContainerInfoOptionalArgs = []string{
	"name",
	"type",
	"status",
	"clusterip",
	"restarts",
}
var ContainerInfoAliasArgs = []string{}
var ContainerInfoComments = map[string]string{
	"name":      "Name of the container",
	"type":      "Type can be docker or kubernetes",
	"status":    "Runtime status of the container",
	"clusterip": "IP within the CNI and is applicable to kubernetes only",
	"restarts":  "Restart count, applicable to kubernetes only",
}
var ContainerInfoSpecialArgs = map[string]string{}
var IpAddrRequiredArgs = []string{}
var IpAddrOptionalArgs = []string{
	"externalip",
	"internalip",
}
var IpAddrAliasArgs = []string{}
var IpAddrComments = map[string]string{}
var IpAddrSpecialArgs = map[string]string{}
var VmInfoRequiredArgs = []string{}
var VmInfoOptionalArgs = []string{
	"name",
	"type",
	"status",
	"infraflavor",
	"ipaddresses:#.externalip",
	"ipaddresses:#.internalip",
	"containers:#.name",
	"containers:#.type",
	"containers:#.status",
	"containers:#.clusterip",
	"containers:#.restarts",
}
var VmInfoAliasArgs = []string{}
var VmInfoComments = map[string]string{
	"name":                   "Virtual machine name",
	"type":                   "Type can be platform, rootlb, cluster-master, cluster-k8s-node, cluster-docker-node, appvm",
	"status":                 "Runtime status of the VM",
	"infraflavor":            "Flavor allocated within the cloudlet infrastructure, distinct from the control plane flavor",
	"containers:#.name":      "Name of the container",
	"containers:#.type":      "Type can be docker or kubernetes",
	"containers:#.status":    "Runtime status of the container",
	"containers:#.clusterip": "IP within the CNI and is applicable to kubernetes only",
	"containers:#.restarts":  "Restart count, applicable to kubernetes only",
}
var VmInfoSpecialArgs = map[string]string{}
var InfraResourceRequiredArgs = []string{}
var InfraResourceOptionalArgs = []string{
	"name",
	"value",
	"inframaxvalue",
	"quotamaxvalue",
	"description",
	"units",
	"alertthreshold",
}
var InfraResourceAliasArgs = []string{}
var InfraResourceComments = map[string]string{
	"name":           "Resource name",
	"value":          "Resource value",
	"inframaxvalue":  "Resource infra max value",
	"quotamaxvalue":  "Resource quota max value",
	"description":    "Resource description",
	"units":          "Resource units",
	"alertthreshold": "Generate alert when more than threshold percentage of resource is used",
}
var InfraResourceSpecialArgs = map[string]string{}
var NodeInfoRequiredArgs = []string{}
var NodeInfoOptionalArgs = []string{
	"name",
	"allocatable:#.key",
	"allocatable:#.value",
	"capacity:#.key",
	"capacity:#.value",
}
var NodeInfoAliasArgs = []string{}
var NodeInfoComments = map[string]string{
	"name": "Node name",
}
var NodeInfoSpecialArgs = map[string]string{}
var ClusterInstRefKeyRequiredArgs = []string{}
var ClusterInstRefKeyOptionalArgs = []string{
	"clusterkey.name",
	"organization",
}
var ClusterInstRefKeyAliasArgs = []string{}
var ClusterInstRefKeyComments = map[string]string{
	"clusterkey.name": "Cluster name",
	"organization":    "Name of Developer organization that this cluster belongs to",
}
var ClusterInstRefKeySpecialArgs = map[string]string{}
var AppInstRefKeyRequiredArgs = []string{}
var AppInstRefKeyOptionalArgs = []string{
	"appkey.organization",
	"appkey.name",
	"appkey.version",
	"clusterinstkey.clusterkey.name",
	"clusterinstkey.organization",
}
var AppInstRefKeyAliasArgs = []string{}
var AppInstRefKeyComments = map[string]string{
	"appkey.organization":            "App developer organization",
	"appkey.name":                    "App name",
	"appkey.version":                 "App version",
	"clusterinstkey.clusterkey.name": "Cluster name",
	"clusterinstkey.organization":    "Name of Developer organization that this cluster belongs to",
}
var AppInstRefKeySpecialArgs = map[string]string{}
var InfraResourcesRequiredArgs = []string{}
var InfraResourcesOptionalArgs = []string{
	"vms:#.name",
	"vms:#.type",
	"vms:#.status",
	"vms:#.infraflavor",
	"vms:#.ipaddresses:#.externalip",
	"vms:#.ipaddresses:#.internalip",
	"vms:#.containers:#.name",
	"vms:#.containers:#.type",
	"vms:#.containers:#.status",
	"vms:#.containers:#.clusterip",
	"vms:#.containers:#.restarts",
}
var InfraResourcesAliasArgs = []string{}
var InfraResourcesComments = map[string]string{
	"vms:#.name":                   "Virtual machine name",
	"vms:#.type":                   "Type can be platform, rootlb, cluster-master, cluster-k8s-node, cluster-docker-node, appvm",
	"vms:#.status":                 "Runtime status of the VM",
	"vms:#.infraflavor":            "Flavor allocated within the cloudlet infrastructure, distinct from the control plane flavor",
	"vms:#.containers:#.name":      "Name of the container",
	"vms:#.containers:#.type":      "Type can be docker or kubernetes",
	"vms:#.containers:#.status":    "Runtime status of the container",
	"vms:#.containers:#.clusterip": "IP within the CNI and is applicable to kubernetes only",
	"vms:#.containers:#.restarts":  "Restart count, applicable to kubernetes only",
}
var InfraResourcesSpecialArgs = map[string]string{}
var InfraResourcesSnapshotRequiredArgs = []string{}
var InfraResourcesSnapshotOptionalArgs = []string{
	"platformvms:#.name",
	"platformvms:#.type",
	"platformvms:#.status",
	"platformvms:#.infraflavor",
	"platformvms:#.ipaddresses:#.externalip",
	"platformvms:#.ipaddresses:#.internalip",
	"platformvms:#.containers:#.name",
	"platformvms:#.containers:#.type",
	"platformvms:#.containers:#.status",
	"platformvms:#.containers:#.clusterip",
	"platformvms:#.containers:#.restarts",
	"info:#.name",
	"info:#.value",
	"info:#.inframaxvalue",
	"info:#.quotamaxvalue",
	"info:#.description",
	"info:#.units",
	"info:#.alertthreshold",
	"clusterinsts:#.clusterkey.name",
	"clusterinsts:#.organization",
	"vmappinsts:#.appkey.organization",
	"vmappinsts:#.appkey.name",
	"vmappinsts:#.appkey.version",
	"vmappinsts:#.clusterinstkey.clusterkey.name",
	"vmappinsts:#.clusterinstkey.organization",
}
var InfraResourcesSnapshotAliasArgs = []string{}
var InfraResourcesSnapshotComments = map[string]string{
	"platformvms:#.name":                          "Virtual machine name",
	"platformvms:#.type":                          "Type can be platform, rootlb, cluster-master, cluster-k8s-node, cluster-docker-node, appvm",
	"platformvms:#.status":                        "Runtime status of the VM",
	"platformvms:#.infraflavor":                   "Flavor allocated within the cloudlet infrastructure, distinct from the control plane flavor",
	"platformvms:#.containers:#.name":             "Name of the container",
	"platformvms:#.containers:#.type":             "Type can be docker or kubernetes",
	"platformvms:#.containers:#.status":           "Runtime status of the container",
	"platformvms:#.containers:#.clusterip":        "IP within the CNI and is applicable to kubernetes only",
	"platformvms:#.containers:#.restarts":         "Restart count, applicable to kubernetes only",
	"info:#.name":                                 "Resource name",
	"info:#.value":                                "Resource value",
	"info:#.inframaxvalue":                        "Resource infra max value",
	"info:#.quotamaxvalue":                        "Resource quota max value",
	"info:#.description":                          "Resource description",
	"info:#.units":                                "Resource units",
	"info:#.alertthreshold":                       "Generate alert when more than threshold percentage of resource is used",
	"clusterinsts:#.clusterkey.name":              "Cluster name",
	"clusterinsts:#.organization":                 "Name of Developer organization that this cluster belongs to",
	"vmappinsts:#.appkey.organization":            "App developer organization",
	"vmappinsts:#.appkey.name":                    "App name",
	"vmappinsts:#.appkey.version":                 "App version",
	"vmappinsts:#.clusterinstkey.clusterkey.name": "Cluster name",
	"vmappinsts:#.clusterinstkey.organization":    "Name of Developer organization that this cluster belongs to",
}
var InfraResourcesSnapshotSpecialArgs = map[string]string{}
