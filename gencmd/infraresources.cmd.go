// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: infraresources.proto

package gencmd

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT
var ContainerInfoRequiredArgs = []string{}
var ContainerInfoOptionalArgs = []string{
	"name",
	"type",
	"status",
	"clusterip",
	"restarts",
}
var ContainerInfoAliasArgs = []string{}
var ContainerInfoComments = map[string]string{
	"name":      "Name of the container",
	"type":      "Type can be docker or kubernetes",
	"status":    "Runtime status of the container",
	"clusterip": "IP within the CNI and is applicable to kubernetes only",
	"restarts":  "Restart count, applicable to kubernetes only",
}
var ContainerInfoSpecialArgs = map[string]string{}
var IpAddrRequiredArgs = []string{}
var IpAddrOptionalArgs = []string{
	"externalip",
	"internalip",
}
var IpAddrAliasArgs = []string{}
var IpAddrComments = map[string]string{}
var IpAddrSpecialArgs = map[string]string{}
var VmInfoRequiredArgs = []string{}
var VmInfoOptionalArgs = []string{
	"name",
	"type",
	"status",
	"infraflavor",
	"ipaddresses:#.externalip",
	"ipaddresses:#.internalip",
	"containers:#.name",
	"containers:#.type",
	"containers:#.status",
	"containers:#.clusterip",
	"containers:#.restarts",
}
var VmInfoAliasArgs = []string{}
var VmInfoComments = map[string]string{
	"name":                   "Virtual machine name",
	"type":                   "Type can be platform, rootlb, cluster-master, cluster-node, vmapp",
	"status":                 "Runtime status of the VM",
	"infraflavor":            "Flavor allocated within the cloudlet infrastructure, distinct from the control plane flavor",
	"containers:#.name":      "Name of the container",
	"containers:#.type":      "Type can be docker or kubernetes",
	"containers:#.status":    "Runtime status of the container",
	"containers:#.clusterip": "IP within the CNI and is applicable to kubernetes only",
	"containers:#.restarts":  "Restart count, applicable to kubernetes only",
}
var VmInfoSpecialArgs = map[string]string{}
var InfraResourcesRequiredArgs = []string{}
var InfraResourcesOptionalArgs = []string{
	"vms:#.name",
	"vms:#.type",
	"vms:#.status",
	"vms:#.infraflavor",
	"vms:#.ipaddresses:#.externalip",
	"vms:#.ipaddresses:#.internalip",
	"vms:#.containers:#.name",
	"vms:#.containers:#.type",
	"vms:#.containers:#.status",
	"vms:#.containers:#.clusterip",
	"vms:#.containers:#.restarts",
	"hwinfo",
}
var InfraResourcesAliasArgs = []string{}
var InfraResourcesComments = map[string]string{
	"vms:#.name":                   "Virtual machine name",
	"vms:#.type":                   "Type can be platform, rootlb, cluster-master, cluster-node, vmapp",
	"vms:#.status":                 "Runtime status of the VM",
	"vms:#.infraflavor":            "Flavor allocated within the cloudlet infrastructure, distinct from the control plane flavor",
	"vms:#.containers:#.name":      "Name of the container",
	"vms:#.containers:#.type":      "Type can be docker or kubernetes",
	"vms:#.containers:#.status":    "Runtime status of the container",
	"vms:#.containers:#.clusterip": "IP within the CNI and is applicable to kubernetes only",
	"vms:#.containers:#.restarts":  "Restart count, applicable to kubernetes only",
	"hwinfo":                       "HW resource information",
}
var InfraResourcesSpecialArgs = map[string]string{
	"hwinfo": "StringToString",
}
