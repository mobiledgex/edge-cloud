// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: result.proto

package gencmd

import edgeproto "github.com/mobiledgex/edge-cloud/edgeproto"
import "strings"
import "strconv"
import "os"
import "text/tabwriter"
import "github.com/mobiledgex/edge-cloud/protoc-gen-cmd/cmdsup"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Auto-generated code: DO NOT EDIT
func ResultSlicer(in *edgeproto.Result) []string {
	s := make([]string, 0, 2)
	s = append(s, in.Message)
	s = append(s, strconv.FormatUint(uint64(in.Code), 10))
	return s
}

func ResultHeaderSlicer() []string {
	s := make([]string, 0, 2)
	s = append(s, "Message")
	s = append(s, "Code")
	return s
}

func ResultWriteOutputArray(objs []*edgeproto.Result) {
	if cmdsup.OutputFormat == cmdsup.OutputFormatTable {
		output := tabwriter.NewWriter(os.Stdout, 0, 0, 1, ' ', 0)
		fmt.Fprintln(output, strings.Join(ResultHeaderSlicer(), "\t"))
		for _, obj := range objs {
			fmt.Fprintln(output, strings.Join(ResultSlicer(obj), "\t"))
		}
		output.Flush()
	} else {
		cmdsup.WriteOutputGeneric(objs)
	}
}

func ResultWriteOutputOne(obj *edgeproto.Result) {
	if cmdsup.OutputFormat == cmdsup.OutputFormatTable {
		output := tabwriter.NewWriter(os.Stdout, 0, 0, 1, ' ', 0)
		fmt.Fprintln(output, strings.Join(ResultHeaderSlicer(), "\t"))
		fmt.Fprintln(output, strings.Join(ResultSlicer(obj), "\t"))
		output.Flush()
	} else {
		cmdsup.WriteOutputGeneric(obj)
	}
}
func init() {
}
