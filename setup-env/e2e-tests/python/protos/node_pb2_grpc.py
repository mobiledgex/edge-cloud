# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import node_pb2 as node__pb2


class NodeApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ShowNodeLocal = channel.unary_stream(
        '/edgeproto.NodeApi/ShowNodeLocal',
        request_serializer=node__pb2.Node.SerializeToString,
        response_deserializer=node__pb2.Node.FromString,
        )
    self.ShowNode = channel.unary_stream(
        '/edgeproto.NodeApi/ShowNode',
        request_serializer=node__pb2.Node.SerializeToString,
        response_deserializer=node__pb2.Node.FromString,
        )


class NodeApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ShowNodeLocal(self, request, context):
    """Show Nodes connected locally only
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShowNode(self, request, context):
    """Show all Nodes connected to all Controllers
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NodeApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ShowNodeLocal': grpc.unary_stream_rpc_method_handler(
          servicer.ShowNodeLocal,
          request_deserializer=node__pb2.Node.FromString,
          response_serializer=node__pb2.Node.SerializeToString,
      ),
      'ShowNode': grpc.unary_stream_rpc_method_handler(
          servicer.ShowNode,
          request_deserializer=node__pb2.Node.FromString,
          response_serializer=node__pb2.Node.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'edgeproto.NodeApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
