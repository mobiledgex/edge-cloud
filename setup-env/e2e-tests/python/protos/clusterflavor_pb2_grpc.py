# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import clusterflavor_pb2 as clusterflavor__pb2
import result_pb2 as result__pb2


class ClusterFlavorApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateClusterFlavor = channel.unary_unary(
        '/edgeproto.ClusterFlavorApi/CreateClusterFlavor',
        request_serializer=clusterflavor__pb2.ClusterFlavor.SerializeToString,
        response_deserializer=result__pb2.Result.FromString,
        )
    self.DeleteClusterFlavor = channel.unary_unary(
        '/edgeproto.ClusterFlavorApi/DeleteClusterFlavor',
        request_serializer=clusterflavor__pb2.ClusterFlavor.SerializeToString,
        response_deserializer=result__pb2.Result.FromString,
        )
    self.UpdateClusterFlavor = channel.unary_unary(
        '/edgeproto.ClusterFlavorApi/UpdateClusterFlavor',
        request_serializer=clusterflavor__pb2.ClusterFlavor.SerializeToString,
        response_deserializer=result__pb2.Result.FromString,
        )
    self.ShowClusterFlavor = channel.unary_stream(
        '/edgeproto.ClusterFlavorApi/ShowClusterFlavor',
        request_serializer=clusterflavor__pb2.ClusterFlavor.SerializeToString,
        response_deserializer=clusterflavor__pb2.ClusterFlavor.FromString,
        )


class ClusterFlavorApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateClusterFlavor(self, request, context):
    """Create a ClusterFlavor
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteClusterFlavor(self, request, context):
    """Delete a ClusterFlavor
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateClusterFlavor(self, request, context):
    """Update a ClusterFlavor
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShowClusterFlavor(self, request, context):
    """Show ClusterFlavors
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ClusterFlavorApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateClusterFlavor': grpc.unary_unary_rpc_method_handler(
          servicer.CreateClusterFlavor,
          request_deserializer=clusterflavor__pb2.ClusterFlavor.FromString,
          response_serializer=result__pb2.Result.SerializeToString,
      ),
      'DeleteClusterFlavor': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteClusterFlavor,
          request_deserializer=clusterflavor__pb2.ClusterFlavor.FromString,
          response_serializer=result__pb2.Result.SerializeToString,
      ),
      'UpdateClusterFlavor': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateClusterFlavor,
          request_deserializer=clusterflavor__pb2.ClusterFlavor.FromString,
          response_serializer=result__pb2.Result.SerializeToString,
      ),
      'ShowClusterFlavor': grpc.unary_stream_rpc_method_handler(
          servicer.ShowClusterFlavor,
          request_deserializer=clusterflavor__pb2.ClusterFlavor.FromString,
          response_serializer=clusterflavor__pb2.ClusterFlavor.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'edgeproto.ClusterFlavorApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
