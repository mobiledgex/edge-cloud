##
## 
##
description: Deploys and starts a system, adds and delete appinstances and verifies findlocation results each time

tests:


- name: Add and show provisioning without appinst
  apifile: "{{datadir}}/appdata_no_appinst.yml"
  actions: [ctrlapi-create,ctrlapi-add,ctrlapi-show]
  compareyaml:
    yaml1: "{{datadir}}/appdata_no_appinst_show.yml"
    yaml2: "{{outputdir}}/show-commands.yml"
    filetype: appdata

- includefile: register_app_not_found.yml

- includefile: register_app1.yml

- name: create appinst1 
  apifile: "{{datadir}}/appinst1.yml"
  actions: [ctrlapi-create]

- name: find cloudlet, expect to see cloudlet1
  apifile: "{{datadir}}/find_cloudlet_app1.yml"
  actions: [dmeapi-findcloudlet]
  compareyaml:
    yaml1: "{{outputdir}}/findcloudlet.yml"
    yaml2: "{{datadir}}/find-cloudlet-response-cloudlet1.yml"
    filetype: findcloudlet
 
- name: create appinst2
  apifile: "{{datadir}}/appinst2.yml"
  actions: [ctrlapi-create]

- name: create azure instance
  apifile: "{{datadir}}/appinst_azure.yml"
  actions: [ctrlapi-create]

- name: find cloudlet, expect to see cloudlet2
  apifile: "{{datadir}}/find_cloudlet_app1.yml"
  actions: [dmeapi-findcloudlet]
  compareyaml:
    yaml1: "{{outputdir}}/findcloudlet.yml"
    yaml2: "{{datadir}}/find-cloudlet-response-cloudlet2.yml"
    filetype: findcloudlet

- name: register with samsung enabling layer	
  apifile: "{{datadir}}/register_samsung.yml"	
  actions: [dmeapi-register]	

- name: find cloudlet for app1, expect to see cloudlet2	
  apifile: "{{datadir}}/find_cloudlet_platform_app1.yml"	
  actions: [dmeapi-findcloudlet]	
  compareyaml:	
    yaml1: "{{outputdir}}/findcloudlet.yml"	
    yaml2: "{{datadir}}/find-cloudlet-response-cloudlet2.yml"	
    filetype: findcloudlet	

- name: disable tmus-cloud-2 cloudlet	
  apifile: "{{datadir}}/find_cloudlet_tmus-cloud-2.yml"	
  actions: [stop-crm=tmus-cloud-2,sleep=1]	

- name: find cloudlet for app1, expect to see tmus-cloud-1	
  apifile: "{{datadir}}/find_cloudlet_platform_app1.yml"	
  actions: [dmeapi-findcloudlet]	
  compareyaml:	
    yaml1: "{{outputdir}}/findcloudlet.yml"	
    yaml2: "{{datadir}}/find-cloudlet-response-cloudlet1.yml"	
    filetype: findcloudlet	

- name: enable tmus-cloud-2 cloudlet	
  apifile: "{{datadir}}/find_cloudlet_tmus-cloud-2.yml"	
  actions: [start-crm=tmus-cloud-2,sleep=2]	

- name: find cloudlet for app1, expect to see cloudlet2	
  apifile: "{{datadir}}/find_cloudlet_platform_app1.yml"	
  actions: [dmeapi-findcloudlet]	
  compareyaml:	
    yaml1: "{{outputdir}}/findcloudlet.yml"	
    yaml2: "{{datadir}}/find-cloudlet-response-cloudlet2.yml"	
    filetype: findcloudlet	

- name: find between cloudlet1 and azure, expect cloudlet1	
  apifile: "{{datadir}}/find_cloudlet_between_cl1_azure.yml"	
  actions: [dmeapi-findcloudlet]	
  compareyaml:	
    yaml1: "{{outputdir}}/findcloudlet.yml"	
    yaml2: "{{datadir}}/find-cloudlet-response-cloudlet1.yml"	
    filetype: findcloudlet	

- name: delete cloudlet1	
  actions: [ctrlapi-delete]	
  apifile: "{{datadir}}/appinst1.yml"	

- name: find between cloudlet1 and azure, expect azure	
  apifile: "{{datadir}}/find_cloudlet_between_cl1_azure.yml"	
  actions: [dmeapi-findcloudlet]	
  compareyaml:	
    yaml1: "{{outputdir}}/findcloudlet.yml"	
    yaml2: "{{datadir}}/find-cloudlet-response-azure.yml"	
    filetype: findcloudlet	

- name: delete azure instance	
  actions: [ctrlapi-delete]	
  apifile: "{{datadir}}/appinst_azure.yml"	

- name: delete appinst2 	
  actions: [ctrlapi-delete]	
  apifile: "{{datadir}}/appinst2.yml"	

- name: delete rest of provisioning	
  actions: [ctrlapi-delete]	
  apifile: "{{datadir}}/appdata_no_appinst.yml"	

- name: verify provisioning is empty	
  actions: [ctrlapi-show]	
  compareyaml:	
    yaml1: "{{outputdir}}/show-commands.yml"	
    yaml2: "{{datadir}}/appdata_empty.yml"	
    filetype: appdata